USE [C:\Windows\NSRetailPOS\NSRETAILPOS.MDF]
GO
:ON ERROR EXIT
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.tables WHERE [object_id] = OBJECT_ID('OFFEREXCLUSION') )
BEGIN

	CREATE TABLE [dbo].[OFFEREXCLUSION](
		[OFFEREXCLUSIONID] [int] NULL,
		[OFFERID] [int] NULL,
		[EXCLUSIONID] [int] NULL,
		[ISCATEGORY] [bit] NULL,
		[CREATEDBY] [int] NULL,
		[CREATEDDATE] [datetime] NULL,
		[DELETEDBY] [int] NULL,
		[DELETEDDATE] [datetime] NULL
	) ON [PRIMARY]

END
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.types WHERE [name] = 'OFFEREXCLUSIONTYPE' )
BEGIN

	CREATE TYPE [dbo].[OFFEREXCLUSIONTYPE] AS TABLE(
		[OFFEREXCLUSIONID] [int] NOT NULL,
		[OFFERID] [int] NULL,
		[EXCLUSIONID] [int] NULL,
		[ISCATEGORY] [bit] NULL,
		[CREATEDBY] [int] NULL,
		[CREATEDDATE] [datetime] NULL,
		[DELETEDBY] [int] NULL,
		[DELETEDDATE] [datetime] NULL
	)

END
GO

CREATE OR ALTER PROC [dbo].[USP_CU_OFFEREXCLUSION]
(
	@OfferItemExclusion OFFEREXCLUSIONTYPE READONLY
)
AS
BEGIN

	UPDATE OFRIM
	SET
		OFRIM.OFFERID		 = UOFRIM.OFFERID
		, OFRIM.EXCLUSIONID		 = UOFRIM.EXCLUSIONID
		, OFRIM.ISCATEGORY	 = UOFRIM.ISCATEGORY
		, OFRIM.CREATEDBY	 = UOFRIM.CREATEDBY
		, OFRIM.CREATEDDATE	 = UOFRIM.CREATEDDATE
		, OFRIM.DELETEDBY	 = UOFRIM.DELETEDBY
		, OFRIM.DELETEDDATE	 = UOFRIM.DELETEDDATE
	FROM					  
		OFFEREXCLUSION OFRIM
		INNER JOIN @OfferItemExclusion UOFRIM ON UOFRIM.OFFEREXCLUSIONID = OFRIM.OFFEREXCLUSIONID

	INSERT INTO OFFEREXCLUSION(OFFEREXCLUSIONID,OFFERID,EXCLUSIONID,ISCATEGORY,CREATEDBY,CREATEDDATE,DELETEDBY,DELETEDDATE)
	SELECT OFFEREXCLUSIONID,OFFERID,EXCLUSIONID,ISCATEGORY,CREATEDBY,CREATEDDATE,DELETEDBY,DELETEDDATE
	FROM @OfferItemExclusion UOFRIM
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM OFFEREXCLUSION UOFRIMINNER 
			WHERE UOFRIMINNER.OFFEREXCLUSIONID = UOFRIM.OFFEREXCLUSIONID
		)

END
GO


/****** Object:  StoredProcedure [dbo].[POS_USP_R_GETBILLOFFERS]    Script Date: 10-11-2024 13:58:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[POS_USP_R_GETBILLOFFERS]
(
	@BillID INT
)
AS
BEGIN

	DECLARE @MaxDate DATE, @OfferID INT, @TotalBill DECIMAL(14, 2)
	SELECT @MaxDate = '2100-01-01'
	
	SELECT OFR.OFFERID, 0 AS SUBITEMSTOTAL
	INTO #AvailableOffers
	FROM
		POS_OFFER OFR
		INNER JOIN POS_OFFERBRANCH OFRB ON OFRB.OFFERID = OFR.OFFERID	
		INNER JOIN POS_OFFERTYPE OFRTYP ON OFRTYP.OFFERTYPEID = OFR.OFFERTYPEID
	WHERE 
		GETDATE() BETWEEN OFR.STARTDATE AND ISNULL(OFR.ENDDATE, @MaxDate)
		AND OFR.ISACTIVE = 1
		AND OFR.DELETEDDATE IS NULL
		AND OFRB.DELETEDDATE IS NULL
		AND OFRTYP.OFFERTYPEID = 1004

	IF EXISTS ( SELECT 1 FROM #AvailableOffers )
	BEGIN
		
		UPDATE AO
		SET SUBITEMSTOTAL = SUBTOTALS.SUBITEMSTOTAL
		FROM
			#AvailableOffers AO
			INNER JOIN 
				(
					SELECT AOINNER.OFFERID, SUM(PBD.BILLEDAMOUNT) SUBITEMSTOTAL
					FROM 
						POS_BILLDETAIL PBD						
						CROSS APPLY #AvailableOffers AOINNER
						INNER JOIN POS_ITEMPRICE IP ON IP.ITEMPRICEID = PBD.ITEMPRICEID
						INNER JOIN POS_ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
						INNER JOIN POS_ITEM I ON I.ITEMID = IC.ITEMID
					WHERE
						PBD.BILLID = @BillID
						AND PBD.DELETEDDATE IS NULL
						AND NOT EXISTS
							(
								SELECT 1 
								FROM OFFEREXCLUSION OE 
								WHERE 
									OE.ISCATEGORY = 0
									AND OE.EXCLUSIONID = IC.ITEMCODEID
									AND OE.OFFERID = AOINNER.OFFERID
									AND OE.DELETEDDATE IS NULL
							)
						AND NOT EXISTS
							(
								SELECT 1 
								FROM OFFEREXCLUSION OE 
								WHERE 
									OE.ISCATEGORY = 1
									AND OE.EXCLUSIONID = I.CATEGORYID
									AND OE.OFFERID = AOINNER.OFFERID
									AND OE.DELETEDDATE IS NULL
							)
					GROUP BY AOINNER.OFFERID						
				) SUBTOTALS ON SUBTOTALS.OFFERID = AO.OFFERID

		SELECT TOP 1 IP.ITEMPRICEID, I.SKUCODE, I.ITEMNAME, IC.ITEMCODE
			, IP.MRP, IP.SALEPRICE, ISNULL(OFR.OFFERTHRESHOLDPRICE, 0) ACTUALSALEPRICE
		FROM 
			#AvailableOffers AO
			INNER JOIN POS_OFFER OFR ON OFR.OFFERID = AO.OFFERID
			INNER JOIN POS_ITEMPRICE IP ON IP.ITEMPRICEID = OFR.FREEITEMPRICEID
			INNER JOIN POS_ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
			INNER JOIN POS_ITEM I ON I.ITEMID = IC.ITEMID
		WHERE OFR.OFFERVALUE <= AO.SUBITEMSTOTAL
		ORDER BY OFR.OFFERVALUE DESC

		RETURN
	END

	INSERT INTO #AvailableOffers
	SELECT OFR.OFFERID, 0
	FROM
		POS_OFFER OFR
		INNER JOIN POS_OFFERBRANCH OFRB ON OFRB.OFFERID = OFR.OFFERID	
		INNER JOIN POS_OFFERTYPE OFRTYP ON OFRTYP.OFFERTYPEID = OFR.OFFERTYPEID
	WHERE 
		GETDATE() BETWEEN OFR.STARTDATE AND ISNULL(OFR.ENDDATE, @MaxDate)
		AND OFR.ISACTIVE = 1
		AND OFR.DELETEDDATE IS NULL
		AND OFRB.DELETEDDATE IS NULL
		AND OFRTYP.OFFERTYPEID = 1005

	IF EXISTS ( SELECT 1 FROM #AvailableOffers )
	BEGIN

		UPDATE AO
		SET AO.SUBITEMSTOTAL = BA.BILLEDAMOUNT
		FROM
			#AvailableOffers AO			
			INNER JOIN 
				(
					SELECT OFRIM.OFFERID, SUM(PBD.BILLEDAMOUNT) AS BILLEDAMOUNT
					FROM
						POS_ITEMPRICE IP
						INNER JOIN POS_BILLDETAIL PBD ON PBD.ITEMPRICEID = IP.ITEMPRICEID
						INNER JOIN POS_OFFERITEMMAP OFRIM ON OFRIM.ITEMCODEID = IP.ITEMCODEID
					WHERE 
						PBD.DELETEDDATE IS NULL
						AND PBD.BILLID = @BillID
						AND OFRIM.DELETEDDATE IS NULL
					GROUP BY OFRIM.OFFERID
				) BA ON BA.OFFERID = AO.OFFERID
		
		
		SELECT TOP 1 IP.ITEMPRICEID, I.SKUCODE, I.ITEMNAME, IC.ITEMCODE
			, IP.MRP, IP.SALEPRICE, ISNULL(OFR.OFFERTHRESHOLDPRICE, 0) ACTUALSALEPRICE
		FROM 
			#AvailableOffers AO		
			INNER JOIN POS_OFFER OFR ON OFR.OFFERID = AO.OFFERID
			INNER JOIN POS_ITEMPRICE IP ON IP.ITEMPRICEID = OFR.FREEITEMPRICEID
			INNER JOIN POS_ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
			INNER JOIN POS_ITEM I ON I.ITEMID = IC.ITEMID
		WHERE OFR.OFFERVALUE <= AO.SUBITEMSTOTAL
		ORDER BY AO.SUBITEMSTOTAL DESC
		
		RETURN
	END

END
GO

/****** Object:  StoredProcedure [dbo].[POS_USP_FINISH_BILL]    Script Date: 28-11-2024 08:16:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER   PROCEDURE [dbo].[POS_USP_FINISH_BILL]      
 @BillID INT      
 , @UserID INT      
 , @DaySequenceID INT      
 , @CustomerNumber VARCHAR(10) = NULL      
 , @CustomerName VARCHAR(100) = NULL      
 , @CustomerGST VARCHAR(100) = NULL      
 , @Rounding DECIMAL(3, 2)
 , @IsDoorDelivery BIT
 , @TenderedCash DECIMAL(11, 2) = 0.00
 , @TenderedChange DECIMAL(11, 2) = 0.00
 , @MopValues  POS_BILLMOPVALUES READONLY      
AS      
BEGIN      
      
	INSERT INTO POS_BILLMOPDETAIL(BILLID, MOPID, MOPVALUE,CREATEDDATE)      
	SELECT @BillID, MOPID, MOPVALUE,GETDATE()  
	FROM @MopValues      
	WHERE MOPVALUE <> 0      
      
	UPDATE POS_BILL      
	SET       
		BILLSTATUS = 1      
		, CUSTOMERNAME = @CustomerName      
		, CUSTOMERNUMBER = @CustomerNumber 
		, CUSTOMERGST = @CustomerGST
		, ISDOORDELIVERY = @IsDoorDelivery
		, TENDEREDCASH = @TenderedCash
		, TENDEREDCHANGE = @TenderedChange
		, UPDATEDBY = @UserID      
		, UPDATEDDATE = GETDATE()
		, BILLCLOSEDBY = @UserID
		, BILLCLOSEDDATE = GETDATE()
		, ROUNDING = @Rounding  
	WHERE BILLID = @BillID       
       
	UPDATE POS_DAYSEQUENCE      
	SET LASTBILLID = @BillID, UPDATEDATE = GETDATE()
	WHERE DAYSEQUENCEID = @DaySequenceID      
      
	EXEC POS_USP_R_GETNEXTBILL @UserID, @DaySequenceID    
 
END
GO

/****** Object:  StoredProcedure [dbo].[POS_USP_RPT_DAYCLOSURE]    Script Date: 28-11-2024 08:12:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[POS_USP_RPT_DAYCLOSURE]        
@DAYCLOSUREID INT      
AS        
BEGIN        

	DECLARE @REFUNDAMOUNT DECIMAL(10,2) = 0

	SELECT @REFUNDAMOUNT = REFUNDAMOUNT 
	FROM POS_DAYCLOSURE 
	WHERE DAYCLOSUREID = @DAYCLOSUREID

	SELECT
		DAYCLOSUREID, CLOSUREDATE, OPENINGBALANCE, CLOSINGBALANCE, CLOSINGDIFFERENCE, CLOSEDBY, REFUNDAMOUNT, CREATEDDATE
	FROM POS_DAYCLOSURE      
	WHERE DAYCLOSUREID = @DAYCLOSUREID
        
	SELECT 
		DEN.DENOMINATIONID, DEN.DISPLAYVALUE, DCD.CLOSUREVALUE, DEN.MULTIPLIER  
	FROM 
		POS_DAYCLOSUREDETAIL DCD       
		INNER JOIN POS_DENOMINATION DEN ON DCD.DENOMINATIONID = DEN.DENOMINATIONID      
	WHERE DAYCLOSUREID = @DAYCLOSUREID      
	ORDER BY DEN.DENOMINATIONID      

	SELECT 
		MOP.MOPID,MOP.MOPNAME,
		CASE WHEN MOP.MOPID = 1 THEN ISNULL(BMOP.MOPVALUE,0) - @REFUNDAMOUNT ELSE ISNULL(BMOP.MOPVALUE,0) END AS MOPVALUE
	FROM 
		POS_TBLMOP MOP
		LEFT JOIN 
			(
				SELECT MOPID, SUM(MOPVALUE) AS MOPVALUE 
				FROM 
					POS_BILLMOPDETAIL BM
					INNER JOIN POS_BILL B ON BM.BILLID = B.BILLID
				WHERE B.DAYCLOSUREID = @DAYCLOSUREID GROUP BY MOPID
			) AS BMOP ON MOP.MOPID = BMOP.MOPID                    
	ORDER BY MOP.MOPID                         
      
	DECLARE @COMPLETEDBILLS INT = 0, @DRAFTBILLS INT = 0, @VOIDITEMS INT = 0      
      
	SELECT @VOIDITEMS = COUNT(*)      
	FROM POS_BILLDETAIL       
	WHERE DAYCLOSUREID = @DAYCLOSUREID AND DELETEDDATE IS NOT NULL      
      
	SELECT @COMPLETEDBILLS = COUNT(*) FROM POS_BILL       
	WHERE DAYCLOSUREID = @DAYCLOSUREID AND BILLSTATUS = 1      
      
	SELECT @DRAFTBILLS = COUNT(*) FROM POS_BILL       
	WHERE DAYCLOSUREID = @DAYCLOSUREID AND BILLSTATUS = 2      
      
	SELECT @COMPLETEDBILLS AS COMPLETEDBILLS, @DRAFTBILLS AS DRAFTBILLS, @VOIDITEMS AS VOIDITEMS      

	SELECT CU.USERNAME, MOP.MOPNAME, SUM(PBMD.MOPVALUE) TOTALMOPVALUE
	FROM 
		POS_BILL PB
		INNER JOIN POS_BILLMOPDETAIL PBMD ON PBMD.BILLID = PB.BILLID
		INNER JOIN POS_TBLMOP MOP ON MOP.MOPID = PBMD.MOPID
		INNER JOIN POS_TBLUSER CU ON CU.USERID = PB.BILLCLOSEDBY --PB.CREATEDBY
	WHERE
		PB.DAYCLOSUREID = @DAYCLOSUREID 
		AND PBMD.DAYCLOSUREID = @DAYCLOSUREID
		AND PB.BILLSTATUS = 1
     GROUP BY CU.USERNAME, MOP.MOPNAME
     ORDER BY CU.USERNAME, MOP.MOPNAME

END
GO

/****** Object:  StoredProcedure [dbo].[POS_USP_DRAFT_BILL]    Script Date: 30-11-2024 21:13:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[POS_USP_DISCARD_BILL]  
 @BillID INT  
 , @UserID INT  
 , @DaySequenceID INT  
AS  
BEGIN  

	UPDATE POS_BILL  
	SET
		DELETEDBY = @UserID  
		, DELETEDDATE = GETDATE()  
	WHERE BILLID = @BillID   

	UPDATE POS_BILLDETAIL
	SET DELETEDDATE = GETDATE()  
	WHERE BILLID = @BillID AND DELETEDDATE IS NULL
   
	EXEC POS_USP_R_GETNEXTBILL @UserID, @DaySequenceID  
END  
GO

/****** Object:  StoredProcedure [dbo].[POS_USP_R_GETNEXTBILL]    Script Date: 01-12-2024 11:09:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[POS_USP_R_GETNEXTBILL]    
 @UserID INT    
 , @DaySequenceID INT    
AS    
BEGIN    
	DECLARE @BillID INT, @BillStatus INT   
	
	SELECT @BillID = OPENBILLID, @BillStatus = PB.BILLSTATUS        
	FROM 
		POS_DAYSEQUENCE DS
		INNER JOIN POS_BILL PB ON PB.BILLID = DS.OPENBILLID
	WHERE DAYSEQUENCEID = @DaySequenceID AND PB.DELETEDDATE IS NULL  

	IF ISNULL(@BillID, 0) = 0 OR @BillStatus <> 0 
	BEGIN
		DECLARE @BillNumber VARCHAR(30)    
		SELECT @BillNumber = DS.LASTUSEDBILLNUM FROM POS_DAYSEQUENCE DS WHERE DS.DAYSEQUENCEID = @DaySequenceID     
    
		SELECT @BillNumber = LEFT(@BillNumber, LEN(@BillNumber) - 4) + RIGHT('000' + CAST((CAST(RIGHT(@BillNumber, 4) AS INT) + 1) as VARCHAR(5)), 4)    
    
		INSERT INTO POS_BILL(BILLNUMBER, BILLSTATUS, CREATEDBY, CREATEDDATE)    
		SELECT @BillNumber, 0, @UserID, GETDATE()    
      
		SET @BillID = SCOPE_IDENTITY()  
		
		UPDATE POS_DAYSEQUENCE    
		SET LASTUSEDBILLNUM = @BillNumber
			, OPENBILLID = @BillID    
			,UPDATEDATE = GETDATE()
		WHERE DAYSEQUENCEID = @DaySequenceID  
	END

	EXEC POS_USP_R_BILL @BillID, @DaySequenceID    
END    
GO

UPDATE TBLCONFIG SET CONFIGVALUE = '1.6.9' WHERE CONFIGID = 1
GO