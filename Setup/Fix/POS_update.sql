USE [C:\Windows\NSRetailPOS\NSRETAILPOS.MDF]
GO
:ON ERROR EXIT
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.tables WHERE [object_id] = OBJECT_ID('OFFEREXCLUSION') )
BEGIN

	CREATE TABLE [dbo].[OFFEREXCLUSION](
		[OFFEREXCLUSIONID] [int] NULL,
		[OFFERID] [int] NULL,
		[EXCLUSIONID] [int] NULL,
		[ISCATEGORY] [bit] NULL,
		[CREATEDBY] [int] NULL,
		[CREATEDDATE] [datetime] NULL,
		[DELETEDBY] [int] NULL,
		[DELETEDDATE] [datetime] NULL
	) ON [PRIMARY]

END
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.types WHERE [name] = 'OFFEREXCLUSIONTYPE' )
BEGIN

	CREATE TYPE [dbo].[OFFEREXCLUSIONTYPE] AS TABLE(
		[OFFEREXCLUSIONID] [int] NOT NULL,
		[OFFERID] [int] NULL,
		[EXCLUSIONID] [int] NULL,
		[ISCATEGORY] [bit] NULL,
		[CREATEDBY] [int] NULL,
		[CREATEDDATE] [datetime] NULL,
		[DELETEDBY] [int] NULL,
		[DELETEDDATE] [datetime] NULL
	)

END
GO

CREATE OR ALTER PROC [dbo].[USP_CU_OFFEREXCLUSION]
(
	@OfferItemExclusion OFFEREXCLUSIONTYPE READONLY
)
AS
BEGIN

	UPDATE OFRIM
	SET
		OFRIM.OFFERID		 = UOFRIM.OFFERID
		, OFRIM.EXCLUSIONID		 = UOFRIM.EXCLUSIONID
		, OFRIM.ISCATEGORY	 = UOFRIM.ISCATEGORY
		, OFRIM.CREATEDBY	 = UOFRIM.CREATEDBY
		, OFRIM.CREATEDDATE	 = UOFRIM.CREATEDDATE
		, OFRIM.DELETEDBY	 = UOFRIM.DELETEDBY
		, OFRIM.DELETEDDATE	 = UOFRIM.DELETEDDATE
	FROM					  
		OFFEREXCLUSION OFRIM
		INNER JOIN @OfferItemExclusion UOFRIM ON UOFRIM.OFFEREXCLUSIONID = OFRIM.OFFEREXCLUSIONID

	INSERT INTO OFFEREXCLUSION(OFFEREXCLUSIONID,OFFERID,EXCLUSIONID,ISCATEGORY,CREATEDBY,CREATEDDATE,DELETEDBY,DELETEDDATE)
	SELECT OFFEREXCLUSIONID,OFFERID,EXCLUSIONID,ISCATEGORY,CREATEDBY,CREATEDDATE,DELETEDBY,DELETEDDATE
	FROM @OfferItemExclusion UOFRIM
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM OFFEREXCLUSION UOFRIMINNER 
			WHERE UOFRIMINNER.OFFEREXCLUSIONID = UOFRIM.OFFEREXCLUSIONID
		)

END
GO


/****** Object:  StoredProcedure [dbo].[POS_USP_R_GETBILLOFFERS]    Script Date: 10-11-2024 13:58:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[POS_USP_R_GETBILLOFFERS]
(
	@BillID INT
)
AS
BEGIN

	DECLARE @MaxDate DATE, @OfferID INT, @TotalBill DECIMAL(14, 2)
	SELECT @MaxDate = '2100-01-01'
	
	SELECT OFR.OFFERID, 0 AS SUBITEMSTOTAL
	INTO #AvailableOffers
	FROM
		POS_OFFER OFR
		INNER JOIN POS_OFFERBRANCH OFRB ON OFRB.OFFERID = OFR.OFFERID	
		INNER JOIN POS_OFFERTYPE OFRTYP ON OFRTYP.OFFERTYPEID = OFR.OFFERTYPEID
	WHERE 
		GETDATE() BETWEEN OFR.STARTDATE AND ISNULL(OFR.ENDDATE, @MaxDate)
		AND OFR.ISACTIVE = 1
		AND OFR.DELETEDDATE IS NULL
		AND OFRB.DELETEDDATE IS NULL
		AND OFRTYP.OFFERTYPEID = 1004

	IF EXISTS ( SELECT 1 FROM #AvailableOffers )
	BEGIN
		
		UPDATE AO
		SET SUBITEMSTOTAL = SUBTOTALS.SUBITEMSTOTAL
		FROM
			#AvailableOffers AO
			INNER JOIN 
				(
					SELECT AOINNER.OFFERID, SUM(PBD.BILLEDAMOUNT) SUBITEMSTOTAL
					FROM 
						POS_BILLDETAIL PBD						
						CROSS APPLY #AvailableOffers AOINNER
						INNER JOIN POS_ITEMPRICE IP ON IP.ITEMPRICEID = PBD.ITEMPRICEID
						INNER JOIN POS_ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
						INNER JOIN POS_ITEM I ON I.ITEMID = IC.ITEMID
					WHERE
						PBD.BILLID = @BillID
						AND PBD.DELETEDDATE IS NULL
						AND NOT EXISTS
							(
								SELECT 1 
								FROM OFFEREXCLUSION OE 
								WHERE 
									OE.ISCATEGORY = 0
									AND OE.EXCLUSIONID = IC.ITEMCODEID
									AND OE.OFFERID = AOINNER.OFFERID
									AND OE.DELETEDDATE IS NULL
							)
						AND NOT EXISTS
							(
								SELECT 1 
								FROM OFFEREXCLUSION OE 
								WHERE 
									OE.ISCATEGORY = 1
									AND OE.EXCLUSIONID = I.CATEGORYID
									AND OE.OFFERID = AOINNER.OFFERID
									AND OE.DELETEDDATE IS NULL
							)
					GROUP BY AOINNER.OFFERID						
				) SUBTOTALS ON SUBTOTALS.OFFERID = AO.OFFERID

		SELECT TOP 1 IP.ITEMPRICEID, I.SKUCODE, I.ITEMNAME, IC.ITEMCODE
			, IP.MRP, IP.SALEPRICE, ISNULL(OFR.OFFERTHRESHOLDPRICE, 0) ACTUALSALEPRICE
		FROM 
			#AvailableOffers AO
			INNER JOIN POS_OFFER OFR ON OFR.OFFERID = AO.OFFERID
			INNER JOIN POS_ITEMPRICE IP ON IP.ITEMPRICEID = OFR.FREEITEMPRICEID
			INNER JOIN POS_ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
			INNER JOIN POS_ITEM I ON I.ITEMID = IC.ITEMID
		WHERE OFR.OFFERVALUE <= AO.SUBITEMSTOTAL
		ORDER BY OFR.OFFERVALUE DESC

		RETURN
	END

	INSERT INTO #AvailableOffers
	SELECT OFR.OFFERID, 0
	FROM
		POS_OFFER OFR
		INNER JOIN POS_OFFERBRANCH OFRB ON OFRB.OFFERID = OFR.OFFERID	
		INNER JOIN POS_OFFERTYPE OFRTYP ON OFRTYP.OFFERTYPEID = OFR.OFFERTYPEID
	WHERE 
		GETDATE() BETWEEN OFR.STARTDATE AND ISNULL(OFR.ENDDATE, @MaxDate)
		AND OFR.ISACTIVE = 1
		AND OFR.DELETEDDATE IS NULL
		AND OFRB.DELETEDDATE IS NULL
		AND OFRTYP.OFFERTYPEID = 1005

	IF EXISTS ( SELECT 1 FROM #AvailableOffers )
	BEGIN

		UPDATE AO
		SET AO.SUBITEMSTOTAL = BA.BILLEDAMOUNT
		FROM
			#AvailableOffers AO			
			INNER JOIN 
				(
					SELECT OFRIM.OFFERID, SUM(PBD.BILLEDAMOUNT) AS BILLEDAMOUNT
					FROM
						POS_ITEMPRICE IP
						INNER JOIN POS_BILLDETAIL PBD ON PBD.ITEMPRICEID = IP.ITEMPRICEID
						INNER JOIN POS_OFFERITEMMAP OFRIM ON OFRIM.ITEMCODEID = IP.ITEMCODEID
					WHERE 
						PBD.DELETEDDATE IS NULL
						AND PBD.BILLID = @BillID
						AND OFRIM.DELETEDDATE IS NULL
					GROUP BY OFRIM.OFFERID
				) BA ON BA.OFFERID = AO.OFFERID
		
		
		SELECT TOP 1 IP.ITEMPRICEID, I.SKUCODE, I.ITEMNAME, IC.ITEMCODE
			, IP.MRP, IP.SALEPRICE, ISNULL(OFR.OFFERTHRESHOLDPRICE, 0) ACTUALSALEPRICE
		FROM 
			#AvailableOffers AO		
			INNER JOIN POS_OFFER OFR ON OFR.OFFERID = AO.OFFERID
			INNER JOIN POS_ITEMPRICE IP ON IP.ITEMPRICEID = OFR.FREEITEMPRICEID
			INNER JOIN POS_ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
			INNER JOIN POS_ITEM I ON I.ITEMID = IC.ITEMID
		WHERE OFR.OFFERVALUE <= AO.SUBITEMSTOTAL
		ORDER BY AO.SUBITEMSTOTAL DESC
		
		RETURN
	END

END
GO

UPDATE TBLCONFIG SET CONFIGVALUE = '1.6.7' WHERE CONFIGID = 1
GO