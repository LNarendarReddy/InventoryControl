ALTER PROCEDURE [dbo].[USP_U_STOCKENTRY]                      
@STOCKENTRYID INT ,                
@TCS DECIMAL(10,2) = 0,                
@DISCOUNTPER DECIMAL(10,2) = 0,                
@DISCOUNTFLAT DECIMAL(10,2) = 0,                
@EXPENSES DECIMAL(10,2) = 0,                
@TRANSPORT DECIMAL(10,2)= 0                
                
AS                      
BEGIN                      
                      
	UPDATE STOCKENTRY 
	SET STATUS = 1,                
		TCS = @TCS,                
		DISCOUNTPER = @DISCOUNTPER,                
		DISCOUNT = @DISCOUNTFLAT,                
		EXPENSES = @EXPENSES,                
		TRANSPORT = @TRANSPORT                
	WHERE STOCKENTRYID = @STOCKENTRYID               

	UPDATE ICP
	SET QUANTITY = ISNULL(ICP.QUANTITY, 0) + ISNULL(SED.QUANTITY, 0), 
		WEIGHTINKGS = ISNULL(ICP.WEIGHTINKGS, 0.00) + ISNULL(SED.WEIGHTINKGS, 0.00) 
	FROM
		ITEMCOSTPRICE ICP
		INNER JOIN STOCKENTRYDETAIL SED ON SED.ITEMCOSTPRICEID = ICP.ITEMCOSTPRICEID
	WHERE SED.STOCKENTRYID = @STOCKENTRYID
		AND SED.DELETEDDATE IS NULL
                
	DECLARE @WareHouseID INT , @BulkwarehouseID INT
	SELECT @WareHouseID = BRANCHID FROM BRANCH WHERE BRANCHCODE = 'RVH'
	SELECT @BulkwarehouseID = BRANCHID FROM BRANCH WHERE BRANCHCODE = 'BULK'
    
	UPDATE SS    
	SET SS.QUANTITY = SS.QUANTITY + SED.QUANTITY,    
		SS.TTYPE = 'SE'
	FROM STOCKSUMMARY SS 
	INNER JOIN 
	(
		SELECT ICP.ITEMPRICEID,SUM(SED.QUANTITY) AS QUANTITY,SUM(SED.WEIGHTINKGS) AS WEIGHTINKGS     
		FROM STOCKENTRYDETAIL SED      
			INNER JOIN ITEMCOSTPRICE ICP ON SED.ITEMCOSTPRICEID = ICP.ITEMCOSTPRICEID    
			INNER JOIN ITEMPRICE IP ON ICP.ITEMPRICEID = IP.ITEMPRICEID
			INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
			INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID
		WHERE STOCKENTRYID = @STOCKENTRYID 
			AND SED.DELETEDDATE IS NULL 
			AND ISNULL(I.ISOPENITEM,0) = 0
		GROUP BY ICP.ITEMPRICEID
	) SED ON SS.ITEMPRICEID = SED.ITEMPRICEID
	WHERE SS.BRANCHID = @WareHouseID  


	UPDATE SS    
	SET 
		SS.WEIGHTINKGS = SS.WEIGHTINKGS + SED.WEIGHTINKGS    ,
		SS.TTYPE = 'SE'
	FROM STOCKSUMMARY SS 
	INNER JOIN 
	(
		SELECT ICP.ITEMPRICEID,SUM(SED.QUANTITY) AS QUANTITY,SUM(SED.WEIGHTINKGS) AS WEIGHTINKGS     
		FROM STOCKENTRYDETAIL SED      
			INNER JOIN ITEMCOSTPRICE ICP ON SED.ITEMCOSTPRICEID = ICP.ITEMCOSTPRICEID    
			INNER JOIN ITEMPRICE IP ON ICP.ITEMPRICEID = IP.ITEMPRICEID
			INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
			INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID
		WHERE STOCKENTRYID = @STOCKENTRYID 
			AND SED.DELETEDDATE IS NULL 
			AND ISNULL(I.ISOPENITEM,0) = 1
		GROUP BY ICP.ITEMPRICEID
	) SED ON SS.ITEMPRICEID = SED.ITEMPRICEID
	WHERE SS.BRANCHID = @WareHouseID
    
END 
GO
ALTER PROCEDURE [dbo].[USP_R_USERLOGIN]      
@USERNAME NVARCHAR(100),                                              
@PASSWORD NVARCHAR(100), 
@APPVERSION VARCHAR(10) = NULL                            
AS                                              
BEGIN                                              

	IF(SELECT CONFIGVALUE FROM CONFIG WHERE CONFIGNAME = 'APPVERSION') <> ISNULL(@APPVERSION, '')
	BEGIN
		SELECT 'Application version mismatch. please install version ' + CONFIGVALUE FROM CONFIG WHERE CONFIGNAME = 'APPVERSION'
		RETURN
	END
                                              
	DECLARE @USERID INT = 0 , @isWarehouse Bit
                                      
	SELECT 
		@USERID = USERID, 
		@isWarehouse = isnull(ISWAREHOUSE,0)
	FROM TBLUSER U
		INNER JOIN BRANCH B ON U.BRANCHID = B.BRANCHID
	WHERE USERNAME = @USERNAME      
		AND PASSWORDSTRING = @PASSWORD 
		AND U.DELETEDBY IS NULL      

	IF(@USERID > 0 AND @isWarehouse = 0)
	BEGIN

		SELECT 'User does not belongs to warehouse'
		RETURN;

	END


	IF (@USERID > 0)                                              
	BEGIN                                              

		SELECT                                              
		U.USERID,                                              
		U.USERNAME,                                              
		U.FULLNAME,                                              
		U.PASSWORDSTRING,                            
		U.CNUMBER,                            
		U.EMAIL,      
		U.GENDER,      
		isnull(U.ISOTP,0) as ISOTP,       
		U.REPORTINGLEADID,      
		RL.FullName AS REPORTINGLEAD,      
		U.ROLEID,      
		R.ROLENAME,      
		U.CATEGORYID,      
		C.CATEGORYNAME,      
		U.BRANCHID,      
		B.BRANCHNAME,  
		ISNULL(C.ALLOWOPENITEMS,0) AS ALLOWOPENITEMS  
		FROM TBLUSER U                         
		left JOIN TBLROLE R on U.ROLEID = R.ROLEID      
		left JOIN TBLUSER RL on U.REPORTINGLEADID = RL.USERID      
		left JOIN TBLCATEGORY C on U.CATEGORYID = C.CATEGORYID      
		left JOIN BRANCH B on U.BRANCHID = B.BRANCHID      
		WHERE U.USERID = @USERID      
    
		EXEC USP_R_PRINTERSETTINGS @USERID    
                                             
	END                                              
	ELSE                                              
		SELECT 'Invalid Username or Password'                                              
                                              
END   
GO
ALTER PROCEDURE [dbo].[USP_R_CURRENTSTOCK]    
@FROMBRANCHID INT,    
@TOBRANCHID INT,    
@ITEMCODEID INT,    
@PARENTITEMID INT = 0    
    
AS    
BEGIN    
    
	DECLARE @FROMBRANCHSTCK DECIMAL(18,2) = 0,@TOBRANCHSTOCK DECIMAL(18,2) = 0, @isWarehouse BIT = 0, @isOpenItem BIT = 0
	SELECT @isWarehouse = ISNULL(ISWAREHOUSE,0) FROM BRANCH WHERE BRANCHID = @TOBRANCHID
	SELECT @isOpenItem = ISNULL(I.ISOPENITEM,0) FROM ITEMCODE IC INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID WHERE IC.ITEMCODEID = @ITEMCODEID

	IF(@isWarehouse = 1  AND (@PARENTITEMID > 0 OR @isOpenItem = 1))
	BEGIN
		IF(@isOpenItem = 1)
		BEGIN
			
			SELECT @FROMBRANCHSTCK = SUM(WEIGHTINKGS)
			FROM STOCKSUMMARY SS    
			INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
			WHERE BRANCHID = @FROMBRANCHID AND IP.ITEMCODEID = @ITEMCODEID

		END
		ELSE
		BEGIN

			SELECT @FROMBRANCHSTCK = SUM(WEIGHTINKGS)
			FROM STOCKSUMMARY SS    
			INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
			INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID    
			INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID    
			WHERE BRANCHID = @FROMBRANCHID AND I.ITEMID = @PARENTITEMID    

		END
	END
	
	IF(@isWarehouse = 0)
	BEGIN    
  
		SELECT @FROMBRANCHSTCK = CASE WHEN @isOpenItem = 1 THEN SUM(WEIGHTINKGS) ELSE SUM(QUANTITY) END
		FROM STOCKSUMMARY SS   
		INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
		WHERE BRANCHID = @FROMBRANCHID AND IP.ITEMCODEID = @ITEMCODEID      
  
	END    
      
	SELECT @TOBRANCHSTOCK = CASE WHEN @isOpenItem = 1 THEN SUM(WEIGHTINKGS) ELSE SUM(QUANTITY) END
	FROM STOCKSUMMARY SS  
	INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
	WHERE BRANCHID = @TOBRANCHID AND IP.ITEMCODEID = @ITEMCODEID  

	SELECT @FROMBRANCHSTCK, @TOBRANCHSTOCK    
    
END 
GO
ALTER PROCEDURE [dbo].[USP_U_STOCKDISPATCH]                      
@STOCKDISPATCHID INT                      
AS                      
BEGIN                      

	--Get branch details      
	DECLARE @FROMBRANCHID INT ,@TOBRANCHID INT,@SNO INT, @BRANCHCODE VARCHAR(20)
	
	SELECT 
		@FROMBRANCHID = FROMBRANCHID, 
		@TOBRANCHID = TOBRANCHID       
	FROM STOCKDISPATCH 
	WHERE STOCKDISPATCHID = @STOCKDISPATCHID            
	
	SELECT 
		@BRANCHCODE = BRANCHCODE 
	FROM BRANCH 
	WHERE BRANCHID = @TOBRANCHID  
	
	SELECT @SNO = ISNULL(MAX(SNO),0) + 1 FROM STOCKDISPATCH 

	--Update stock stockdispatch status                      
	UPDATE STOCKDISPATCH 
	SET 
		DISPATCHNUMBER = @BRANCHCODE + REPLACE(CONVERT(VARCHAR(10), CREATEDDATE,111),'/','') + 
		RIGHT('0000000' + CAST(@SNO AS VARCHAR(10)),10),
		SNO = @SNO,
		STATUS = 1,
		UPDATEDATE = GETDATE()       
	WHERE STOCKDISPATCHID = @STOCKDISPATCHID                      

	--Adding stock to branch              
	UPDATE SS SET 
		SS.QUANTITY = ISNULL(SS.QUANTITY,0) + SDD.QUANTITY,      
		SS.WEIGHTINKGS = ISNULL(SS.WEIGHTINKGS,0) + SDD.WEIGHTINKGS,
		SS.TTYPE = 'SD'
	FROM STOCKSUMMARY SS      
	INNER JOIN        
	(
		SELECT SDD.ITEMPRICEID,
		SUM(DISPATCHQUANTITY) AS QUANTITY, 
		SUM(WEIGHTINKGS) AS WEIGHTINKGS       
		FROM STOCKDISPATCHDETAIL SDD 
		WHERE STOCKDISPATCHID = @STOCKDISPATCHID 
				and SDD.DELETEDDATE is null 
				GROUP BY SDD.ITEMPRICEID
	) SDD ON SS.ITEMPRICEID = SDD.ITEMPRICEID
	WHERE SS.BRANCHID = @TOBRANCHID      
      
--updating warehosue stock      
      
	UPDATE SS      
		SET SS.QUANTITY = ISNULL(SS.QUANTITY,0) - SDD.QUANTITY,      
		SS.WEIGHTINKGS = ISNULL(SS.WEIGHTINKGS,0) - SDD.WEIGHTINKGS      ,
		SS.TTYPE = 'SD'
	FROM STOCKSUMMARY SS      
		INNER JOIN        
	(
		SELECT SDD.ITEMPRICEID,
			SUM(DISPATCHQUANTITY) AS QUANTITY,
			SUM(WEIGHTINKGS) AS WEIGHTINKGS    
		FROM STOCKDISPATCHDETAIL SDD 
			INNER JOIN ITEMPRICE IP ON SDD.ITEMPRICEID = IP.ITEMPRICEID        
			INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID        
			INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID 
		WHERE STOCKDISPATCHID = @STOCKDISPATCHID         
			AND SDD.DELETEDDATE IS NULL  
			AND (I.PARENTITEMID IS NULL OR ISNULL(I.ISOPENITEM,0) = 1)   
		GROUP BY SDD.ITEMPRICEID
	)SDD ON SS.ITEMPRICEID = SDD.ITEMPRICEID
	WHERE SS.BRANCHID = @FROMBRANCHID      
      
--updating warehouse stock in weight in kgs      

	IF EXISTS(SELECT 1 FROM BRANCH WHERE BRANCHID = @TOBRANCHID AND ISNULL(ISWAREHOUSE,0) = 1)
	BEGIN
		UPDATE SS      
			SET SS.QUANTITY = 0,      
			SS.WEIGHTINKGS = ISNULL(SS.WEIGHTINKGS,0) - ISNULL(SDD.WEIGHTINKGS, 0),
			SS.TTYPE = 'SD'
		FROM 
			STOCKSUMMARY SS      
			INNER JOIN        
				(
					SELECT SUM(SDD.DISPATCHQUANTITY * U.MULTIPLIER) AS WEIGHTINKGS, PIP.ITEMPRICEID AS PARENTITEMPRICEID
					FROM 
						(
							SELECT IC.ITEMID,
								SUM(DISPATCHQUANTITY) AS DISPATCHQUANTITY,
								SUM(WEIGHTINKGS) AS WEIGHTINKGS      
							FROM 
								STOCKDISPATCHDETAIL SDD     
								INNER JOIN ITEMPRICE IP ON SDD.ITEMPRICEID = IP.ITEMPRICEID        
								INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID        
							WHERE
								STOCKDISPATCHID = @STOCKDISPATCHID   
									AND SDD.DELETEDDATE IS NULL  
								GROUP BY IC.ITEMID
						) SDD         
						INNER JOIN ITEM I ON SDD.ITEMID = I.ITEMID        
						LEFT JOIN UOM U ON I.UOMID = U.UOMID        
						INNER JOIN ITEM PITEM ON I.PARENTITEMID = PITEM.ITEMID        
						INNER JOIN ITEMCODE PIC ON PITEM.ITEMID = PIC.ITEMID        
						INNER JOIN ITEMPRICE PIP ON PIC.ITEMCODEID = PIP.ITEMCODEID
					WHERE  
						I.PARENTITEMID IS NOT NULL AND ISNULL(I.ISOPENITEM, 0) = 0 
					GROUP BY PIP.ITEMPRICEID
				) SDD ON SS.ITEMPRICEID = SDD.PARENTITEMPRICEID      
		WHERE SS.BRANCHID = @FROMBRANCHID      
     END

END
GO