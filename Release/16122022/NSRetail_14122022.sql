ALTER TABLE ITEMPRICE
ADD BRANCHID INT NULL
GO 
ALTER TABLE ITEMPRICE
ADD PARENTITEMPRICEID INT NULL
GO
ALTER PROCEDURE [dbo].[USP_R_ITEMMRPLIST]          
@ITEMCODEID NVARCHAR(20)          
AS          
BEGIN          
          
	SELECT 
		IP.ITEMPRICEID,         
		IP.MRP,        
		IP.SALEPRICE,      
		IP.GSTID,      
		GD.GSTCODE,      
		GD.CGST,      
		GD.SGST,      
		GD.IGST,      
		GD.CESS      
	FROM ITEMPRICE IP      
		INNER JOIN GSTDETAIL GD ON IP.GSTID = GD.GSTID      
	WHERE ITEMCODEID = @ITEMCODEID          
		AND IP.DELETEDDATE IS NULL
		AND BRANCHID IS NULL
	ORDER BY IP.ITEMPRICEID desc
          
END  
GO
ALTER PROCEDURE USP_CU_BRANCHITEMPRICE
@ITEMPRICEID INT = 0,
@PARENTITEMPRICEID INT,
@SALEPRICE DECIMAL(18,2),
@BRANCHID INT,
@USERID INT
AS
BEGIN
	
	IF EXISTS(SELECT 1 FROM ITEMPRICE WHERE ITEMPRICEID = @PARENTITEMPRICEID AND SALEPRICE = @SALEPRICE  AND DELETEDDATE IS NULL)
	BEGIN
		SELECT 'Saleprice already exists! Enter different value to create new one.'
		RETURN;
	END

	IF EXISTS(SELECT 1 FROM ITEMPRICE WHERE ITEMPRICEID = @ITEMPRICEID AND SALEPRICE <> @SALEPRICE AND DELETEDDATE IS NULL)
	BEGIN
		UPDATE ITEMPRICE SET DELETEDBY = @USERID, DELETEDDATE = GETDATE()
		WHERE ITEMPRICEID = @ITEMPRICEID
		
		SET @ITEMPRICEID = 0
	END

	IF(@ITEMPRICEID = 0)
	BEGIN
		INSERT INTO ITEMPRICE
		(
			ITEMCODEID
			,SALEPRICE
			,MRP
			,GSTID
			,CREATEDBY
			,CREATEDDATE
			,BRANCHID
			,PARENTITEMPRICEID
		)
		SELECT 
			ITEMCODEID
			,@SALEPRICE
			,MRP
			,GSTID
			,@USERID
			,GETDATE()
			,@BRANCHID
			,@PARENTITEMPRICEID
		FROM ITEMPRICE 
		WHERE ITEMPRICEID = @PARENTITEMPRICEID

		SET @ITEMPRICEID = SCOPE_IDENTITY()
	END

	SELECT @ITEMPRICEID

END
GO
CREATE PROCEDURE USP_D_BRANCHITEMPRICE
@ITEMPRICEID INT,
@USERID INT
AS
BEGIN

	UPDATE ITEMPRICE 
	SET 
		DELETEDBY = @USERID, 
		DELETEDDATE = GETDATE()
	WHERE ITEMPRICEID = @ITEMPRICEID

END
GO
ALTER PROC [dbo].[USP_R_ITEMVISUALIZER]          
@ItemID INT          
AS          
BEGIN          
          
	SELECT I.ITEMNAME, I.SKUCODE, I.DESCRIPTION          
	FROM ITEM I          
	WHERE I.ITEMID = @ItemID          
          
	SELECT           
		IP.ITEMPRICEID          
		, IP.ITEMCODEID          
		, IC.ITEMCODE          
		, ICP.COSTPRICEWT          
		, ICP.COSTPRICEWOT          
		, IP.SALEPRICE          
		, IP.MRP          
		, IP.GSTID          
		, GST.GSTCODE          
		, CU.FULLNAME AS CREATEDBY          
		, IP.CREATEDDATE          
		, UU.FULLNAME AS UPDATEDBY          
		, IP.UPDATEDATE          
	FROM  ITEMPRICE IP          
		INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID          
		INNER JOIN GSTDETAIL GST ON GST.GSTID = IP.GSTID          
		LEFT JOIN ITEMCOSTPRICE ICP ON ICP.ITEMPRICEID = IP.ITEMPRICEID        
		LEFT JOIN TBLUSER CU ON CU.USERID = IP.CREATEDBY          
		LEFT JOIN TBLUSER UU ON UU.USERID = IP.UPDATEDBY          
	WHERE IC.ITEMID = @ItemID AND IP.BRANCHID IS NULL
          
	SELECT 
		IC.ITEMCODEID
		, IC.ITEMCODE
		, SS.BRANCHID          
		, B.BRANCHNAME          
		, SUM(SS.QUANTITY) AS QUANTITY
		, SUM(SS.WEIGHTINKGS) AS WEIGHTINKGS
	FROM           
	STOCKSUMMARY SS          
	INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
	INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID  
	INNER JOIN BRANCH B ON B.BRANCHID = SS.BRANCHID  
	WHERE IC.ITEMID = @ItemID  AND B.DELETEDDATE IS NULL
	GROUP BY 
		IC.ITEMCODEID
		, IC.ITEMCODE
		, SS.BRANCHID          
		, B.BRANCHNAME  

	SELECT 
		IP.ITEMPRICEID,
		IP.PARENTITEMPRICEID,
		B.BRANCHNAME,
		IP.SALEPRICE
	FROM ITEMPRICE IP
		INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
		INNER JOIN BRANCH B ON IP.BRANCHID = B.BRANCHID
	WHERE IC.ITEMID = @ItemID 
		AND IP.DELETEDDATE IS NULL
		AND IP.BRANCHID IS NOT NULL
          
END 
GO
ALTER PROC [dbo].[USP_R_ITEMCODE]    
@ItemCodeID INT  
, @CategoryID INT    
AS    
BEGIN    
    
 DECLARE @AllCategoryID INT    
 SELECT @AllCategoryID = CATEGORYID FROM TBLCATEGORY WHERE CATEGORYNAME = 'ALL'    
    
 SELECT    
  IC.ITEMCODEID    
  , IC.ITEMID    
  , IC.ITEMCODE    
  , I.ITEMNAME    
  , I.SKUCODE    
  , I.DESCRIPTION    
  , I.CATEGORYID    
  , ISNULL(I.ISOPENITEM, 0) AS ISOPENITEM    
  , I.PARENTITEMID    
  , I.SUBCATEGORYID    
  , I.UOMID    
  , IC.HSNCODE    
  , IC.ISEAN      
  , CU.FULLNAME AS CREATEDBY    
  , I.CREATEDDATE    
  , UU.FULLNAME AS UPDATEDBY    
  , I.UPDATEDATE     
  , IC.FREEITEMCODEID    
  , I.CLASSIFICATIONID
  , I.SUBCLASSIFICATIONID
 FROM     
  ITEMCODE IC     
  INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID    
  INNER JOIN TBLCATEGORY CAT ON CAT.CATEGORYID = I.CATEGORYID    
  LEFT JOIN TBLUSER CU ON CU.USERID = IC.CREATEDBY    
  LEFT JOIN TBLUSER UU ON UU.USERID = IC.UPDATEDBY      
 WHERE     
  IC.ITEMCODEID = @ItemCodeID    
  AND IC.DELETEDDATE IS NULL    
  -- to be uncommented after the category fix
  --AND (I.CATEGORYID = @CategoryID OR @CategoryID = @AllCategoryID)    
    
 SELECT     
  ICP.COSTPRICEWT    
  , ICP.COSTPRICEWOT    
  , IP.SALEPRICE    
  , IP.MRP    
  , IP.GSTID   
  , GST.GSTCODE
 FROM  
  ITEMPRICE IP    
  INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID    
  INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID    
  INNER JOIN TBLCATEGORY CAT ON CAT.CATEGORYID = I.CATEGORYID    
  INNER JOIN GSTDETAIL GST ON GST.GSTID = IP.GSTID
  LEFT JOIN ITEMCOSTPRICE ICP ON ICP.ITEMPRICEID = IP.ITEMPRICEID  and icp.DELETEDDATE is null
 WHERE    
  IC.ITEMCODEID = @ItemCodeID    
  AND IP.BRANCHID IS NULL
  AND IP.DELETEDDATE IS NULL    
  
  -- to be uncommented after the category fix
  --AND (I.CATEGORYID = @CategoryID OR @CategoryID = @AllCategoryID)    
  
END
GO
ALTER PROCEDURE [dbo].[USP_CU_BRANCH]          
@BRANCHID int = 0,          
@BRANCHNAME varchar(100),          
@BRANCHCODE varchar(5),          
@ADDRESS varchar(500),          
@STATEID INT,  
@PHONENO varchar(20),          
@LANDLINE VARCHAR(20),    
@EMAILID varchar(50),          
@SUPERVISORID INT,    
@ISWAREHOUSE BIT,    
@USERID int = 0    
AS          
BEGIN          
          
 IF @BRANCHID > 0           
 BEGIN          
  UPDATE BRANCH           
  SET        
   BRANCHNAME = @BRANCHNAME,    
   BRANCHCODE = @BRANCHCODE,    
   ADDRESS = @ADDRESS,    
   STATEID = @STATEID,  
   PHONENO = @PHONENO,    
   LANDLINE = @LANDLINE,    
   EMAILID = @EMAILID,    
   ISWAREHOUSE = @ISWAREHOUSE,    
   SUPERVISORID = @SUPERVISORID,    
   UPDATEDBY = @USERID,    
   UPDATEDATE = GETDATE()    
  WHERE BRANCHID = @BRANCHID          
 END          
 ELSE          
 BEGIN          
  INSERT INTO BRANCH (BRANCHNAME, BRANCHCODE, ADDRESS, STATEID,  
  PHONENO,LANDLINE, EMAILID, ISWAREHOUSE,SUPERVISORID,     
  CREATEDBY, CREATEDDATE)          
  VALUES (@BRANCHNAME, @BRANCHCODE, @ADDRESS,@STATEID,  
  @PHONENO,@LANDLINE, @EMAILID,@ISWAREHOUSE,@SUPERVISORID,     
  @USERID, GETDATE())          
          
  SET @BRANCHID = SCOPE_IDENTITY()      
    
  INSERT INTO STOCKSUMMARY(ITEMPRICEID, BRANCHID, QUANTITY, WEIGHTINKGS, TTYPE)  
  SELECT ITEMPRICEID, @BRANCHID, 0, 0, 'BC' FROM ITEMPRICE WHERE DELETEDDATE IS NULL  AND BRANCHID IS NULL
 END          
          
 SELECT @BRANCHID          
          
END       
GO
ALTER PROCEDURE [dbo].[USP_R_COSTPRICELIST]      
@ITEMCODEID INT      
AS      
BEGIN      
      
	SELECT   
		ICP.ITEMCOSTPRICEID, ICP.COSTPRICEWOT, ICP.COSTPRICEWT, IP.MRP, IP.SALEPRICE, G.GSTCODE, D.DEALERNAME  
		, SE.INVOICEDATE, G.GSTID, G.CGST, G.SGST, G.IGST, G.CESS, IP.ITEMPRICEID  
	FROM 
		ITEMPRICE IP    
		INNER JOIN GSTDETAIL G ON IP.GSTID = G.GSTID    
		LEFT JOIN ITEMCOSTPRICE ICP ON IP.ITEMPRICEID = ICP.ITEMPRICEID    
		LEFT JOIN STOCKENTRYDETAIL SED ON ICP.ITEMCOSTPRICEID = SED.ITEMCOSTPRICEID    
		LEFT JOIN STOCKENTRY SE ON SED.STOCKENTRYID = SE.STOCKENTRYID      
		LEFT JOIN TBLDEALER D ON SE.SUPPLIERID = D.DEALERID      
	WHERE 
		IP.ITEMCODEID = @ITEMCODEID 
		AND ICP.DELETEDDATE IS NULL
		AND IP.BRANCHID IS NULL
	ORDER BY SE.INVOICEDATE DESC    
      
END
GO
ALTER PROCEDURE USP_R_BREFUNDDETAIL          
@BREFUNDID INT,          
@COUNTERID INT          
AS          
BEGIN          
          
	SELECT 
		BRD.BRDID,
		BRD.BREFUNDDETAILID,
		BRD.BREFUNDID,
		IP.ITEMPRICEID ,    
		BRD.SNO,
		IC.ITEMCODE,
		I.ITEMNAME,          
		IP.MRP,
		IP.SALEPRICE, 
		BRD.QUANTITY,
		BRD.WEIGHTINKGS,        
		ISNULL(ACCEPTEDQUANTITY,BRD.QUANTITY) AS ACCEPTEDQUANTITY,        
		ISNULL(ACCEPTEDWEIGHTKGS,BRD.WEIGHTINKGS) AS ACCEPTEDWEIGHTKGS ,    
		BRD.COUNTERID,
		BRD.REASONID,
		BRD.DELETEDDATE,
		CASE WHEN BRD.REASONID = 1 OR BRD.REASONID = 2 THEN ISNULL(BRD.SUPPLIERID,IPDM.DEALERID) ELSE NULL END AS DEALERID,
		CASE WHEN BRD.REASONID = 1 OR BRD.REASONID = 2 THEN ISNULL(BRD.ITEMCOSTPRICEID,ICP.LASTCOSTPRICEID) ELSE NULL END AS ITEMCOSTPRICEID,
		CASE WHEN BRD.REASONID = 1 OR BRD.REASONID = 2 THEN ICPC.COSTPRICEWOT ELSE NULL END AS COSTPRICEWOT,
		CASE WHEN BRD.REASONID = 1 OR BRD.REASONID = 2 THEN ICPC.COSTPRICEWT ELSE NULL END AS COSTPRICEWT
	FROM POS_BREFUNDDETAIL BRD          
		INNER JOIN ITEMPRICE IP ON BRD.ITEMPRICEID = IP.ITEMPRICEID          
		INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID          
		INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID          
		LEFT JOIN REASONFORREFUND RFR ON BRD.REASONID = RFR.REASONID  
		LEFT JOIN (SELECT ICPINNER.ITEMPRICEID, MAX(ICPINNER.ITEMCOSTPRICEID) AS LASTCOSTPRICEID
					FROM 
						ITEMCOSTPRICE ICPINNER
					WHERE
						ICPINNER.DELETEDDATE IS NULL AND ICPINNER.COSTPRICEWT <> 0
					GROUP BY ICPINNER.ITEMPRICEID
				) ICP ON ISNULL(IP.PARENTITEMPRICEID, IP.ITEMPRICEID) = ICP.ITEMPRICEID

		LEFT JOIN (SELECT IPDM.ITEMCOSTPRICEID, IPDM.DEALERID FROM 
					(
						SELECT IPDM.ITEMCOSTPRICEID, MAX(ITEMPRICEDEALERMAPID) AS LASTITEMPRICEDEALERMAPID
						FROM ITEMPRICEDEALERMAP IPDM 
						GROUP BY IPDM.ITEMCOSTPRICEID
					) LIPDM
					INNER JOIN ITEMPRICEDEALERMAP IPDM ON LIPDM.LASTITEMPRICEDEALERMAPID = IPDM.ITEMPRICEDEALERMAPID
				  ) IPDM ON ICP.LASTCOSTPRICEID = IPDM.ITEMCOSTPRICEID

		LEFT JOIN TBLDEALER D ON ISNULL(BRD.SUPPLIERID,IPDM.DEALERID) = D.DEALERID
		LEFT JOIN ITEMCOSTPRICE ICPC ON ISNULL(BRD.ITEMCOSTPRICEID,ICP.LASTCOSTPRICEID) = ICPC.ITEMCOSTPRICEID
	WHERE  BRD.BREFUNDID = @BREFUNDID   
		AND BRD.COUNTERID = @COUNTERID          
		AND BRD.DELETEDDATE IS NULL  
	ORDER BY BRD.SNO
          
END
GO
ALTER PROCEDURE [dbo].[USP_U_BREFUND]            
@dtbrd POS_BRDTYPE readonly,        
@BREFUNDID INT,        
@COUNTERID INT,        
@USERID INT        
          
AS            
BEGIN            

IF EXISTS(SELECT 1 FROM @dtbrd WHERE ISNULL(DealerID,0) = 0 AND (REASONID = 1 OR REASONID = 2))
BEGIN

SELECT 'Few items does not have supplier information!'
return;

END

DECLARE @BRANCHID INT    
SELECT @BRANCHID = BRANCHID FROM BRANCHCOUNTER WHERE COUNTERID = @COUNTERID    
      
--Change BRefund status to accepted      
UPDATE POS_BREFUND SET         
IsAccepted = 1,        
UPDATEDBY = @USERID,        
UPDATEDDATE = GETDATE()        
WHERE COUNTERID = @COUNTERID        
AND BREFUNDID = @BREFUNDID        
      
--updating accepted quantity and weight in kgs      
UPDATE BRD          
SET           
BRD.ACCEPTEDQUANTITY = UBRD.ACCEPTEDQUANTITY,          
BRD.ACCEPTEDWEIGHTKGS = UBRD.ACCEPTEDWEIGHTINKGS,
BRD.SUPPLIERID = UBRD.DEALERID,
BRD.ITEMCOSTPRICEID = UBRD.ITEMCOSTPRICEID
FROM POS_BREFUNDDETAIL BRD          
INNER JOIN @dtbrd UBRD ON BRD.BREFUNDID = UBRD.BREFUNDID          
AND BRD.BREFUNDDETAILID = UBRD.BREFUNDDETAILID          
AND BRD.COUNTERID = UBRD.COUNTERID          
          
--Dedutcing quantity from branch quantity      
    
	UPDATE SS    
	SET 
		SS.QUANTITY = SS.QUANTITY - UBRD.ACCEPTEDQUANTITY,    
		SS.WEIGHTINKGS = SS.WEIGHTINKGS - UBRD.ACCEPTEDWEIGHTINKGS,
		SS.TTYPE =  'BR'
	FROM 
		STOCKSUMMARY SS 
		INNER JOIN 
		(
			SELECT ISNULL(IP.PARENTITEMPRICEID, BRD.ITEMPRICEID) AS ITEMPRICEID
			, BRD.ACCEPTEDQUANTITY
			, BRD.ACCEPTEDWEIGHTINKGS
			FROM ITEMPRICE IP 
				INNER JOIN @dtbrd BRD ON IP.ITEMPRICEID = BRD.ITEMPRICEID
		) UBRD ON SS.ITEMPRICEID = UBRD.ITEMPRICEID
	WHERE SS.BRANCHID = @BRANCHID
      
--adding quantity to warehouse      
	UPDATE SS        
	SET 
		SS.QUANTITY = ISNULL(SS.QUANTITY, 0) + SDD.QUANTITY,        
		SS.WEIGHTINKGS = ISNULL(SS.WEIGHTINKGS, 0) + SDD.WEIGHTINKGS        ,
		SS.TTYPE =  'BR'
	FROM 
		STOCKSUMMARY SS 
		INNER JOIN          
			(
				SELECT           
					ISNULL(IP.PARENTITEMPRICEID, IP.ITEMPRICEID) AS ITEMPRICEID
					, ACCEPTEDQUANTITY AS QUANTITY
					, ACCEPTEDWEIGHTINKGS AS WEIGHTINKGS
					, BRD.REASONID
				FROM @dtbrd BRD     
					INNER JOIN ITEMPRICE IP ON BRD.ITEMPRICEID = IP.ITEMPRICEID          
					INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID          
					INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID     
				WHERE (I.PARENTITEMID IS NULL OR ISNULL(I.ISOPENITEM, 0) = 1)     
			) SDD ON SS.ITEMPRICEID = SDD.ITEMPRICEID
	WHERE SS.BRANCHID = 45 AND (SDD.REASONID = 3 OR SDD.REASONID = 4)

-- INSERTING SUPPLIER RETURNS RECORDS

	INSERT INTO SUPPLIERRETURNS(SUPPLIERID,CREATEDBY,CREATEDDATE,STATUS)
	SELECT DISTINCT DEALERID,@USERID,GETDATE(),0 FROM @dtbrd BRD
	WHERE NOT EXISTS(SELECT 1 FROM SUPPLIERRETURNS SR
	WHERE SR.SUPPLIERID = BRD.DEALERID AND ISNULL(SR.STATUS,0) = 0)

	INSERT INTO SUPPLIERRETURNSDETAIL
	(
		SUPPLIERRETURNSID,
		ITEMCOSTPRICEID,
		QUANTITY,
		WEIGHTINKGS,
		CREATEDBY,
		CREATEDDATE,
		BRDID,
		BRANCHID
	)

	SELECT 
		SR.SUPPLIERRETURNSID,
		BRD.ITEMCOSTPRICEID,
		BRD.ACCEPTEDQUANTITY,
		BRD.ACCEPTEDWEIGHTINKGS,
		@USERID,
		GETDATE(),
		BRD.BRDID,
		@BRANCHID
	FROM @dtbrd BRD INNER JOIN SUPPLIERRETURNS SR
	ON BRD.DEALERID = SR.SUPPLIERID AND ISNULL(SR.STATUS,0) = 0
	WHERE (BRD.REASONID = 1 OR BRD.REASONID = 2)
            
END
GO
alter PROC [dbo].[USP_R_GETSYNCDATA]          
(          
 @EntityName VARCHAR(50)          
 ,  @SyncDate DATETIME          
)          
AS          
BEGIN          
          
 IF @EntityName = 'ITEM'          
 BEGIN          
  SELECT ITEMID, SKUCODE, ITEMNAME, CREATEDDATE, UPDATEDATE, DELETEDDATE, ISOPENITEM, PARENTITEMID, UOMID, CATEGORYID          
  FROM ITEM I          
  WHERE          
   I.CREATEDDATE > @SyncDate          
   OR I.UPDATEDATE > @SyncDate          
   OR I.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'ITEMCODE'          
 BEGIN          
  SELECT ITEMCODEID, ITEMID, ITEMCODE, CREATEDDATE, UPDATEDATE, DELETEDDATE, FREEITEMCODEID, HSNCODE           
  FROM ITEMCODE IC          
  WHERE          
   IC.CREATEDDATE > @SyncDate          
   OR IC.UPDATEDATE > @SyncDate          
   OR IC.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'ITEMPRICE'          
 BEGIN          
  SELECT ITEMPRICEID, ITEMCODEID, SALEPRICE, MRP, GSTID, CREATEDDATE, UPDATEDATE, DELETEDDATE,BRANCHID,PARENTITEMPRICEID
  FROM ITEMPRICE IP          																  
  WHERE          
   IP.CREATEDDATE > @SyncDate          
   OR IP.UPDATEDATE > @SyncDate          
   OR IP.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'BRANCH'          
 BEGIN          
  SELECT BRANCHID, BRANCHNAME, BRANCHCODE, ADDRESS, 
  PHONENO, LANDLINE, EMAILID, SUPERVISORID, ISWAREHOUSE, CREATEDDATE, UPDATEDATE, DELETEDDATE, STATEID,
  MULTIEDITTHRESHOLD
  FROM BRANCH B          
  WHERE          
   B.CREATEDDATE > @SyncDate          
   OR B.UPDATEDATE > @SyncDate          
   OR B.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'GST'          
 BEGIN          
  SELECT GSTID, GSTCODE, CGST, SGST, IGST, CESS, CREATEDDATE, UPDATEDATE, DELETEDDATE           
  FROM GSTDETAIL GST          
  WHERE          
   GST.CREATEDDATE > @SyncDate          
   OR GST.UPDATEDATE > @SyncDate          
   OR GST.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'STOCKDISPATCH'          
 BEGIN          
  SELECT STOCKDISPATCHID, FROMBRANCHID, TOBRANCHID, STATUS, STATUSAPPROVEDBY, STATUSAPPROVEDDATE, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDATE, DELETEDBY, DELETEDDATE, DISPATCHNUMBER          
  FROM STOCKDISPATCH SD          
  WHERE          
   SD.CREATEDDATE > @SyncDate          
   OR SD.UPDATEDATE > @SyncDate          
   OR SD.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'STOCKDISPATCHDETAIL'          
 BEGIN          
  SELECT STOCKDISPATCHDETAILID, STOCKDISPATCHID, ITEMPRICEID, TRAYNUMBER,         
  DISPATCHQUANTITY, RECEIVEDQUANTITY, CREATEDDATE          
   , UPDATEDATE, DELETEDDATE, WEIGHTINKGS,ISACCEPTED    
  FROM STOCKDISPATCHDETAIL SDD          
  WHERE          
   SDD.CREATEDDATE > @SyncDate          
   OR SDD.UPDATEDATE > @SyncDate          
   OR SDD.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 --IF @EntityName = 'SUBCATEGORY'          
 --BEGIN          
 -- SELECT * FROM SUBCATEGORY SC          
 -- WHERE          
 --  SC.CREATEDDATE > @SyncDate          
 --  OR SC.UPDATEDDATE > @SyncDate          
 --  OR SC.DELETEDDATE > @SyncDate          
 -- RETURN          
 --END          
          
 IF @EntityName = 'BRANCHCOUNTER'          
 BEGIN          
  SELECT COUNTERID, COUNTERNAME, BRANCHID, CREATEDDATE, UPDATEDDATE, DELETEDDATE       
 , DAYCLOSUREID, BRANCHREFUNDID      
  FROM BRANCHCOUNTER CNTR          
  WHERE          
   CNTR.CREATEDDATE > @SyncDate          
   OR CNTR.UPDATEDDATE > @SyncDate          
   OR CNTR.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 --IF @EntityName = 'DEALER'          
--BEGIN  
 -- SELECT * FROM TBLDEALER DLR          
 -- WHERE          
 --  DLR.CREATEDDATE > @SyncDate          
 --  OR DLR.UPDATEDDATE > @SyncDate          
 --  OR DLR.DELETEDDATE > @SyncDate          
 -- RETURN          
 --END          
          
 IF @EntityName = 'MOP'          
 BEGIN          
  SELECT MOPID, MOPNAME, CREATEDDATE, UPDATEDDATE, DELETEDDATE          
  FROM TBLMOP MOP          
  WHERE          
   MOP.CREATEDDATE > @SyncDate          
   OR MOP.UPDATEDDATE > @SyncDate          
   OR MOP.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'ROLE'          
 BEGIN          
  SELECT ROLEID, ROLENAME FROM TBLROLE RL          
  --WHERE          
  -- RL.CREATEDATE > @SyncDate          
  -- OR RL.UPDATEDATE > @SyncDate          
  -- OR RL.DELETEDDATE > @SyncDate          
  RETURN          
 END          
     IF @EntityName = 'USER'          
 BEGIN          
  SELECT USERID, ROLEID, REPORTINGLEADID, CATEGORYID, BRANCHID, USERNAME, PASSWORDSTRING, FULLNAME, CNUMBER, EMAIL, ISOTP, GENDER, DOB, CREATEDDATE, UPDATEDDATE, DELETEDDATE          
  FROM TBLUSER USR          
  WHERE          
   USR.CREATEDDATE > @SyncDate          
   OR USR.UPDATEDDATE > @SyncDate          
   OR USR.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'UOM'          
 BEGIN          
  SELECT UOMID, DISPLAYVALUE, BASEUOMID, MULTIPLIER, CREATEDDATE, UPDATEDDATE, DELETEDDATE           
  FROM UOM UOM          
  WHERE          
   UOM.CREATEDDATE > @SyncDate          
   OR UOM.UPDATEDDATE > @SyncDate          
   OR UOM.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'ITEMGROUP'          
 BEGIN          
  SELECT ITEMGROUPID, GROUPNAME, ISACTIVE, CREATEDDATE, UPDATEDDATE, DELETEDDATE          
  FROM ITEMGROUP IG          
  WHERE          
   IG.CREATEDDATE > @SyncDate          
   OR IG.UPDATEDDATE > @SyncDate          
   OR IG.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'ITEMGROUPDETAIL'          
 BEGIN          
  SELECT ITEMGROUPDETAILID, ITEMGROUPID, ITEMCODEID, CREATEDDATE, DELETEDDATE           
  FROM ITEMGROUPDETAIL IGD          
  WHERE          
   IGD.CREATEDDATE > @SyncDate          
   OR IGD.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'OFFERTYPE'          
 BEGIN          
  SELECT OFFERTYPEID, OFFERTYPENAME, OFFERTYPECODE, BUYQUANTITY, FREEQUANTITY           
  FROM OFFERTYPE OT          
  RETURN          
 END          
          
 IF @EntityName = 'OFFER'          
 BEGIN          
  SELECT OFFERID, OFFERNAME, OFFERCODE, STARTDATE, ENDDATE, OFFERVALUE, OFFERTYPEID, CATEGORYID, ITEMGROUPID          
   , CREATEDDATE, UPDATEDDATE, DELETEDDATE, ISACTIVE, APPLIESTOID, FREEITEMPRICEID , NUMBEROFITEMS
  FROM OFFER OFR          
  WHERE          
   OFR.CREATEDDATE > @SyncDate          
   OR OFR.UPDATEDDATE > @SyncDate          
   OR OFR.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'OFFERBRANCH'          
 BEGIN          
  SELECT OFFERBRANCHID, OFFERID, BRANCHID, CREATEDDATE, DELETEDDATE          
  FROM OFFERBRANCH OFRB          
  WHERE          
   OFRB.CREATEDDATE > @SyncDate          
   OR OFRB.DELETEDDATE > @SyncDate          
  RETURN          
 END          
          
 IF @EntityName = 'OFFERITEMMAP'          
 BEGIN          
  SELECT OFFERITEMMAPID, OFFERID, ITEMCODEID, CREATEDDATE, DELETEDDATE           
  FROM OFFERITEMMAP OFRIM          
  WHERE          
   OFRIM.CREATEDDATE > @SyncDate          
   OR OFRIM.DELETEDDATE > @SyncDate          
  RETURN          
 END          
      
 IF @EntityName = 'POS_DENOMINATION'          
 BEGIN          
  SELECT DENOMINATIONID,DISPLAYVALUE,MULTIPLIER,CREATEDDATE,UPDATEDDATE      
  FROM POS_DENOMINATION DEN      
  WHERE          
   DEN.CREATEDDATE > @SyncDate          
   OR DEN.UPDATEDDATE > @SyncDate          
  RETURN          
 END      
  
 IF @EntityName = 'TBLCATEGORY'          
 BEGIN          
  SELECT   
CATEGORYID  
,CATEGORYNAME  
,CREATEDBY  
,CREATEDDATE  
,UPDATEDBY  
,UPDATEDDATE  
,DELETEDBY  
,DELETEDDATE  
,ALLOWOPENITEMS  
  FROM TBLCATEGORY CAT  
  WHERE  
   CAT.CREATEDDATE > @SyncDate  
   OR CAT.UPDATEDDATE > @SyncDate  
   OR CAT.DELETEDDATE > @SyncDate  
  RETURN          
 END      

 IF @EntityName = 'REASONFORREFUND'          
 BEGIN          
  SELECT   
REASONID
,REASONNAME
,CREATEDBY
,CREATEDDATE
,UPDATEDBY
,UPDATEDDATE
,DELETEDBY
,DELETEDDATE
  FROM REASONFORREFUND RFR  
  WHERE  
   RFR.CREATEDDATE > @SyncDate  
   OR RFR.UPDATEDDATE > @SyncDate  
   OR RFR.DELETEDDATE > @SyncDate  
  RETURN          
 END      
       
END 
GO
ALTER PROC [dbo].[USP_P_DAYCLOSURES]
AS
BEGIN

	SELECT DCL.BRANCHCOUNTERID, DCL.DAYCLOSUREID
	INTO #DayClosuresToProcess
	FROM
		POS_DAYCLOSURE DCL
		INNER JOIN
			(
				SELECT PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFBILLDETAILRECS FROM POS_BILLDETAIL PBD 
				GROUP BY PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID
			) BD ON BD.BRANCHCOUNTERID = DCL.BRANCHCOUNTERID AND BD.DAYCLOSUREID = DCL.DAYCLOSUREID
		INNER JOIN
			(
				SELECT PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFBILLRECS FROM POS_BILL PBD 
				GROUP BY PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID
			) B ON B.BRANCHCOUNTERID = DCL.BRANCHCOUNTERID AND B.DAYCLOSUREID = DCL.DAYCLOSUREID
		LEFT JOIN
			(
				SELECT PBD.COUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFCREFUNDRECS FROM POS_CREFUND PBD 
				GROUP BY PBD.COUNTERID, PBD.DAYCLOSUREID
			) CRF ON CRF.COUNTERID = DCL.BRANCHCOUNTERID AND CRF.DAYCLOSUREID = DCL.DAYCLOSUREID
	WHERE 
		ISNULL(DCL.ISPROCESSED, 0) = 0 
		AND DCL.BILLCOUNT = B.NOOFBILLRECS
		AND DCL.BILLDETAILCOUNT = BD.NOOFBILLDETAILRECS
		AND DCL.CREFUNDCOUNT = ISNULL(CRF.NOOFCREFUNDRECS, 0)

   
	MERGE STOCKSUMMARY AS Target        
	USING       
		(      
			SELECT       
				BC.BRANCHID
				, ISNULL(IP.PARENTITEMPRICEID, IP.ITEMPRICEID) AS ITEMPRICEID
				, SUM(BD.QUANTITY) AS QUANTITY
				, SUM(BD.WEIGHTINKGS) AS WEIGHTINKGS      
			FROM       
				POS_BILLDETAIL BD      
				INNER JOIN ITEMPRICE IP ON BD.ITEMPRICEID = IP.ITEMPRICEID  
				INNER JOIN POS_BILL B ON BD.BILLID = B.BILLID 
					AND BD.BRANCHCOUNTERID = B.BRANCHCOUNTERID  
				INNER JOIN #DayClosuresToProcess UDC ON B.DAYCLOSUREID = UDC.DAYCLOSUREID 
					AND B.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID      
				INNER JOIN BRANCHCOUNTER BC ON B.BRANCHCOUNTERID = BC.COUNTERID      
			WHERE      
				B.DELETEDDATE IS NULL 
				AND BD.DELETEDDATE IS NULL 
				AND B.BILLSTATUS = 1 				
			GROUP BY BC.BRANCHID, ISNULL(IP.PARENTITEMPRICEID, IP.ITEMPRICEID)
		) AS Source              
	ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMPRICEID = Target.ITEMPRICEID  
                  
	WHEN MATCHED THEN UPDATE
	SET              
		Target.QUANTITY = ISNULL(Target.QUANTITY,0) - ISNULL(Source.QUANTITY,0),              
		Target.WEIGHTINKGS = ISNULL(Target.WEIGHTINKGS,0) - ISNULL(Source.WEIGHTINKGS,0),
		Target.TTYPE = 'BS' ;      
   
	MERGE STOCKSUMMARY AS Target        
	USING       
		(      
			SELECT       
				BC.BRANCHID
				, ISNULL(IP.PARENTITEMPRICEID, IP.ITEMPRICEID) AS ITEMPRICEID
				, SUM(CR.REFUNDQUANTITY) AS QUANTITY
				, SUM(CR.REFUNDWEIGHTINKGS) AS WEIGHTINKGS      
			FROM       
				POS_CREFUND CR      
				INNER JOIN POS_BILLDETAIL BD ON CR.BILLDETAILID = BD.BILLDETAILID 
					AND CR.COUNTERID = BD.BRANCHCOUNTERID  
				INNER JOIN ITEMPRICE IP ON BD.ITEMPRICEID = IP.ITEMPRICEID  
				INNER JOIN #DayClosuresToProcess UDC ON CR.DAYCLOSUREID = UDC.DAYCLOSUREID  
					AND CR.COUNTERID = UDC.BRANCHCOUNTERID      
				INNER JOIN BRANCHCOUNTER BC ON CR.COUNTERID = BC.COUNTERID      
				AND CR.DELETEDDATE IS NULL    
			GROUP BY BC.BRANCHID,ISNULL(IP.PARENTITEMPRICEID, IP.ITEMPRICEID)
		) AS Source              
	ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMPRICEID = Target.ITEMPRICEID
                  
	WHEN MATCHED THEN UPDATE 
	SET              
		Target.QUANTITY = ISNULL(Target.QUANTITY,0) + ISNULL(Source.QUANTITY,0),              
		Target.WEIGHTINKGS = ISNULL(Target.WEIGHTINKGS,0) + ISNULL(Source.WEIGHTINKGS,0),
		Target.TTYPE = 'CR' ;      
      
	UPDATE BC    
	SET     
		BC.DAYCLOSUREID = MAXDC.MAXDAYCLOSUREID    
		, UPDATEDDATE = GETDATE()    
	FROM     
	BRANCHCOUNTER BC    
		INNER JOIN     
			(    
				SELECT DC.BRANCHCOUNTERID, MAX(DC.DAYCLOSUREID) AS MAXDAYCLOSUREID     
				FROM #DayClosuresToProcess DC     
				GROUP BY DC.BRANCHCOUNTERID    
			) MAXDC ON MAXDC.BRANCHCOUNTERID = BC.COUNTERID    
	WHERE ISNULL(BC.DAYCLOSUREID, 0) < MAXDC.MAXDAYCLOSUREID    

	UPDATE DCL
	SET DCL.ISPROCESSED = 1
	FROM
		POS_DAYCLOSURE DCL
		INNER JOIN #DayClosuresToProcess DCLTPR ON DCLTPR.DAYCLOSUREID = DCL.DAYCLOSUREID
			AND DCLTPR.BRANCHCOUNTERID = DCL.BRANCHCOUNTERID

	SELECT COUNT(1) FROM #DayClosuresToProcess

END
GO
ALTER PROCEDURE [dbo].[USP_R_CURRENTSTOCK]    
@FROMBRANCHID INT,    
@TOBRANCHID INT,    
@ITEMCODEID INT,    
@PARENTITEMID INT = 0    
    
AS    
BEGIN    
    
	DECLARE @FROMBRANCHSTCK DECIMAL(18,2) = 0,@TOBRANCHSTOCK DECIMAL(18,2) = 0, @isWarehouse BIT = 0, @isOpenItem BIT = 0
	SELECT @isWarehouse = ISNULL(ISWAREHOUSE,0) FROM BRANCH WHERE BRANCHID = @TOBRANCHID
	SELECT @isOpenItem = ISNULL(I.ISOPENITEM,0) FROM ITEMCODE IC INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID WHERE IC.ITEMCODEID = @ITEMCODEID

	IF(@isWarehouse = 1  AND (@PARENTITEMID > 0 OR @isOpenItem = 1))
	BEGIN
		IF(@isOpenItem = 1)
		BEGIN
			
			SELECT @FROMBRANCHSTCK = SUM(WEIGHTINKGS)
			FROM STOCKSUMMARY SS    
			INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
			WHERE SS.BRANCHID = @FROMBRANCHID AND IP.ITEMCODEID = @ITEMCODEID

		END
		ELSE
		BEGIN

			SELECT @FROMBRANCHSTCK = SUM(WEIGHTINKGS)
			FROM STOCKSUMMARY SS    
			INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
			INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID    
			INNER JOIN ITEM I ON IC.ITEMID = I.ITEMID    
			WHERE SS.BRANCHID = @FROMBRANCHID AND I.ITEMID = @PARENTITEMID    

		END
	END
	
	IF(@isWarehouse = 0)
	BEGIN    
  
		SELECT @FROMBRANCHSTCK = CASE WHEN @isOpenItem = 1 THEN SUM(WEIGHTINKGS) ELSE SUM(QUANTITY) END
		FROM STOCKSUMMARY SS   
		INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
		WHERE SS.BRANCHID = @FROMBRANCHID AND IP.ITEMCODEID = @ITEMCODEID      
  
	END    
      
	SELECT @TOBRANCHSTOCK = CASE WHEN @isOpenItem = 1 THEN SUM(WEIGHTINKGS) ELSE SUM(QUANTITY) END
	FROM STOCKSUMMARY SS  
	INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = SS.ITEMPRICEID
	WHERE SS.BRANCHID = @TOBRANCHID AND IP.ITEMCODEID = @ITEMCODEID  

	SELECT @FROMBRANCHSTCK, @TOBRANCHSTOCK    
    
END 
GO
DROP PROCEDURE USP_CU_WHDISPATCH
GO
ALTER PROC [dbo].[USP_RPT_ITEMSUMMARY]
(
	@BranchID INT = 0
	, @FromDate DATE = NULL
	, @ToDate DATE = NULL
	, @ItemCodeID INT 
	, @IncludeBillNumber BIT = 0
)
AS
BEGIN
	IF @ToDate IS NOT NULL
	BEGIN
		SET @ToDate =  DATEADD(D, 1, @ToDate)
	END

	DECLARE @IsOpenItem BIT, @ParentItemID INT
	SELECT	@IsOpenItem = I.ISOPENITEM, @ParentItemID = I.ITEMID FROM ITEM I INNER JOIN ITEMCODE IC ON IC.ITEMID = I.ITEMID WHERE IC.ITEMCODEID = @ItemCodeID

	IF @IsOpenItem = 1 
	BEGIN
		-- test

		CREATE TABLE #ItemSummary(BRANCHID INT, BRANCHNAME VARCHAR(100), BRANCHCODE VARCHAR(20), BRANCHSTOCK DECIMAL(11, 2), DISPATCHQUANTITY DECIMAL(11, 2), 
			SALEQUANTITY DECIMAL(11, 2), BREFUNDQUANTITY DECIMAL(11, 2), CREFUNDQUANTITY DECIMAL(11, 2))
		
		INSERT INTO #ItemSummary(BRANCHID, BRANCHNAME, BRANCHCODE, BRANCHSTOCK, DISPATCHQUANTITY)
 		SELECT B.BRANCHID, B.BRANCHNAME, B.BRANCHCODE,  ISNULL(SUM(ALLBS.QUANTITY * UOM.MULTIPLIER), 0.00), ISNULL(SUM(SD.DISPATCHQUANTITY), 0)
		FROM
			BRANCH B
			CROSS APPLY ITEMCODE IC
			INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
			LEFT JOIN UOM UOM ON UOM.UOMID = I.UOMID
			INNER JOIN  
			(
				SELECT 
					SSINNER.BRANCHID,
					IP.ITEMCODEID, 
					SUM(QUANTITY) AS QUANTITY, 
					SUM(WEIGHTINKGS) AS WEIGHTINKGS  
				FROM STOCKSUMMARY SSINNER
				INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
				WHERE SSINNER.BRANCHID <> 45
				GROUP BY SSINNER.BRANCHID,IP.ITEMCODEID
			)
			ALLBS ON ALLBS.BRANCHID = B.BRANCHID AND ALLBS.ITEMCODEID = IC.ITEMCODEID
			LEFT JOIN 
				(
					SELECT BINNER.BRANCHID, IC.ITEMID, SUM(SED.WEIGHTINKGS) AS DISPATCHQUANTITY
					FROM
						STOCKDISPATCHDETAIL SED WITH(NOLOCK) 
						INNER JOIN STOCKDISPATCH SD WITH(NOLOCK) ON SD.STOCKDISPATCHID = SED.STOCKDISPATCHID
						INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = SED.ITEMPRICEID
						INNER JOIN ITEMCODE IC WITH(NOLOCK) ON IC.ITEMCODEID = IP.ITEMCODEID
						INNER JOIN BRANCH BINNER WITH(NOLOCK) ON BINNER.BRANCHID = SD.TOBRANCHID
					WHERE						
						(SD.TOBRANCHID = @BranchID OR @BranchID = 0)
						AND (@FromDate IS NULL OR SD.CREATEDDATE > @FromDate)
						AND (@ToDate IS NULL OR SD.CREATEDDATE < @ToDate)
						AND SED.DELETEDDATE IS NULL AND SD.DELETEDDATE IS NULL
					GROUP BY BINNER.BRANCHID, IC.ITEMID
				) SD ON SD.BRANCHID = B.BRANCHID AND SD.ITEMID = I.ITEMID 
			WHERE 
				(B.BRANCHID = @BranchID OR @BranchID = 0)
				AND I.PARENTITEMID = @ParentItemID
			GROUP BY B.BRANCHID, B.BRANCHNAME, B.BRANCHCODE


			INSERT INTO #ItemSummary(BRANCHID, BRANCHNAME, BRANCHCODE, BRANCHSTOCK, DISPATCHQUANTITY, SALEQUANTITY, BREFUNDQUANTITY, CREFUNDQUANTITY)
 			SELECT B.BRANCHID, B.BRANCHNAME, B.BRANCHCODE,  SUM(ALLBS.WEIGHTINKGS), 0, 0, 0, 0
			FROM
				BRANCH B
				CROSS APPLY ITEMCODE IC
				INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
				LEFT JOIN UOM UOM ON UOM.UOMID = I.UOMID
				INNER JOIN 
				(
					SELECT SSINNER.BRANCHID, IP.ITEMCODEID,SUM(SSINNER.QUANTITY) AS QUANTITY, SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS FROM STOCKSUMMARY SSINNER 
						INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
					WHERE SSINNER.BRANCHID = 45
					GROUP BY SSINNER.BRANCHID, IP.ITEMCODEID
				) ALLBS ON ALLBS.BRANCHID = B.BRANCHID AND ALLBS.ITEMCODEID = IC.ITEMCODEID 
			WHERE I.ITEMID = @ParentItemID
			GROUP BY B.BRANCHID, B.BRANCHNAME, B.BRANCHCODE

			UPDATE HIS
			SET HIS.SALEQUANTITY = ITEMSALE.SALEQUANTITY
			FROM
				#ItemSummary HIS
				LEFT JOIN 
					(
						SELECT BINNER.BRANCHID, SUM(PBD.QUANTITY * UOM.MULTIPLIER) AS SALEQUANTITY
						FROM
							POS_BILLDETAIL PBD WITH(NOLOCK)
							INNER JOIN POS_BILL PB WITH(NOLOCK) ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
							INNER JOIN BRANCHCOUNTER BC WITH(NOLOCK) ON BC.COUNTERID = PBD.BRANCHCOUNTERID
							INNER JOIN BRANCH BINNER WITH(NOLOCK) ON BINNER.BRANCHID = BC.BRANCHID
							INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBD.ITEMPRICEID
							INNER JOIN ITEMCODE IC WITH(NOLOCK) ON IC.ITEMCODEID = IP.ITEMCODEID
							INNER JOIN ITEM I WITH(NOLOCK) ON I.ITEMID = IC.ITEMID
							INNER JOIN UOM UOM WITH(NOLOCK) ON UOM.UOMID = I.UOMID 
						WHERE
							(BINNER.BRANCHID = @BranchID OR @BranchID = 0)
							AND (@FromDate IS NULL OR PB.CREATEDDATE > @FromDate)
							AND (@ToDate IS NULL OR PB.CREATEDDATE < @ToDate)
							AND PBD.DELETEDDATE IS NULL AND PB.DELETEDDATE IS NULL
							AND PB.DAYCLOSUREID IS NOT NULL
							AND I.PARENTITEMID = @ParentItemID
						GROUP BY BINNER.BRANCHID	
					) ITEMSALE ON ITEMSALE.BRANCHID = HIS.BRANCHID


			UPDATE HIS
			SET HIS.BREFUNDQUANTITY = BREFUND.BREFUNDQUANTITY
			FROM
				#ItemSummary HIS
				LEFT JOIN 
					(
						SELECT PBR.BRANCHID, SUM(PBRD.QUANTITY* UOM.MULTIPLIER) AS BREFUNDQUANTITY
						FROM
							POS_BREFUNDDETAIL PBRD WITH(NOLOCK) 
							INNER JOIN POS_BREFUND PBR WITH(NOLOCK) ON PBR.BREFUNDID = PBRD.BREFUNDID AND PBR.COUNTERID =  PBRD.COUNTERID
							INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBRD.ITEMPRICEID
							INNER JOIN ITEMCODE IC WITH(NOLOCK) ON IC.ITEMCODEID = IP.ITEMCODEID
							INNER JOIN ITEM I WITH(NOLOCK) ON I.ITEMID = IC.ITEMID
							INNER JOIN UOM UOM WITH(NOLOCK) ON UOM.UOMID = I.UOMID 
						WHERE
							(PBR.BRANCHID = @BranchID OR @BranchID = 0)
							AND (@FromDate IS NULL OR PBR.CREATEDATE > @FromDate)
							AND (@ToDate IS NULL OR PBR.CREATEDATE < @ToDate)
							AND PBRD.DELETEDDATE IS NULL AND PBR.DELETEDDATE IS NULL	
							AND PBR.IsAccepted = 1
							AND I.PARENTITEMID = @ParentItemID
						GROUP BY PBR.BRANCHID
					) BREFUND ON BREFUND.BRANCHID = HIS.BRANCHID

			UPDATE HIS
			SET HIS.CREFUNDQUANTITY = CREFUND.CREFUNDQUANTITY
			FROM
				#ItemSummary HIS
				LEFT JOIN
					(
						SELECT BC.BRANCHID, SUM(PCR.REFUNDQUANTITY * UOM.MULTIPLIER) AS CREFUNDQUANTITY
						FROM
							POS_CREFUND PCR WITH(NOLOCK) 
							INNER JOIN POS_BILLDETAIL PBD WITH(NOLOCK) ON PBD.BILLDETAILID = PCR.BILLDETAILID AND PBD.BRANCHCOUNTERID = PCR.COUNTERID
							INNER JOIN POS_BILL PB WITH(NOLOCK) ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
							INNER JOIN BRANCHCOUNTER BC WITH(NOLOCK) ON BC.COUNTERID = PCR.COUNTERID
							INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBD.ITEMPRICEID
							INNER JOIN ITEMCODE IC WITH(NOLOCK) ON IC.ITEMCODEID = IP.ITEMCODEID
							INNER JOIN ITEM I WITH(NOLOCK) ON I.ITEMID = IC.ITEMID
							INNER JOIN UOM UOM WITH(NOLOCK) ON UOM.UOMID = I.UOMID 
						WHERE
							IP.ITEMCODEID = @ItemCodeID
							AND (BC.BRANCHID = @BranchID OR @BranchID = 0)
							AND (@FromDate IS NULL OR PCR.CREATEDDATE > @FromDate)
							AND (@ToDate IS NULL OR PCR.CREATEDDATE < @ToDate)
							AND PCR.DELETEDDATE IS NULL AND PBD.DELETEDDATE IS NULL AND PB.DELETEDDATE IS NULL
						GROUP BY BC.BRANCHID
					) CREFUND ON CREFUND.BRANCHID = HIS.BRANCHID



			SELECT BRANCHID, BRANCHNAME, BRANCHCODE, BRANCHSTOCK, ISNULL(DISPATCHQUANTITY, 0) DISPATCHQUANTITY, ISNULL(SALEQUANTITY, 0) SALEQUANTITY
				, ISNULL(BREFUNDQUANTITY, 0) BREFUNDQUANTITY, ISNULL(CREFUNDQUANTITY, 0) CREFUNDQUANTITY FROM #ItemSummary ORDER BY BRANCHCODE

			SELECT SED.STOCKENTRYDETAILID, SED.STOCKENTRYID, DLR.DEALERNAME, SE.SUPPLIERINVOICENO, SE.CREATEDDATE, IP.MRP, IP.SALEPRICE, SED.QUANTITY, SED.WEIGHTINKGS
			FROM
				STOCKENTRYDETAIL SED WITH(NOLOCK) 
				INNER JOIN STOCKENTRY SE WITH(NOLOCK) ON SE.STOCKENTRYID = SED.STOCKENTRYID
				INNER JOIN ITEMCOSTPRICE ICP WITH(NOLOCK) ON ICP.ITEMCOSTPRICEID = SED.ITEMCOSTPRICEID
				INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = ICP.ITEMPRICEID
				INNER JOIN TBLDEALER DLR WITH(NOLOCK) ON DLR.DEALERID = SE.SUPPLIERID
			WHERE
				IP.ITEMCODEID = @ItemCodeID
				AND (@FromDate IS NULL OR SE.CREATEDDATE > @FromDate)
				AND (@ToDate IS NULL OR SE.CREATEDDATE < @ToDate)
				AND SED.DELETEDDATE IS NULL AND SE.DELETEDDATE IS NULL

		RETURN
	END

	SELECT B.BRANCHID, B.BRANCHNAME, B.BRANCHCODE, ALLBS.QUANTITY AS BRANCHSTOCK
		, ISNULL(SD.DISPATCHQUANTITY, 0) DISPATCHQUANTITY, ISNULL(ITEMSALE.SALEQUANTITY, 0) SALEQUANTITY
		, ISNULL(BREFUND.BREFUNDQUANTITY, 0) BREFUNDQUANTITY, ISNULL(CREFUND.CREFUNDQUANTITY, 0) CREFUNDQUANTITY
	FROM
		BRANCH B 
		CROSS APPLY ITEMCODE IC 
		INNER JOIN 
		(
			SELECT 
				SSINNER.BRANCHID, 
				IP.ITEMCODEID,
				SUM(SSINNER.QUANTITY) AS QUANTITY, 
				SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS 
			FROM STOCKSUMMARY SSINNER 
				INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
			GROUP BY SSINNER.BRANCHID, IP.ITEMCODEID
		)
		ALLBS ON ALLBS.BRANCHID = B.BRANCHID AND ALLBS.ITEMCODEID = IC.ITEMCODEID
		LEFT JOIN 
			(
				SELECT BINNER.BRANCHID, SUM(SED.DISPATCHQUANTITY) AS DISPATCHQUANTITY
				FROM
					STOCKDISPATCHDETAIL SED WITH(NOLOCK) 
					INNER JOIN STOCKDISPATCH SD WITH(NOLOCK) ON SD.STOCKDISPATCHID = SED.STOCKDISPATCHID
					INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = SED.ITEMPRICEID
					INNER JOIN BRANCH BINNER WITH(NOLOCK) ON BINNER.BRANCHID = SD.TOBRANCHID
				WHERE
					IP.ITEMCODEID = @ItemCodeID
					AND (SD.TOBRANCHID = @BranchID OR @BranchID = 0)
					AND (@FromDate IS NULL OR SD.CREATEDDATE > @FromDate)
					AND (@ToDate IS NULL OR SD.CREATEDDATE < @ToDate)
					AND SED.DELETEDDATE IS NULL AND SD.DELETEDDATE IS NULL
				GROUP BY BINNER.BRANCHID
			) SD ON SD.BRANCHID = B.BRANCHID
		LEFT JOIN 
			(
				SELECT BINNER.BRANCHID, SUM(PBD.QUANTITY) AS SALEQUANTITY
				FROM
					POS_BILLDETAIL PBD WITH(NOLOCK)
					INNER JOIN POS_BILL PB WITH(NOLOCK) ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
					INNER JOIN BRANCHCOUNTER BC WITH(NOLOCK) ON BC.COUNTERID = PBD.BRANCHCOUNTERID
					INNER JOIN BRANCH BINNER WITH(NOLOCK) ON BINNER.BRANCHID = BC.BRANCHID
					INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBD.ITEMPRICEID
				WHERE
					IP.ITEMCODEID = @ItemCodeID
					AND (BINNER.BRANCHID = @BranchID OR @BranchID = 0)
					AND (@FromDate IS NULL OR PB.CREATEDDATE > @FromDate)
					AND (@ToDate IS NULL OR PB.CREATEDDATE < @ToDate)
					AND PBD.DELETEDDATE IS NULL AND PB.DELETEDDATE IS NULL
					AND PB.DAYCLOSUREID IS NOT NULL
				GROUP BY BINNER.BRANCHID
			) ITEMSALE ON ITEMSALE.BRANCHID = B.BRANCHID
		LEFT JOIN 
			(
				SELECT PBR.BRANCHID, SUM(PBRD.QUANTITY) AS BREFUNDQUANTITY
				FROM
					POS_BREFUNDDETAIL PBRD WITH(NOLOCK) 
					INNER JOIN POS_BREFUND PBR WITH(NOLOCK) ON PBR.BREFUNDID = PBRD.BREFUNDID AND PBR.COUNTERID = PBRD.COUNTERID
					INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBRD.ITEMPRICEID
				WHERE
					IP.ITEMCODEID = @ItemCodeID
					AND (PBR.BRANCHID = @BranchID OR @BranchID = 0)
					AND PBR.IsAccepted = 1
					AND (@FromDate IS NULL OR PBR.CREATEDATE > @FromDate)
					AND (@ToDate IS NULL OR PBR.CREATEDATE < @ToDate)
					AND PBRD.DELETEDDATE IS NULL AND PBR.DELETEDDATE IS NULL	
				GROUP BY PBR.BRANCHID
			) BREFUND ON BREFUND.BRANCHID = B.BRANCHID
		LEFT JOIN
			(
				SELECT BC.BRANCHID, SUM(PCR.REFUNDQUANTITY) AS CREFUNDQUANTITY
				FROM
					POS_CREFUND PCR WITH(NOLOCK) 
					INNER JOIN POS_BILLDETAIL PBD WITH(NOLOCK) ON PBD.BILLDETAILID = PCR.BILLDETAILID AND PBD.BRANCHCOUNTERID = PCR.COUNTERID
					INNER JOIN POS_BILL PB WITH(NOLOCK) ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
					INNER JOIN BRANCHCOUNTER BC WITH(NOLOCK) ON BC.COUNTERID = PCR.COUNTERID
					INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBD.ITEMPRICEID
				WHERE
					IP.ITEMCODEID = @ItemCodeID
					AND (BC.BRANCHID = @BranchID OR @BranchID = 0)
					AND (@FromDate IS NULL OR PCR.CREATEDDATE > @FromDate)
					AND (@ToDate IS NULL OR PCR.CREATEDDATE < @ToDate)
					AND PCR.DELETEDDATE IS NULL AND PBD.DELETEDDATE IS NULL AND PB.DELETEDDATE IS NULL
				GROUP BY BC.BRANCHID
			) CREFUND ON CREFUND.BRANCHID = B.BRANCHID

	WHERE
		IC.ITEMCODEID = @ItemCodeID AND (B.BRANCHID = @BranchID OR @BranchID = 0)
	ORDER BY B.BRANCHCODE


	SELECT SED.STOCKENTRYDETAILID, SED.STOCKENTRYID, DLR.DEALERNAME, SE.SUPPLIERINVOICENO, SE.CREATEDDATE, IP.MRP, IP.SALEPRICE, SED.QUANTITY, SED.WEIGHTINKGS
	FROM
		STOCKENTRYDETAIL SED WITH(NOLOCK) 
		INNER JOIN STOCKENTRY SE WITH(NOLOCK) ON SE.STOCKENTRYID = SED.STOCKENTRYID
		INNER JOIN ITEMCOSTPRICE ICP WITH(NOLOCK) ON ICP.ITEMCOSTPRICEID = SED.ITEMCOSTPRICEID
		INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = ICP.ITEMPRICEID
		INNER JOIN TBLDEALER DLR WITH(NOLOCK) ON DLR.DEALERID = SE.SUPPLIERID
	WHERE
		IP.ITEMCODEID = @ItemCodeID
		AND (@FromDate IS NULL OR SE.CREATEDDATE > @FromDate)
		AND (@ToDate IS NULL OR SE.CREATEDDATE < @ToDate)
		AND SED.DELETEDDATE IS NULL AND SE.DELETEDDATE IS NULL

		
	SELECT 
		B.BRANCHID, SED.STOCKDISPATCHDETAILID, SED.STOCKDISPATCHID, SD.DISPATCHNUMBER, SD.CREATEDDATE, IP.MRP, IP.SALEPRICE, SED.DISPATCHQUANTITY, SED.WEIGHTINKGS
	FROM
		STOCKDISPATCHDETAIL SED WITH(NOLOCK) 
		INNER JOIN STOCKDISPATCH SD WITH(NOLOCK) ON SD.STOCKDISPATCHID = SED.STOCKDISPATCHID
		INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = SED.ITEMPRICEID
		INNER JOIN BRANCH B WITH(NOLOCK) ON B.BRANCHID = SD.TOBRANCHID
	WHERE
		IP.ITEMCODEID = @ItemCodeID
		AND (SD.TOBRANCHID = @BranchID OR @BranchID = 0)
		AND (@FromDate IS NULL OR SD.CREATEDDATE > @FromDate)
		AND (@ToDate IS NULL OR SD.CREATEDDATE < @ToDate)
		AND SED.DELETEDDATE IS NULL AND SD.DELETEDDATE IS NULL
		

	SELECT PBR.BRANCHID, PBRD.BREFUNDDETAILID, PBRD.BREFUNDID, PBR.BREFUNDNUMBER, PBR.CREATEDATE, IP.MRP
		, IP.SALEPRICE, PBRD.QUANTITY, PBRD.WEIGHTINKGS, PBRD.ACCEPTEDQUANTITY, PBRD.ACCEPTEDWEIGHTKGS
	FROM
		POS_BREFUNDDETAIL PBRD WITH(NOLOCK) 
		INNER JOIN POS_BREFUND PBR WITH(NOLOCK) ON PBR.BREFUNDID = PBRD.BREFUNDID AND PBR.COUNTERID = PBRD.COUNTERID
		INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBRD.ITEMPRICEID
	WHERE
		IP.ITEMCODEID = @ItemCodeID
		AND (PBR.BRANCHID = @BranchID OR @BranchID = 0)
		AND PBR.IsAccepted = 1
		AND (@FromDate IS NULL OR PBR.CREATEDATE > @FromDate)
		AND (@ToDate IS NULL OR PBR.CREATEDATE < @ToDate)
		AND PBRD.DELETEDDATE IS NULL AND PBR.DELETEDDATE IS NULL
		
	SELECT 
		B.BRANCHID, CAST(PB.CREATEDDATE AS DATE) AS BILLDATE, CASE WHEN @IncludeBillNumber = 1 THEN PB.BILLNUMBER ELSE NULL END BILLNUMBER
		, IP.MRP, IP.SALEPRICE, SUM(PBD.QUANTITY) AS QUANTITY, SUM(PBD.WEIGHTINKGS) AS WEIGHTINKGS		
	FROM
		POS_BILLDETAIL PBD WITH(NOLOCK)
		INNER JOIN POS_BILL PB WITH(NOLOCK) ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
		INNER JOIN BRANCHCOUNTER BC WITH(NOLOCK) ON BC.COUNTERID = PBD.BRANCHCOUNTERID
		INNER JOIN BRANCH B WITH(NOLOCK) ON B.BRANCHID = BC.BRANCHID
		INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBD.ITEMPRICEID
	WHERE
		IP.ITEMCODEID = @ItemCodeID
		AND (B.BRANCHID = @BranchID OR @BranchID = 0)
		AND (@FromDate IS NULL OR PB.CREATEDDATE > @FromDate)
		AND (@ToDate IS NULL OR PB.CREATEDDATE < @ToDate)
		AND PBD.DELETEDDATE IS NULL AND PB.DELETEDDATE IS NULL
		AND PB.DAYCLOSUREID IS NOT NULL
		GROUP BY B.BRANCHID, CAST(PB.CREATEDDATE AS DATE), IP.MRP, IP.SALEPRICE, CASE WHEN @IncludeBillNumber = 1 THEN PB.BILLNUMBER ELSE NULL END

	SELECT B.BRANCHID, PCR.REFUNDID, PBD.BILLDETAILID, PBD.BILLID, PCR.CREATEDDATE AS REFUNDDATE
		, PB.BILLNUMBER, IP.MRP, IP.SALEPRICE, PCR.REFUNDQUANTITY, PCR.REFUNDWEIGHTINKGS
	FROM
		POS_CREFUND PCR WITH(NOLOCK) 
		INNER JOIN POS_BILLDETAIL PBD WITH(NOLOCK) ON PBD.BILLDETAILID = PCR.BILLDETAILID AND PBD.BRANCHCOUNTERID = PCR.COUNTERID
		INNER JOIN POS_BILL PB WITH(NOLOCK) ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
		INNER JOIN BRANCHCOUNTER BC WITH(NOLOCK) ON BC.COUNTERID = PCR.COUNTERID
		INNER JOIN BRANCH B WITH(NOLOCK) ON B.BRANCHID = BC.BRANCHID
		INNER JOIN ITEMPRICE IP WITH(NOLOCK) ON IP.ITEMPRICEID = PBD.ITEMPRICEID
	WHERE
		IP.ITEMCODEID = @ItemCodeID
		AND (B.BRANCHID = @BranchID OR @BranchID = 0)
		AND (@FromDate IS NULL OR PCR.CREATEDDATE > @FromDate)
		AND (@ToDate IS NULL OR PCR.CREATEDDATE < @ToDate)
		AND PCR.DELETEDDATE IS NULL AND PBD.DELETEDDATE IS NULL AND PB.DELETEDDATE IS NULL
END
GO
ALTER PROCEDURE [dbo].[USP_R_BRANCHINDENT]
@BranchID INT,
@CategoryID INT,
@FromDate DATE,
@ToDate DATE
AS
BEGIN

	SELECT @ToDate = DATEADD(d, 1, @ToDate)

	SELECT ITEMID, SKUCODE, ITEMNAME, SUBCATEGORYNAME, BRANCHSTOCK, SALEQUANTITY, CASE INDENTQUANTITY WHEN 0 THEN 5 ELSE INDENTQUANTITY END AS INDENTQUANTITY
	FROM
		(
			SELECT 
				I.ITEMID, I.SKUCODE, I.ITEMNAME, SUBCAT.SUBCATEGORYNAME
				, BS.QUANTITY AS BRANCHSTOCK, ITEMSALE.SALEQUANTITY
				,  CAST(ROUND((CASE 
						WHEN  BS.QUANTITY < 0 THEN ITEMSALE.SALEQUANTITY				
						ELSE ((ITEMSALE.SALEQUANTITY) - (BS.QUANTITY))
					END  * 1.00 / 5), 0) AS INT) * 5 AS INDENTQUANTITY	
			FROM ITEM I 
				INNER JOIN 
					(
						SELECT IC.ITEMID, SUM(SSINNER.QUANTITY) AS QUANTITY, SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS 
						FROM STOCKSUMMARY SSINNER 
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
							INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
						WHERE SSINNER.BRANCHID = @BranchID
						GROUP BY IC.ITEMID
					) BS ON BS.ITEMID = I.ITEMID
				INNER JOIN	
					(
						SELECT IC.ITEMID, SUM(PBD.QUANTITY) AS SALEQUANTITY, SUM(PBD.WEIGHTINKGS) AS SALEWEIGHTINKGS
						FROM 
							POS_BILLDETAIL PBD
							INNER JOIN POS_BILL PB ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
							INNER JOIN BRANCHCOUNTER BC ON BC.COUNTERID = PB.BRANCHCOUNTERID
							INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = PBD.ITEMPRICEID
							INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
							INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
						WHERE
							BC.BRANCHID = @BranchID
							AND I.CATEGORYID = @CategoryID
							AND PB.CREATEDDATE >= @FromDate
							AND PB.CREATEDDATE <= @ToDate
							AND PB.BILLSTATUS = 1
							AND PB.DELETEDDATE IS NULL AND PBD.DELETEDDATE IS NULL
						GROUP BY IC.ITEMID
					) ITEMSALE ON ITEMSALE.ITEMID = I.ITEMID
				LEFT JOIN SUBCATEGORY SUBCAT ON SUBCAT.SUBCATEGORYID = I.SUBCATEGORYID
			WHERE 
				(((ITEMSALE.SALEQUANTITY) - (BS.QUANTITY)) * 1.00 / 5) > 0
				OR BS.QUANTITY < 0
		) BI
	ORDER BY ITEMNAME --12 DESC, 13 DESC
END
GO
ALTER PROC [dbo].[USP_RPT_ZEROSTOCK]  
(  
@BranchID INT = 0 ,
@CategoryID INT = 13,
@ThresholdValue int = 0
)  
AS  
BEGIN  
  
	DECLARE @WareHouseID INT = 45  

	IF EXISTS ( SELECT 1 FROM TBLCATEGORY WHERE CATEGORYID = @CategoryID AND CATEGORYNAME IN ('PLASTIC', 'JEWELLERY', 'FOOTWARE', 'CLOTH', 'GIFT') )
	BEGIN

		SELECT
			B.BRANCHNAME, I.SKUCODE, I.ITEMNAME,CAT.CATEGORYNAME, SUBCATEGORYNAME,STOCK.BRANCHSTOCK, STOCK.WAREHOUSESTOCK
		FROM
			(
				SELECT   
					I.ITEMID, @BranchID AS BRANCHID, 
					SUM(CASE WHEN PARENTITEMCODE.ITEMID IS NULL THEN CAST(SSWAREHOUSE.QUANTITY AS decimal(14, 2)) ELSE PARENTWHSTOCK.WEIGHTINKGS END) AS WAREHOUSESTOCK, 
					SUM(CASE WHEN I.ISOPENITEM = 1 THEN SS.WEIGHTINKGS ELSE CAST(SS.QUANTITY AS decimal(14, 2)) END) AS BRANCHSTOCK
				FROM 
					(
						SELECT IP.ITEMCODEID, SUM(QUANTITY) AS QUANTITY, SUM(WEIGHTINKGS) AS WEIGHTINKGS
						FROM STOCKSUMMARY SSINNER INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
						WHERE SSINNER.BRANCHID = @BranchID
						GROUP BY ITEMCODEID
					) SS  
					INNER JOIN 
					(
						SELECT IP.ITEMCODEID, SUM(SSINNER.QUANTITY) AS QUANTITY,
								SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS
						FROM STOCKSUMMARY SSINNER
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
						WHERE SSINNER.BRANCHID = @WareHouseID  
						GROUP BY IP.ITEMCODEID
					) SSWAREHOUSE ON SSWAREHOUSE.ITEMCODEID = SS.ITEMCODEID
					INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = SS.ITEMCODEID  
					INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
					LEFT JOIN ITEMCODE PARENTITEMCODE ON PARENTITEMCODE.ITEMID = CASE WHEN I.ISOPENITEM = 1 THEN I.ITEMID ELSE I.PARENTITEMID END
					LEFT JOIN 
					(
						SELECT IP.ITEMCODEID, SUM(SSINNER.QUANTITY) AS QUANTITY,
								SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS
						FROM STOCKSUMMARY SSINNER
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
						WHERE SSINNER.BRANCHID = @WareHouseID  
						GROUP BY IP.ITEMCODEID
					) PARENTWHSTOCK ON PARENTWHSTOCK.ITEMCODEID = PARENTITEMCODE.ITEMCODEID
				WHERE  I.CATEGORYID = @CategoryID				
					--AND CASE WHEN PARENTITEMCODE.ITEMID IS NULL THEN SSWAREHOUSE.QUANTITY ELSE PARENTWHSTOCK.WEIGHTINKGS END > 0
				GROUP BY I.ITEMID
				HAVING 
					SUM(CASE WHEN I.ISOPENITEM = 1 THEN SS.WEIGHTINKGS ELSE SS.QUANTITY END) >= 0
					AND SUM(CASE WHEN I.ISOPENITEM = 1 THEN SS.WEIGHTINKGS ELSE SS.QUANTITY END) <= @ThresholdValue
					AND SUM(CASE WHEN PARENTITEMCODE.ITEMID IS NULL THEN SSWAREHOUSE.QUANTITY ELSE PARENTWHSTOCK.WEIGHTINKGS END) > 0
			) STOCK
			INNER JOIN BRANCH B ON B.BRANCHID = STOCK.BRANCHID  
			INNER JOIN ITEM I ON I.ITEMID = STOCK.ITEMID
			INNER JOIN TBLCATEGORY CAT ON CAT.CATEGORYID = I.CATEGORYID  
			LEFT JOIN SUBCATEGORY SUBCAT ON SUBCAT.SUBCATEGORYID = I.SUBCATEGORYID  
	END
	ELSE
	BEGIN

		SELECT
			B.BRANCHNAME, I.SKUCODE, I.ITEMNAME,CAT.CATEGORYNAME, SUBCATEGORYNAME,STOCK.BRANCHSTOCK, STOCK.WAREHOUSESTOCK
		FROM
			(
				SELECT   
					I.ITEMID, @BranchID AS BRANCHID, 
					SUM(CASE WHEN PARENTITEMCODE.ITEMID IS NULL THEN CAST(SSWAREHOUSE.QUANTITY AS decimal(14, 2)) ELSE PARENTWHSTOCK.WEIGHTINKGS END) AS WAREHOUSESTOCK, 
					SUM(CASE WHEN I.ISOPENITEM = 1 THEN SS.WEIGHTINKGS ELSE CAST(SS.QUANTITY AS decimal(14, 2)) END) AS BRANCHSTOCK
				FROM 
					(
						SELECT IP.ITEMCODEID, SUM(QUANTITY) AS QUANTITY, SUM(WEIGHTINKGS) AS WEIGHTINKGS
						FROM STOCKSUMMARY  SSINNER
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
						WHERE SSINNER.BRANCHID = @BranchID
						GROUP BY ITEMCODEID
					) SS  
					INNER JOIN 
					(
						SELECT IP.ITEMCODEID, SUM(SSINNER.QUANTITY) AS QUANTITY,
								SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS
						FROM STOCKSUMMARY SSINNER
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
						WHERE SSINNER.BRANCHID = @WareHouseID  
						GROUP BY IP.ITEMCODEID
					) SSWAREHOUSE ON SSWAREHOUSE.ITEMCODEID = SS.ITEMCODEID 
					INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = SS.ITEMCODEID  
					INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
					LEFT JOIN ITEMCODE PARENTITEMCODE ON PARENTITEMCODE.ITEMID = CASE WHEN I.ISOPENITEM = 1 THEN I.ITEMID ELSE I.PARENTITEMID END
					LEFT JOIN 
					(
						SELECT IP.ITEMCODEID, SUM(SSINNER.QUANTITY) AS QUANTITY,
								SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS
						FROM STOCKSUMMARY SSINNER
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
						WHERE SSINNER.BRANCHID = @WareHouseID  
						GROUP BY IP.ITEMCODEID
					)
					PARENTWHSTOCK ON PARENTWHSTOCK.ITEMCODEID = PARENTITEMCODE.ITEMCODEID
				WHERE  I.CATEGORYID = @CategoryID				
					--AND CASE WHEN PARENTITEMCODE.ITEMID IS NULL THEN SSWAREHOUSE.QUANTITY ELSE PARENTWHSTOCK.WEIGHTINKGS END > 0
				GROUP BY I.ITEMID
				HAVING 
					SUM(CASE WHEN I.ISOPENITEM = 1 THEN SS.WEIGHTINKGS ELSE SS.QUANTITY END) >= 0
					AND SUM(CASE WHEN I.ISOPENITEM = 1 THEN SS.WEIGHTINKGS ELSE SS.QUANTITY END) <= @ThresholdValue
					AND SUM(CASE WHEN PARENTITEMCODE.ITEMID IS NULL THEN SSWAREHOUSE.QUANTITY ELSE PARENTWHSTOCK.WEIGHTINKGS END) > 0
			) STOCK
			INNER JOIN BRANCH B ON B.BRANCHID = STOCK.BRANCHID  
			INNER JOIN ITEM I ON I.ITEMID = STOCK.ITEMID
			INNER JOIN TBLCATEGORY CAT ON CAT.CATEGORYID = I.CATEGORYID  
			LEFT JOIN SUBCATEGORY SUBCAT ON SUBCAT.SUBCATEGORYID = I.SUBCATEGORYID  
		WHERE EXISTS
			(
				SELECT 1
				FROM
					POS_BILLDETAIL PBD
					INNER JOIN POS_BILL PB ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
					INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = PBD.ITEMPRICEID
					INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
					INNER JOIN BRANCHCOUNTER BC ON BC.COUNTERID = PB.BRANCHCOUNTERID
				WHERE 
					IC.ITEMID = STOCK.ITEMID 
					AND BC.BRANCHID = STOCK.BRANCHID 
					AND PBD.DELETEDDATE IS NULL
					AND PB.BILLSTATUS = 1
					AND PB.CREATEDDATE > CAST(DATEADD(M, -1, GETDATE()) AS DATE)
				GROUP BY BC.BRANCHID, IC.ITEMID
				HAVING SUM(QUANTITY) > 2 OR SUM(WEIGHTINKGS) > 2
			)

	END
END
GO
ALTER PROCEDURE [dbo].[USP_RPT_BRANCHINDENT_AVG]
@BranchID INT,
@CategoryID INT,
@NoOfDays INT = 1
AS
BEGIN
	
	DECLARE @FromDate DATE = '2022-04-01', @ToDate DATE = CAST(GETDATE() AS DATE)
	DECLARE @SaleDays INT = DATEDIFF(d, @FromDate, @ToDate)
	
	SELECT ITEMID, SKUCODE, ITEMNAME, SUBCATEGORYNAME, BRANCHSTOCK, SALEQUANTITY AS AVGSALEQUANTITY, CASE INDENTQUANTITY WHEN 0 THEN 5 ELSE INDENTQUANTITY END AS INDENTQUANTITY
	FROM
		(
			SELECT 
				I.ITEMID, I.SKUCODE, I.ITEMNAME, SUBCAT.SUBCATEGORYNAME
				, BS.QUANTITY AS BRANCHSTOCK, ITEMSALE.SALEQUANTITY
				,  CAST(ROUND((CASE 
						WHEN  BS.QUANTITY < 0 THEN (ITEMSALE.SALEQUANTITY * @NoOfDays)
						ELSE ((ITEMSALE.SALEQUANTITY * @NoOfDays) - (BS.QUANTITY))
					END  * 1.00 / 5), 0) AS INT) * 5 AS INDENTQUANTITY	
			FROM ITEM I 
				INNER JOIN 
					(
						SELECT IC.ITEMID, SUM(SSINNER.QUANTITY) AS QUANTITY, SUM(SSINNER.WEIGHTINKGS) AS WEIGHTINKGS 
						FROM STOCKSUMMARY SSINNER 
							INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
							INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID 
						WHERE SSINNER.BRANCHID = @BranchID
						GROUP BY IC.ITEMID
					) BS ON BS.ITEMID = I.ITEMID
				INNER JOIN	
					(
						SELECT IC.ITEMID, (SUM(PBD.QUANTITY) / COUNT(DISTINCT CAST(PB.CREATEDDATE AS DATE))) AS SALEQUANTITY, SUM(PBD.WEIGHTINKGS) AS SALEWEIGHTINKGS
						FROM 
							POS_BILLDETAIL PBD
							INNER JOIN POS_BILL PB ON PB.BILLID = PBD.BILLID AND PB.BRANCHCOUNTERID = PBD.BRANCHCOUNTERID
							INNER JOIN BRANCHCOUNTER BC ON BC.COUNTERID = PB.BRANCHCOUNTERID
							INNER JOIN ITEMPRICE IP ON IP.ITEMPRICEID = PBD.ITEMPRICEID
							INNER JOIN ITEMCODE IC ON IC.ITEMCODEID = IP.ITEMCODEID
							INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
						WHERE
							BC.BRANCHID = @BranchID
							AND I.CATEGORYID = @CategoryID
							AND PB.CREATEDDATE >= @FromDate
							AND PB.CREATEDDATE <= @ToDate
							AND PB.BILLSTATUS = 1
							AND PB.DELETEDDATE IS NULL AND PBD.DELETEDDATE IS NULL
						GROUP BY IC.ITEMID
					) ITEMSALE ON ITEMSALE.ITEMID = I.ITEMID
				LEFT JOIN SUBCATEGORY SUBCAT ON SUBCAT.SUBCATEGORYID = I.SUBCATEGORYID
			WHERE 
				(((ITEMSALE.SALEQUANTITY * @NoOfDays) - (BS.QUANTITY)) * 1.00 / 5) > 0
				OR BS.QUANTITY < 0
		) BI
	ORDER BY ITEMNAME --12 DESC, 13 DESC
END
GO