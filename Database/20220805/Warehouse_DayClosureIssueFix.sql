IF NOT EXISTS ( SELECT 1 FROM SYS.columns WHERE [object_id] = OBJECT_ID('POS_DAYCLOSURE') AND [name] = 'BILLCOUNT' )
BEGIN
	EXEC ('ALTER TABLE POS_DAYCLOSURE ADD BILLCOUNT INT')
END
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.columns WHERE [object_id] = OBJECT_ID('POS_DAYCLOSURE') AND [name] = 'BILLDETAILCOUNT' )
BEGIN
	EXEC ('ALTER TABLE POS_DAYCLOSURE ADD BILLDETAILCOUNT INT')
END
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.columns WHERE [object_id] = OBJECT_ID('POS_DAYCLOSURE') AND [name] = 'CREFUNDCOUNT' )
BEGIN
	EXEC ('ALTER TABLE POS_DAYCLOSURE ADD CREFUNDCOUNT INT')
END
GO

IF NOT EXISTS ( SELECT 1 FROM SYS.columns WHERE [object_id] = OBJECT_ID('POS_DAYCLOSURE') AND [name] = 'ISPROCESSED' )
BEGIN
	EXEC ('ALTER TABLE POS_DAYCLOSURE ADD ISPROCESSED BIT')
	EXEC ('UPDATE POS_DAYCLOSURE SET ISPROCESSED = 1')
END
GO


/****** Object:  StoredProcedure [dbo].[USP_SYNC_CU_DAYCLOSURE]    Script Date: 05-08-2022 21:33:45 ******/
DROP PROCEDURE [dbo].[USP_SYNC_CU_DAYCLOSURE]
GO

/****** Object:  UserDefinedTableType [dbo].[POS_DAYCLOSURETYPE]    Script Date: 05-08-2022 21:34:09 ******/
DROP TYPE [dbo].[POS_DAYCLOSURETYPE]
GO

/****** Object:  UserDefinedTableType [dbo].[POS_DAYCLOSURETYPE]    Script Date: 05-08-2022 21:34:09 ******/
CREATE TYPE [dbo].[POS_DAYCLOSURETYPE] AS TABLE(
	[DAYCLOSUREID] [int] NOT NULL,
	[CLOSUREDATE] [datetime] NULL,
	[BRANCHCOUNTERID] [int] NULL,
	[OPENINGBALANCE] [decimal](10, 2) NULL,
	[CLOSINGBALANCE] [decimal](10, 2) NULL,
	[CLOSINGDIFFERENCE] [decimal](10, 2) NULL,
	[CLOSEDBY] [int] NULL,
	[REFUNDAMOUNT] [decimal](10, 2) NULL,
	[CREATEDBY] [int] NULL,
	[CREATEDDATE] [datetime] NULL,
	[UPDATEDBY] [int] NULL,
	[UPDATEDDATE] [datetime] NULL,
	[BILLCOUNT] INT NULL,
	BILLDETAILCOUNT INT NULL,
	CREFUNDQUANTITY INT NULL
)
GO

CREATE OR ALTER PROC USP_P_DAYCLOSURES
AS
BEGIN

	SELECT DCL.BRANCHCOUNTERID, DCL.DAYCLOSUREID
	INTO #DayClosuresToProcess
	FROM
		POS_DAYCLOSURE DCL
		INNER JOIN
			(
				SELECT PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFBILLDETAILRECS FROM POS_BILLDETAIL PBD 
				GROUP BY PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID
			) BD ON BD.BRANCHCOUNTERID = DCL.BRANCHCOUNTERID AND BD.DAYCLOSUREID = DCL.DAYCLOSUREID
		INNER JOIN
			(
				SELECT PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFBILLRECS FROM POS_BILL PBD 
				GROUP BY PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID
			) B ON B.BRANCHCOUNTERID = DCL.BRANCHCOUNTERID AND B.DAYCLOSUREID = DCL.DAYCLOSUREID
		LEFT JOIN
			(
				SELECT PBD.COUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFCREFUNDRECS FROM POS_CREFUND PBD 
				GROUP BY PBD.COUNTERID, PBD.DAYCLOSUREID
			) CRF ON CRF.COUNTERID = DCL.BRANCHCOUNTERID AND CRF.DAYCLOSUREID = DCL.DAYCLOSUREID
	WHERE 
		ISNULL(DCL.ISPROCESSED, 0) = 0 
		AND DCL.BILLCOUNT = B.NOOFBILLRECS
		AND DCL.BILLDETAILCOUNT = BD.NOOFBILLDETAILRECS
		AND DCL.CREFUNDCOUNT = ISNULL(CRF.NOOFCREFUNDRECS, 0)

   
	MERGE STOCKSUMMARY AS Target        
	USING       
		(      
			SELECT       
				BC.BRANCHID,IC.ITEMCODEID, SUM(BD.QUANTITY) AS QUANTITY, SUM(BD.WEIGHTINKGS) AS WEIGHTINKGS      
			FROM       
				POS_BILLDETAIL BD      
				INNER JOIN ITEMPRICE IP ON BD.ITEMPRICEID = IP.ITEMPRICEID  
				INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID  
				INNER JOIN POS_BILL B ON BD.BILLID = B.BILLID 
					AND BD.BRANCHCOUNTERID = B.BRANCHCOUNTERID  
					--AND B.DAYCLOSUREID = BD.DAYCLOSUREID    
				INNER JOIN #DayClosuresToProcess UDC ON B.DAYCLOSUREID = UDC.DAYCLOSUREID 
					AND B.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID      
				INNER JOIN BRANCHCOUNTER BC ON B.BRANCHCOUNTERID = BC.COUNTERID      
			WHERE      
				B.DELETEDDATE IS NULL 
				AND BD.DELETEDDATE IS NULL 
				AND B.BILLSTATUS = 1 
				AND NOT EXISTS       
				(      
					SELECT 1 FROM POS_DAYCLOSURE DCINNER       
					WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID       
					AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID                
				)      
			GROUP BY BC.BRANCHID,IC.ITEMCODEID      
		) AS Source              
	ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMCODEID = Target.ITEMCODEID  
                  
	WHEN MATCHED THEN UPDATE
	SET              
		Target.QUANTITY = ISNULL(Target.QUANTITY,0) - ISNULL(Source.QUANTITY,0),              
		Target.WEIGHTINKGS = ISNULL(Target.WEIGHTINKGS,0) - ISNULL(Source.WEIGHTINKGS,0),
		Target.TTYPE = 'BS' ;      
   
	MERGE STOCKSUMMARY AS Target        
	USING       
		(      
			SELECT       
				BC.BRANCHID,IC.ITEMCODEID, SUM(CR.REFUNDQUANTITY) AS QUANTITY, SUM(CR.REFUNDWEIGHTINKGS) AS WEIGHTINKGS      
			FROM       
				POS_CREFUND CR      
				INNER JOIN POS_BILLDETAIL BD ON CR.BILLDETAILID = BD.BILLDETAILID 
					AND CR.COUNTERID = BD.BRANCHCOUNTERID  
					--AND CR.DAYCLOSUREID = BD.DAYCLOSUREID    
				INNER JOIN ITEMPRICE IP ON BD.ITEMPRICEID = IP.ITEMPRICEID  
				INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID  
				INNER JOIN #DayClosuresToProcess UDC ON CR.DAYCLOSUREID = UDC.DAYCLOSUREID  
					AND CR.COUNTERID = UDC.BRANCHCOUNTERID      
				INNER JOIN BRANCHCOUNTER BC ON CR.COUNTERID = BC.COUNTERID      
			WHERE NOT EXISTS       
				(      
					SELECT 1 FROM POS_DAYCLOSURE DCINNER       
					WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID                
						AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID                
				)      
				AND CR.DELETEDDATE IS NULL    
			GROUP BY BC.BRANCHID,IC.ITEMCODEID      
		) AS Source              
	ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMCODEID = Target.ITEMCODEID        
                  
	WHEN MATCHED THEN UPDATE 
	SET              
		Target.QUANTITY = ISNULL(Target.QUANTITY,0) + ISNULL(Source.QUANTITY,0),              
		Target.WEIGHTINKGS = ISNULL(Target.WEIGHTINKGS,0) + ISNULL(Source.WEIGHTINKGS,0),
		Target.TTYPE = 'CR' ;      
      
	UPDATE BC    
	SET     
		BC.DAYCLOSUREID = MAXDC.MAXDAYCLOSUREID    
		, UPDATEDDATE = GETDATE()    
	FROM     
	BRANCHCOUNTER BC    
		INNER JOIN     
			(    
				SELECT DC.BRANCHCOUNTERID, MAX(DC.DAYCLOSUREID) AS MAXDAYCLOSUREID     
				FROM #DayClosuresToProcess DC     
				GROUP BY DC.BRANCHCOUNTERID    
			) MAXDC ON MAXDC.BRANCHCOUNTERID = BC.COUNTERID    
	WHERE ISNULL(BC.DAYCLOSUREID, 0) < MAXDC.MAXDAYCLOSUREID    

	UPDATE DCL
	SET DCL.ISPROCESSED = 1
	FROM
		POS_DAYCLOSURE DCL
		INNER JOIN #DayClosuresToProcess DCLTPR ON DCLTPR.DAYCLOSUREID = DCL.DAYCLOSUREID
			AND DCLTPR.BRANCHCOUNTERID = DCL.BRANCHCOUNTERID

	SELECT COUNT(1) FROM #DayClosuresToProcess

END
GO


/****** Object:  StoredProcedure [dbo].[USP_SYNC_CU_DAYCLOSURE]    Script Date: 05-08-2022 21:33:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_SYNC_CU_DAYCLOSURE]                  
(                  
 @DayClosure POS_DAYCLOSURETYPE READONLY          
)                  
AS                  
BEGIN                  
   
	INSERT INTO POS_DAYCLOSURE(DAYCLOSUREID, CLOSUREDATE, BRANCHCOUNTERID, OPENINGBALANCE,              
		CLOSINGBALANCE, CLOSINGDIFFERENCE, CLOSEDBY, REFUNDAMOUNT, CREATEDBY, CREATEDDATE,              
		UPDATEDBY, UPDATEDDATE, BILLCOUNT, BILLDETAILCOUNT, CREFUNDCOUNT, ISPROCESSED)                  
	SELECT DAYCLOSUREID, CLOSUREDATE, BRANCHCOUNTERID ,OPENINGBALANCE, CLOSINGBALANCE,
		CLOSINGDIFFERENCE, CLOSEDBY, REFUNDAMOUNT, CREATEDBY, CREATEDDATE, UPDATEDBY, 
		UPDATEDDATE, BILLCOUNT, BILLDETAILCOUNT, CREFUNDQUANTITY, 0
	FROM @DayClosure UDC                
	WHERE NOT EXISTS                  
		(                  
			SELECT 1 FROM POS_DAYCLOSURE DCINNER WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID                
			AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID                
		)   
	
	INSERT INTO DAYCLOSURELOG(BRANCHCOUNTERID, DAYCLOSUREID, NOOFBILLDETAILRECS, CREATEDDATE, NOOFBILLRECS)
	SELECT UDC.BRANCHCOUNTERID, UDC.DAYCLOSUREID, BD.NOOFBILLDETAILRECS, GETDATE(), B.NOOFBILLRECS
	FROM 
		@DayClosure UDC
		LEFT JOIN
			(
				SELECT PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFBILLDETAILRECS FROM POS_BILLDETAIL PBD 
				GROUP BY PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID
			) BD ON BD.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID AND BD.DAYCLOSUREID = UDC.DAYCLOSUREID
		LEFT JOIN
			(
				SELECT PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID, COUNT(1) NOOFBILLRECS FROM POS_BILL PBD 
				GROUP BY PBD.BRANCHCOUNTERID, PBD.DAYCLOSUREID
			) B ON B.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID AND B.DAYCLOSUREID = UDC.DAYCLOSUREID

	EXEC USP_P_DAYCLOSURES

END
GO


/****** Object:  StoredProcedure [dbo].[USP_R_DAYCLOSURE]    Script Date: 05-08-2022 23:50:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[USP_R_DAYCLOSURE]                  
@BRANCHID INT = 0,      
@FromDate Date = NULL,      
@ToDate Date = NULL      
                  
AS                  
BEGIN                  
                  
	SELECT                 
		DC.DAYCLOSUREID,  
		B.BRANCHNAME,                
		BC.COUNTERNAME,
		DC.CLOSUREDATE,                
		DC.BRANCHCOUNTERID,                
		DC.OPENINGBALANCE,     
		DC.REFUNDAMOUNT,
		DC.OPENINGBALANCE - DC.REFUNDAMOUNT AS DAYTURNOVER,                
		DC.CLOSINGBALANCE,                
		DC.CLOSINGDIFFERENCE,                
		CU.FULLNAME AS CLOSEDBY   
		, CASE WHEN DC.ISPROCESSED = 1 THEN 'Processed' ELSE 'Yet to process' END AS IsProcessed
	FROM POS_DAYCLOSURE DC                  
		INNER JOIN BRANCHCOUNTER BC ON DC.BRANCHCOUNTERID = BC.COUNTERID                  
		INNER JOIN BRANCH B ON BC.BRANCHID = B.BRANCHID              
		INNER JOIN TBLUSER CU ON DC.CLOSEDBY = CU.USERID                
	WHERE (B.BRANCHID = @BRANCHID OR @BRANCHID = 0)      
		AND DC.CREATEDDATE >= @FromDate     
		AND DC.CREATEDDATE <= DATEADD(day,1,@ToDate)
	ORDER BY B.BRANCHCODE ASC,BC.COUNTERNAME ASC,DC.CLOSUREDATE DESC  
  
                  
END
GO

