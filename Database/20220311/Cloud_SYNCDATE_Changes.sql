
--SELECT REPLACE('
--IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID(''{0}'') AND [name] = ''SYNCDATE'')
--BEGIN
--	EXEC(''ALTER TABLE {0} ADD SYNCDATE DATETIME'')
--END
--GO

--', '{0}', [name]) from sys.tables where type = 'U' and name not like 'ENTITY%'


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('ITEM') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE ITEM ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('ITEMCODE') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE ITEMCODE ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('ITEMPRICE') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE ITEMPRICE ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('STOCKDISPATCH') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE STOCKDISPATCH ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('STOCKDISPATCHDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE STOCKDISPATCHDETAIL ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('TBLMOP') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE TBLMOP ADD SYNCDATE DATETIME')
END
GO


--IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('TBLROLE') AND [name] = 'SYNCDATE')
--BEGIN
--	EXEC('ALTER TABLE TBLROLE ADD SYNCDATE DATETIME')
--END
--GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('TBLUSER') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE TBLUSER ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('UOM') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE UOM ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_DENOMINATION') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_DENOMINATION ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('ITEMGROUP') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE ITEMGROUP ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('ITEMGROUPDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE ITEMGROUPDETAIL ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('OFFER') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE OFFER ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('OFFERBRANCH') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE OFFERBRANCH ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('OFFERITEMMAP') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE OFFERITEMMAP ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('OFFERTYPE') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE OFFERTYPE ADD SYNCDATE DATETIME')
END
GO


--IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('CLOUD_STOCKDISPATCH') AND [name] = 'SYNCDATE')
--BEGIN
--	EXEC('ALTER TABLE CLOUD_STOCKDISPATCH ADD SYNCDATE DATETIME')
--END
--GO


--IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('CLOUD_STOCKCOUNTING') AND [name] = 'SYNCDATE')
--BEGIN
--	EXEC('ALTER TABLE CLOUD_STOCKCOUNTING ADD SYNCDATE DATETIME')
--END
--GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_DAYSEQUENCE') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_DAYSEQUENCE ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_BILLMOPDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_BILLMOPDETAIL ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_BREFUND') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_BREFUND ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_BREFUNDDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_BREFUNDDETAIL ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_DAYCLOSUREDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_DAYCLOSUREDETAIL ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_BILLDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_BILLDETAIL ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('TBLCATEGORY') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE TBLCATEGORY ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_CREFUND') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_CREFUND ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_DAYCLOSURE') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_DAYCLOSURE ADD SYNCDATE DATETIME')
END
GO


--IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('CLOUD_STOCKDISPATCHDETAIL') AND [name] = 'SYNCDATE')
--BEGIN
--	EXEC('ALTER TABLE CLOUD_STOCKDISPATCHDETAIL ADD SYNCDATE DATETIME')
--END
--GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('POS_BILL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE POS_BILL ADD SYNCDATE DATETIME')
END
GO


--IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('CLOUD_STOCKCOUNTINGDETAIL') AND [name] = 'SYNCDATE')
--BEGIN
--	EXEC('ALTER TABLE CLOUD_STOCKCOUNTINGDETAIL ADD SYNCDATE DATETIME')
--END
--GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('BRANCH') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE BRANCH ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('BRANCHCOUNTER') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE BRANCHCOUNTER ADD SYNCDATE DATETIME')
END
GO


IF NOT EXISTS (SELECT 1 FROM sys.all_columns where [object_id] = OBJECT_ID('GSTDETAIL') AND [name] = 'SYNCDATE')
BEGIN
	EXEC('ALTER TABLE GSTDETAIL ADD SYNCDATE DATETIME')
END
GO

/****** Object:  StoredProcedure [dbo].[USP_R_GETSYNCDATA]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_R_GETSYNCDATA]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_USER]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_USER]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_UOM]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_UOM]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_TBLCATEGORY]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_TBLCATEGORY]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_STOCKDISPATCHDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_STOCKDISPATCHDETAIL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_STOCKDISPATCH]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_STOCKDISPATCH]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ROLE]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_ROLE]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_DAYSEQUENCE]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_DAYSEQUENCE]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_DAYCLOSUREDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_DAYCLOSUREDETAIL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_DAYCLOSURE]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_DAYCLOSURE]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_CREFUND]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_CREFUND]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BREFUNDDETAL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_BREFUNDDETAL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BREFUND]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_BREFUND]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BILLMOPDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_BILLMOPDETAIL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BILLDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_BILLDETAIL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BILL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_POS_BILL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFERTYPE]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_OFFERTYPE]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFERITEMMAP]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_OFFERITEMMAP]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFERBRANCH]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_OFFERBRANCH]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFER]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_OFFER]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_MOP]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_MOP]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMPRICE]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_ITEMPRICE]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMGROUPDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_ITEMGROUPDETAIL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMGROUP]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_ITEMGROUP]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMCODE]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_ITEMCODE]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEM]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_ITEM]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_GSTDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_GSTDETAIL]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_DENOMINATION]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_DENOMINATION]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_BRANCHCOUNTER]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_BRANCHCOUNTER]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_BRANCH]    Script Date: 11-03-2022 15:45:22 ******/
DROP PROCEDURE IF EXISTS [dbo].[USP_CU_BRANCH]
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_BRANCH]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_BRANCH]
(
	@Branches BRANCHTYPE READONLY
)
AS
BEGIN
	UPDATE B
	SET
		B.BRANCHNAME		 = UB. BRANCHNAME
		, B.BRANCHCODE		 = UB.BRANCHCODE
		, B.ADDRESS			 = UB.ADDRESS
		, B.PHONENO			 = UB.PHONENO
		, B.LANDLINE		 = UB.LANDLINE
		, B.EMAILID			 = UB.EMAILID
		, B.SUPERVISORID	 = UB.SUPERVISORID
		, B.ISWAREHOUSE		 = UB.ISWAREHOUSE
		, B.CREATEDDATE		 = UB.CREATEDDATE
		, B.UPDATEDATE		 = UB.UPDATEDATE
		, B.DELETEDDATE		 = UB.DELETEDDATE
		, B.STATEID			 = UB.STATEID
		, B.SYNCDATE		 = GETDATE()
	FROM
		BRANCH B
		INNER JOIN @Branches UB ON UB.BRANCHID = B.BRANCHID

	INSERT INTO BRANCH(BRANCHID, BRANCHNAME, BRANCHCODE, ADDRESS, PHONENO, LANDLINE, EMAILID, SUPERVISORID, ISWAREHOUSE, CREATEDDATE, UPDATEDATE, DELETEDDATE, STATEID, SYNCDATE)
	SELECT BRANCHID, BRANCHNAME, BRANCHCODE, ADDRESS, PHONENO, LANDLINE, EMAILID, SUPERVISORID, ISWAREHOUSE, CREATEDDATE, UPDATEDATE, DELETEDDATE, STATEID, GETDATE() FROM @Branches UB
	WHERE NOT EXISTS ( SELECT 1 FROM BRANCH BINNER WHERE BINNER.BRANCHID = UB.BRANCHID)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_BRANCHCOUNTER]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROC [dbo].[USP_CU_BRANCHCOUNTER]
(
	@BranchCounters BRANCHCOUNTERTYPE READONLY
)
AS
BEGIN
	UPDATE BC
	SET
		BC.COUNTERNAME	 = UBC.COUNTERNAME
		, BC.BRANCHID	 = UBC.BRANCHID
		, BC.CREATEDDATE = UBC.CREATEDDATE
		, BC.UPDATEDDATE = UBC.UPDATEDDATE
		, BC.DELETEDDATE = UBC.DELETEDDATE
		, BC.DAYCLOSUREID = UBC.DAYCLOSUREID
		, BC.BRANCHREFUNDID = UBC.BRANCHREFUNDID
		, BC.SYNCDATE = GETDATE()
	FROM
		BRANCHCOUNTER BC
		INNER JOIN @BranchCounters UBC ON UBC.COUNTERID = BC.COUNTERID

	INSERT INTO BRANCHCOUNTER(COUNTERID, COUNTERNAME, BRANCHID, CREATEDDATE, UPDATEDDATE, DELETEDDATE
		, DAYCLOSUREID, BRANCHREFUNDID, SYNCDATE)
	SELECT COUNTERID, COUNTERNAME, BRANCHID, CREATEDDATE, UPDATEDDATE, DELETEDDATE
		, DAYCLOSUREID, BRANCHREFUNDID, GETDATE()
	FROM @BranchCounters UBC
	WHERE NOT EXISTS ( SELECT 1 FROM BRANCHCOUNTER BCINNER WHERE BCINNER.COUNTERID = UBC.COUNTERID)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_DENOMINATION]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_DENOMINATION]
(  
 @Denomination POS_DENOMINATIONTYPE READONLY  
)  
AS  
BEGIN  
 UPDATE DEN
 SET  
DEN.DISPLAYVALUE = UDEN.DISPLAYVALUE,
DEN.MULTIPLIER = UDEN.MULTIPLIER,
DEN.CREATEDDATE = UDEN.CREATEDDATE,
DEN.UPDATEDDATE = UDEN.UPDATEDDATE
, DEN.SYNCDATE = GETDATE()
 FROM  
  POS_DENOMINATION DEN
  INNER JOIN @Denomination UDEN 
	ON DEN.DENOMINATIONID = UDEN.DENOMINATIONID  
  
  
 INSERT INTO POS_DENOMINATION(DENOMINATIONID,DISPLAYVALUE,MULTIPLIER,CREATEDDATE,UPDATEDDATE, SYNCDATE)  
 SELECT DENOMINATIONID,DISPLAYVALUE,MULTIPLIER,CREATEDDATE,UPDATEDDATE, GETDATE() FROM @Denomination  DEN
 WHERE NOT EXISTS (SELECT 1 FROM POS_DENOMINATION IDEN WHERE DEN.DENOMINATIONID = IDEN.DENOMINATIONID)  
END  
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_GSTDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_GSTDETAIL]
(
	@GSTDetails GSTDETAILTYPE READONLY
)
AS
BEGIN
	UPDATE GST
	SET
		GST.GSTCODE = UGST.GSTCODE
		, GST.CGST = UGST.CGST
		, GST.SGST = UGST.SGST
		, GST.IGST = UGST.IGST
		, GST.CESS = UGST.CESS
		, GST.CREATEDDATE = UGST.CREATEDDATE
		, GST.UPDATEDATE = UGST.UPDATEDATE
		, GST.DELETEDDATE = UGST.DELETEDDATE
		, GST.SYNCDATE = GETDATE()
	FROM
		GSTDETAIL GST
		INNER JOIN @GSTDetails UGST ON UGST.GSTID = GST.GSTID

	INSERT INTO GSTDETAIL(GSTID, GSTCODE, CGST, SGST, IGST, CESS, CREATEDDATE, UPDATEDATE, DELETEDDATE, SYNCDATE)
	SELECT GSTID, GSTCODE, CGST, SGST, IGST, CESS, CREATEDDATE, UPDATEDATE, DELETEDDATE, GETDATE()
	FROM @GSTDetails UGST
	WHERE NOT EXISTS ( SELECT 1 FROM GSTDETAIL GSTINNER WHERE GSTINNER.GSTID = UGST.GSTID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEM]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[USP_CU_ITEM]
(
	@Items ITEMTYPE READONLY
)
AS
BEGIN 
	UPDATE I
	SET I.SKUCODE = updatedItems.SKUCODE
		, I.ITEMNAME = updatedItems.ITEMNAME
		, I.CREATEDDATE = updatedItems.CREATEDDATE
		, I.UPDATEDATE = updatedItems.UPDATEDATE
		, I.DELETEDDATE = updatedItems.DELETEDDATE
		, I.ISOPENITEM = updatedItems.ISOPENITEM
		, I.PARENTITEMID = updatedItems.PARENTITEMID
		, I.UOMID = updatedItems.UOMID
		, I.CATEGORYID = updatedItems.CATEGORYID
		, I.SYNCDATE = GETDATE()
	FROM
		ITEM I 
		INNER JOIN @Items updatedItems ON updatedItems.ITEMID = I.ITEMID

	INSERT INTO ITEM(ITEMID, SKUCODE, ITEMNAME, CREATEDDATE, UPDATEDATE, DELETEDDATE, ISOPENITEM, PARENTITEMID, UOMID, CATEGORYID, SYNCDATE)
	SELECT ITEMID, SKUCODE, ITEMNAME, CREATEDDATE, UPDATEDATE, DELETEDDATE, ISOPENITEM, PARENTITEMID, UOMID, CATEGORYID, GETDATE()
	FROM @Items updatedItems
	WHERE NOT EXISTS (SELECT 1 FROM ITEM WHERE ITEMID = updatedItems.ITEMID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMCODE]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_ITEMCODE]
(
	@ItemCodes ITEMCODETYPE READONLY
)
AS
BEGIN
	UPDATE IC
	SET 
		IC.ITEMID = UPDATEDIC.ITEMID
		, IC.ITEMCODE = UPDATEDIC.ITEMCODE
		, IC.CREATEDDATE = UPDATEDIC.CREATEDDATE
		, IC.UPDATEDATE = UPDATEDIC.UPDATEDATE
		, IC.DELETEDDATE = UPDATEDIC.DELETEDDATE
		, IC.FREEITEMCODEID = UPDATEDIC.FREEITEMCODEID
		, IC.HSNCODE = UPDATEDIC.HSNCODE
		, IC.SYNCDATE = GETDATE()
	FROM 
		ITEMCODE IC 
		INNER JOIN @ItemCodes UPDATEDIC ON UPDATEDIC.ITEMCODEID = IC.ITEMCODEID

	INSERT INTO ITEMCODE(ITEMCODEID, ITEMID, ITEMCODE, CREATEDDATE, UPDATEDATE, DELETEDDATE, FREEITEMCODEID, HSNCODE, SYNCDATE)
	SELECT ITEMCODEID, ITEMID, ITEMCODE, CREATEDDATE, UPDATEDATE, DELETEDDATE, FREEITEMCODEID, HSNCODE, GETDATE() 
	FROM @ItemCodes UPDATEDIC
	WHERE NOT EXISTS
		(
			SELECT 1 FROM ITEMCODE ICINNER WHERE ICINNER.ITEMCODEID = UPDATEDIC.ITEMCODEID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMGROUP]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_ITEMGROUP]
(
	@ItemGroups ITEMGROUPTYPE READONLY
)
AS
BEGIN
	UPDATE IG
	SET
		IG.GROUPNAME		  = UIG.GROUPNAME
		, IG.ISACTIVE		  = UIG.ISACTIVE
		, IG.CREATEDDATE	  = UIG.CREATEDDATE
		, IG.UPDATEDDATE	  = UIG.UPDATEDDATE
		, IG.DELETEDDATE	  = UIG.DELETEDDATE
		, IG.SYNCDATE		  = GETDATE()
	FROM					  
		ITEMGROUP IG
		INNER JOIN @ItemGroups UIG ON UIG.ITEMGROUPID = IG.ITEMGROUPID

	INSERT INTO ITEMGROUP(ITEMGROUPID, GROUPNAME, ISACTIVE, CREATEDDATE, UPDATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT ITEMGROUPID, GROUPNAME, ISACTIVE, CREATEDDATE, UPDATEDDATE, DELETEDDATE, GETDATE()
	FROM @ItemGroups UIG
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM ITEMGROUP UIGINNER 
			WHERE UIGINNER.ITEMGROUPID = UIG.ITEMGROUPID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMGROUPDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_ITEMGROUPDETAIL]
(
	@ItemGroupDetails ITEMGROUPDETAILTYPE READONLY
)
AS
BEGIN

	UPDATE IGD
	SET
		IGD.ITEMGROUPID		   = UIGD.ITEMGROUPID
		, IGD.ITEMCODEID	   = UIGD.ITEMCODEID
		, IGD.CREATEDDATE	   = UIGD.CREATEDDATE
		, IGD.DELETEDDATE	   = UIGD.DELETEDDATE
		, IGD.SYNCDATE		   = GETDATE()
	FROM					  
		ITEMGROUPDETAIL IGD
		INNER JOIN @ItemGroupDetails UIGD ON UIGD.ITEMGROUPDETAILID = IGD.ITEMGROUPDETAILID

	INSERT INTO ITEMGROUPDETAIL(ITEMGROUPDETAILID, ITEMGROUPID, ITEMCODEID, CREATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT ITEMGROUPDETAILID, ITEMGROUPID, ITEMCODEID, CREATEDDATE, DELETEDDATE, GETDATE()
	FROM @ItemGroupDetails UIG
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM ITEMGROUPDETAIL UIGDINNER 
			WHERE UIGDINNER.ITEMGROUPDETAILID = UIG.ITEMGROUPDETAILID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ITEMPRICE]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_ITEMPRICE]
(
	@ItemPrices ITEMPRICETYPE READONLY
)
AS
BEGIN
	UPDATE IP
	SET
		IP.ITEMCODEID = UIP.ITEMCODEID
		, IP.SALEPRICE = UIP.SALEPRICE
		, IP.MRP = UIP.MRP
		, IP.GSTID = UIP.GSTID
		, IP.CREATEDDATE = UIP.CREATEDDATE
		, IP.UPDATEDATE = UIP.UPDATEDATE
		, IP.DELETEDDATE = UIP.DELETEDDATE
		, IP.SYNCDATE = GETDATE()
	FROM
		ITEMPRICE IP
		INNER JOIN @ItemPrices UIP ON UIP.ITEMPRICEID = IP.ITEMPRICEID

	INSERT INTO ITEMPRICE(ITEMPRICEID, ITEMCODEID, SALEPRICE, MRP, GSTID, CREATEDDATE, UPDATEDATE, DELETEDDATE, SYNCDATE)
	SELECT ITEMPRICEID, ITEMCODEID, SALEPRICE, MRP, GSTID, CREATEDDATE, UPDATEDATE, DELETEDDATE, GETDATE() FROM @ItemPrices UIP
	WHERE NOT EXISTS
		(
			SELECT 1 FROM ITEMPRICE IPINNER WHERE IPINNER.ITEMPRICEID = UIP.ITEMPRICEID
		)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_MOP]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[USP_CU_MOP]
(
	@MOP TBLMOPTYPE READONLY
)
AS
BEGIN
	UPDATE MOP
	SET
		MOP.MOPNAME = UMOP.MOPNAME
		, MOP.CREATEDDATE = UMOP.CREATEDDATE
		, MOP.UPDATEDDATE = UMOP.UPDATEDDATE
		, MOP.DELETEDDATE = UMOP.DELETEDDATE
		, MOP.SYNCDATE = GETDATE()
	FROM
		TBLMOP MOP
		INNER JOIN @MOP UMOP ON UMOP.MOPID = MOP.MOPID

	INSERT INTO TBLMOP(MOPID, MOPNAME, CREATEDDATE, UPDATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT MOPID, MOPNAME, CREATEDDATE, UPDATEDDATE, DELETEDDATE, GETDATE()
	FROM @MOP UMOP
	WHERE NOT EXISTS (SELECT 1 FROM TBLMOP IMOP WHERE IMOP.MOPID = UMOP.MOPID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFER]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[USP_CU_OFFER]
(
	@Offers OFFERTYPE READONLY
)
AS
BEGIN

	UPDATE OFR
	SET
		OFR.OFFERNAME		   = UOFR.OFFERNAME
		, OFR.OFFERCODE		   = UOFR.OFFERCODE
		, OFR.STARTDATE		   = UOFR.STARTDATE
		, OFR.ENDDATE		   = UOFR.ENDDATE
		, OFR.OFFERVALUE	   = UOFR.OFFERVALUE
		, OFR.OFFERTYPEID	   = UOFR.OFFERTYPEID
		, OFR.CATEGORYID	   = UOFR.CATEGORYID
		, OFR.ITEMGROUPID	   = UOFR.ITEMGROUPID
		, OFR.CREATEDDATE	   = UOFR.CREATEDDATE
		, OFR.UPDATEDDATE	   = UOFR.UPDATEDDATE
		, OFR.DELETEDDATE	   = UOFR.DELETEDDATE
		, OFR.ISACTIVE		   = UOFR.ISACTIVE
		, OFR.APPLIESTOID	   = UOFR.APPLIESTOID
		, OFR.SYNCDATE = GETDATE()
	FROM					  
		OFFER OFR
		INNER JOIN @Offers UOFR ON UOFR.OFFERID = OFR.OFFERID

	INSERT INTO OFFER(OFFERID, OFFERNAME, OFFERCODE, STARTDATE, ENDDATE, OFFERVALUE, OFFERTYPEID, CATEGORYID
		, ITEMGROUPID, CREATEDDATE, UPDATEDDATE, DELETEDDATE, ISACTIVE, APPLIESTOID, SYNCDATE)
	SELECT OFFERID, OFFERNAME, OFFERCODE, STARTDATE, ENDDATE, OFFERVALUE, OFFERTYPEID, CATEGORYID
		, ITEMGROUPID, CREATEDDATE, UPDATEDDATE, DELETEDDATE, ISACTIVE, APPLIESTOID, GETDATE()
	FROM @Offers UOFR
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM OFFER UOFRINNER 
			WHERE UOFRINNER.OFFERID = UOFR.OFFERID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFERBRANCH]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_OFFERBRANCH]
(
	@OfferBranches OFFERBRANCHTYPE READONLY
)
AS
BEGIN

	UPDATE OFRB
	SET
		OFRB.OFFERID		 = UOFRB.OFFERID
		, OFRB.BRANCHID		 = UOFRB.BRANCHID
		, OFRB.CREATEDDATE	 = UOFRB.CREATEDDATE
		, OFRB.DELETEDDATE	 = UOFRB.DELETEDDATE
		, OFRB.SYNCDATE = GETDATE()
	FROM					  
		OFFERBRANCH OFRB
		INNER JOIN @OfferBranches UOFRB ON UOFRB.OFFERBRANCHID = OFRB.OFFERBRANCHID

	INSERT INTO OFFERBRANCH(OFFERBRANCHID, OFFERID, BRANCHID, CREATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT OFFERBRANCHID, OFFERID, BRANCHID, CREATEDDATE, DELETEDDATE, GETDATE()
	FROM @OfferBranches UOFRB
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM OFFERBRANCH UOFRBINNER 
			WHERE UOFRBINNER.OFFERBRANCHID = UOFRB.OFFERBRANCHID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFERITEMMAP]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_OFFERITEMMAP]
(
	@OfferItemMaps OFFERITEMMAPTYPE READONLY
)
AS
BEGIN

	UPDATE OFRIM
	SET
		OFRIM.OFFERID		 = UOFRIM.OFFERID
		, OFRIM.ITEMCODEID	 = UOFRIM.ITEMCODEID
		, OFRIM.CREATEDDATE	 = UOFRIM.CREATEDDATE
		, OFRIM.DELETEDDATE	 = UOFRIM.DELETEDDATE
		, OFRIM.SYNCDATE	 = GETDATE()
	FROM					  
		OFFERITEMMAP OFRIM
		INNER JOIN @OfferItemMaps UOFRIM ON UOFRIM.OFFERITEMMAPID = OFRIM.OFFERITEMMAPID

	INSERT INTO OFFERITEMMAP(OFFERITEMMAPID, OFFERID, ITEMCODEID, CREATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT OFFERITEMMAPID, OFFERID, ITEMCODEID, CREATEDDATE, DELETEDDATE, GETDATE()
	FROM @OfferItemMaps UOFRIM
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM OFFERITEMMAP UOFRIMINNER 
			WHERE UOFRIMINNER.OFFERITEMMAPID = UOFRIM.OFFERITEMMAPID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_OFFERTYPE]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_OFFERTYPE]
(
	@OfferTypes OFFERTYPETYPE READONLY
)
AS
BEGIN

	UPDATE OFRT
	SET
		OFRT.OFFERTYPENAME		 = UOFRT.OFFERTYPENAME
		, OFRT.OFFERTYPECODE	 = UOFRT.OFFERTYPECODE
		, OFRT.BUYQUANTITY		 = UOFRT.BUYQUANTITY
		, OFRT.FREEQUANTITY		 = UOFRT.FREEQUANTITY
		, OFRT.SYNCDATE			 = GETDATE()
	FROM					  
		OFFERTYPE OFRT
		INNER JOIN @OfferTypes UOFRT ON UOFRT.OFFERTYPEID = OFRT.OFFERTYPEID

	INSERT INTO OFFERTYPE(OFFERTYPEID, OFFERTYPENAME, OFFERTYPECODE, BUYQUANTITY, FREEQUANTITY, SYNCDATE)
	SELECT OFFERTYPEID, OFFERTYPENAME, OFFERTYPECODE, BUYQUANTITY, FREEQUANTITY, GETDATE()
	FROM @OfferTypes UOFRT
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM OFFERTYPE UOFRTINNER 
			WHERE UOFRTINNER.OFFERTYPEID = UOFRT.OFFERTYPEID
		)

END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BILL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_POS_BILL]    
(    
 @Bills POS_BILLTYPE READONLY    
 , @BranchCounterID INT    
)    
AS    
BEGIN    
 UPDATE B    
 SET    
  B.BILLNUMBER = UB.BILLNUMBER    
  , B.CREATEDBY = UB.CREATEDBY    
  , B.CREATEDDATE = UB.CREATEDDATE    
  , B.UPDATEDBY = UB.UPDATEDBY    
  , B.UPDATEDDATE = UB.UPDATEDDATE    
  , B.DELETEDBY = UB.DELETEDBY    
  , B.DELETEDDATE = UB.DELETEDDATE    
  , B.BILLSTATUS = UB.BILLSTATUS    
  , B.CUSTOMERNUMBER = UB.CUSTOMERNUMBER    
  , B.CUSTOMERNAME = UB.CUSTOMERNAME
  , B.DAYCLOSUREID = UB.DAYCLOSUREID
  , B.ROUNDING = UB.ROUNDING
  , B.SYNCDATE = GETDATE()
 FROM     
  POS_BILL B    
  INNER JOIN @Bills UB ON UB.BILLID = B.BILLID    
 WHERE    
  B.BRANCHCOUNTERID = @BranchCounterID    
    
 INSERT INTO POS_BILL(BILLID, BRANCHCOUNTERID, BILLNUMBER, CREATEDBY, CREATEDDATE, 
 UPDATEDBY, UPDATEDDATE, DELETEDBY, DELETEDDATE, BILLSTATUS, CUSTOMERNUMBER, CUSTOMERNAME,DAYCLOSUREID, ROUNDING, SYNCDATE)    
 SELECT BILLID, @BranchCounterID, BILLNUMBER, CREATEDBY, CREATEDDATE, 
 UPDATEDBY, UPDATEDDATE, DELETEDBY, DELETEDDATE, BILLSTATUS, CUSTOMERNUMBER, CUSTOMERNAME ,DAYCLOSUREID, ROUNDING, GETDATE()
 FROM @Bills UB    
 WHERE NOT EXISTS    
  (    
   SELECT 1 FROM POS_BILL BINNER WHERE BINNER.BILLID = UB.BILLID AND BINNER.BRANCHCOUNTERID = @BranchCounterID    
  )    
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BILLDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[USP_CU_POS_BILLDETAIL]        
(        
 @BillDetails POS_BILLDETAILTYPE READONLY        
 , @BranchCounterID INT        
)        
AS        
BEGIN        
 UPDATE BD        
 SET        
  BD.ITEMPRICEID   = UBD.ITEMPRICEID        
  , BD.QUANTITY   = UBD.QUANTITY        
  , BD.WEIGHTINKGS  = UBD.WEIGHTINKGS        
  , BD.BILLEDAMOUNT  = UBD.BILLEDAMOUNT        
  , BD.CREATEDDATE  = UBD.CREATEDDATE        
  , BD.UPDATEDDATE  = UBD.UPDATEDDATE        
  , BD.DELETEDDATE  = UBD.DELETEDDATE        
  , BD.CGST    = UBD.CGST        
  , BD.SGST    = UBD.SGST        
  , BD.IGST    = UBD.IGST        
  , BD.CESS    = UBD.CESS        
  , BD.GSTVALUE   = UBD.GSTVALUE        
  , BD.GSTID    = UBD.GSTID        
  , BD.SNO    = UBD.SNO        
  , BD.DISCOUNT   = UBD.DISCOUNT  
  , BD.OFFERID = UBD.OFFERID  
  , BD.DAYCLOSUREID = UBD.DAYCLOSUREID
  , BD.SYNCDATE = GETDATE()
 FROM         
  POS_BILLDETAIL BD        
  INNER JOIN @BillDetails UBD ON UBD.BILLDETAILID = BD.BILLDETAILID        
 WHERE        
  BD.BRANCHCOUNTERID = @BranchCounterID        
        
 INSERT INTO POS_BILLDETAIL(BILLDETAILID, BILLID, BRANCHCOUNTERID, ITEMPRICEID,       
 QUANTITY, WEIGHTINKGS, BILLEDAMOUNT, CREATEDDATE, UPDATEDDATE, DELETEDDATE        
  , CGST, SGST, IGST, CESS, GSTVALUE, GSTID, SNO, DISCOUNT,OFFERID,DAYCLOSUREID, SYNCDATE)        
 SELECT BILLDETAILID, BILLID, @BranchCounterID, ITEMPRICEID,       
 QUANTITY, WEIGHTINKGS, BILLEDAMOUNT, CREATEDDATE, UPDATEDDATE, DELETEDDATE        
  , CGST, SGST, IGST, CESS, GSTVALUE, GSTID, SNO, DISCOUNT ,OFFERID,DAYCLOSUREID, GETDATE()       
 FROM @BillDetails UBD        
 WHERE NOT EXISTS        
  (        
   SELECT 1 FROM POS_BILLDETAIL BDINNER WHERE BDINNER.BILLDETAILID = UBD.BILLDETAILID       
   AND BDINNER.BRANCHCOUNTERID = @BranchCounterID        
  )        
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BILLMOPDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_BILLMOPDETAIL]          
(          
 @BillMopDetails POS_BILLMOPDETAILTYPE READONLY          
 , @BranchCounterID INT          
)          
AS          
BEGIN          
 UPDATE BMD          
 SET          
BMD.BILLID = UBMD.BILLID,        
BMD.MOPID = UBMD.MOPID,        
BMD.MOPVALUE = UBMD.MOPVALUE,        
BMD.CREATEDDATE = UBMD.CREATEDDATE,        
BMD.UPDATEDDATE = UBMD.UPDATEDDATE,
BMD.DAYCLOSUREID = UBMD.DAYCLOSUREID
, BMD.SYNCDATE = GETDATE()
 FROM           
  POS_BILLMOPDETAIL BMD        
  INNER JOIN @BillMopDetails UBMD ON UBMD.BILLMOPDETAILID = BMD.BILLMOPDETAILID          
 WHERE          
  BMD.COUNTERID = @BranchCounterID          
          
 INSERT INTO POS_BILLMOPDETAIL(BILLMOPDETAILID,BILLID,MOPID,MOPVALUE,    
CREATEDDATE,UPDATEDDATE,COUNTERID,DAYCLOSUREID, SYNCDATE)          
 SELECT BILLMOPDETAILID,BILLID,MOPID,MOPVALUE,    
CREATEDDATE,UPDATEDDATE,@BranchCounterID,DAYCLOSUREID, GETDATE()
 FROM @BillMopDetails UBMD          
 WHERE NOT EXISTS          
  (          
   SELECT 1 FROM POS_BILLMOPDETAIL BDINNER WHERE BDINNER.BILLMOPDETAILID = UBMD.BILLMOPDETAILID   
   AND BDINNER.COUNTERID = @BranchCounterID          
  )          
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BREFUND]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_BREFUND]      
(      
 @BRefundDetails POS_BREFUNDTYPE READONLY      
 , @BranchCounterID INT      
)      
AS      
BEGIN      
 UPDATE BR    
 SET      
BR.BRANCHID = UBR.BRANCHID,    
BR.CREATEDBY = UBR.CREATEDBY,    
BR.CREATEDATE = UBR.CREATEDATE,    
BR.UPDATEDBY = UBR.UPDATEDBY,    
BR.UPDATEDDATE = UBR.UPDATEDDATE,    
BR.DELETEDBY = UBR.DELETEDBY,    
BR.DELETEDDATE = UBR.DELETEDDATE,    
BR.STATUS = UBR.STATUS,    
BR.BREFUNDNUMBER = UBR.BREFUNDNUMBER
, BR.SYNCDATE = GETDATE()
 FROM       
  POS_BREFUND BR    
  INNER JOIN @BRefundDetails UBR ON UBR.BREFUNDID = BR.BREFUNDID      
 WHERE      
  BR.COUNTERID = @BranchCounterID      
      
 INSERT INTO POS_BREFUND(BREFUNDID,BRANCHID,CREATEDBY,CREATEDATE,UPDATEDBY,    
UPDATEDDATE,DELETEDBY,DELETEDDATE,STATUS,BREFUNDNUMBER,COUNTERID, SYNCDATE)      
 SELECT BREFUNDID,BRANCHID,CREATEDBY,CREATEDATE,UPDATEDBY,    
UPDATEDDATE,DELETEDBY,DELETEDDATE,STATUS,BREFUNDNUMBER,@BranchCounterID, GETDATE()    
 FROM @BRefundDetails UBR      
 WHERE NOT EXISTS      
  (      
   SELECT 1 FROM POS_BREFUND BRINNER WHERE BRINNER.BREFUNDID = UBR.BREFUNDID    
   AND BRINNER.COUNTERID = @BranchCounterID      
  )      
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_BREFUNDDETAL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_BREFUNDDETAL]    
(    
 @BRefundDetails POS_BREFUNDDETAILTYPE READONLY    
 , @BranchCounterID INT    
)    
AS    
BEGIN    
 UPDATE BRD  
 SET    
BRD.BREFUNDID  = UBRD.BREFUNDID,  
BRD.ITEMPRICEID = UBRD.ITEMPRICEID,  
BRD.QUANTITY = UBRD.QUANTITY,  
BRD.WEIGHTINKGS = UBRD.WEIGHTINKGS,  
BRD.CREATEDDATE = UBRD.CREATEDDATE,  
BRD.UPDATEDDATE = UBRD.UPDATEDDATE,  
BRD.SNO = UBRD.SNO,  
BRD.TRAYNUMBER = UBRD.TRAYNUMBER,  
BRD.COUNTERID = @BranchCounterID  
, BRD.SYNCDATE = GETDATE()
 FROM     
  POS_BREFUNDDETAIL BRD  
  INNER JOIN @BRefundDetails UBRD ON UBRD.BREFUNDDETAILID = BRD.BREFUNDDETAILID    
 WHERE    
  BRD.COUNTERID = @BranchCounterID    
    
 INSERT INTO POS_BREFUNDDETAIL(BREFUNDDETAILID,BREFUNDID,ITEMPRICEID,QUANTITY,  
WEIGHTINKGS,CREATEDDATE,UPDATEDDATE,SNO,TRAYNUMBER,COUNTERID, SYNCDATE)    
 SELECT BREFUNDDETAILID,BREFUNDID,ITEMPRICEID,QUANTITY,  
WEIGHTINKGS,CREATEDDATE,UPDATEDDATE,SNO,TRAYNUMBER,@BranchCounterID, GETDATE()  
 FROM @BRefundDetails UBRD  
 WHERE NOT EXISTS    
  (    
   SELECT 1 FROM POS_BREFUNDDETAIL BRDINNER WHERE BRDINNER.BREFUNDDETAILID = UBRD.BREFUNDDETAILID  
   AND BRDINNER.COUNTERID = @BranchCounterID    
  )    
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_CREFUND]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_CREFUND]    
(    
 @CRefundDetails POS_CREFUNDTYPE READONLY    
 , @BranchCounterID INT    
)    
AS    
BEGIN    
 UPDATE CR  
 SET    
CR.BILLDETAILID  = UCR.BILLDETAILID,  
CR.REFUNDQUANTITY  = UCR.REFUNDQUANTITY,  
CR.REFUNDWEIGHTINKGS = UCR.REFUNDWEIGHTINKGS,  
CR.REFUNDAMOUNT = UCR.REFUNDAMOUNT,  
CR.CREATEDBY = UCR.CREATEDBY,  
CR.CREATEDDATE = UCR.CREATEDDATE,  
CR.UPDATEDBY = UCR.UPDATEDBY,  
CR.UPDATEDDATE = UCR.UPDATEDDATE,  
CR.DELETEDBY = UCR.DELETEDBY,  
CR.DELETEDDATE = UCR.DELETEDDATE,  
CR.DAYCLOSUREID = UCR.DAYCLOSUREID,  
CR.COUNTERID = @BranchCounterID  
, CR.SYNCDATE = GETDATE()
 FROM     
  POS_CREFUND CR  
  INNER JOIN @CRefundDetails UCR ON UCR.REFUNDID = CR.REFUNDID  
 WHERE    
 CR.COUNTERID = @BranchCounterID    
    
 INSERT INTO POS_CREFUND(REFUNDID,BILLDETAILID,REFUNDQUANTITY,REFUNDWEIGHTINKGS,  
REFUNDAMOUNT,CREATEDBY,CREATEDDATE,UPDATEDBY,UPDATEDDATE,DELETEDBY,  
DELETEDDATE,DAYCLOSUREID,COUNTERID, SYNCDATE)    
 SELECT REFUNDID,BILLDETAILID,REFUNDQUANTITY,REFUNDWEIGHTINKGS,  
REFUNDAMOUNT,CREATEDBY,CREATEDDATE,UPDATEDBY,UPDATEDDATE,DELETEDBY,  
DELETEDDATE,DAYCLOSUREID,@BranchCounterID, GETDATE()
 FROM @CRefundDetails UCR  
 WHERE NOT EXISTS    
  (    
   SELECT 1 FROM POS_CREFUND CRINNER WHERE CRINNER.REFUNDID = UCR.REFUNDID  
   AND CRINNER.COUNTERID = @BranchCounterID    
  )    
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_DAYCLOSURE]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_DAYCLOSURE]        
(        
 @DayClosure POS_DAYCLOSURETYPE READONLY        
 , @BranchCounterID INT        
)        
AS        
BEGIN        
 UPDATE DC      
 SET        
DC.CLOSUREDATE = UDC.CLOSUREDATE,    
DC.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID,    
DC.OPENINGBALANCE = UDC.OPENINGBALANCE,    
DC.CLOSINGBALANCE = UDC.CLOSINGBALANCE,    
DC.CLOSINGDIFFERENCE = UDC.CLOSINGDIFFERENCE,    
DC.CLOSEDBY = UDC.CLOSEDBY,    
DC.REFUNDAMOUNT = UDC.REFUNDAMOUNT,    
DC.CREATEDDATE = UDC.CREATEDDATE,    
DC.UPDATEDDATE = UDC.UPDATEDDATE    
, DC.SYNCDATE = GETDATE()
 FROM         
  POS_DAYCLOSURE DC      
  INNER JOIN @DayClosure UDC ON UDC.DAYCLOSUREID = DC.DAYCLOSUREID     
  AND UDC.BRANCHCOUNTERID = DC.BRANCHCOUNTERID      
        
 INSERT INTO POS_DAYCLOSURE(DAYCLOSUREID,CLOSUREDATE,BRANCHCOUNTERID,OPENINGBALANCE,    
CLOSINGBALANCE,CLOSINGDIFFERENCE,CLOSEDBY,REFUNDAMOUNT,CREATEDDATE,UPDATEDDATE, SYNCDATE)        
 SELECT DAYCLOSUREID,CLOSUREDATE,BRANCHCOUNTERID,OPENINGBALANCE,    
CLOSINGBALANCE,CLOSINGDIFFERENCE,CLOSEDBY,REFUNDAMOUNT,CREATEDDATE,UPDATEDDATE, GETDATE()
 FROM @DayClosure UDC      
 WHERE NOT EXISTS        
  (        
   SELECT 1 FROM POS_DAYCLOSURE DCINNER WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID      
   AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID      
  )        
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_DAYCLOSUREDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_DAYCLOSUREDETAIL]          
(          
 @DayClosureDetail POS_DAYCLOSUREDETAILTYPE READONLY          
 , @BranchCounterID INT          
)          
AS          
BEGIN          
 UPDATE DCD      
 SET          
DCD.DAYCLOSUREID = UDCD.DAYCLOSUREID,      
DCD.DENOMINATIONID = UDCD.DENOMINATIONID,      
DCD.CLOSUREVALUE = UDCD.CLOSUREVALUE,      
DCD.MOPID = UDCD.MOPID,      
DCD.CREATEDDATE = UDCD.CREATEDDATE,      
DCD.UPDATEDDATE = UDCD.UPDATEDDATE
, DCD.SYNCDATE = GETDATE()
 FROM           
  POS_DAYCLOSUREDETAIL DCD      
  INNER JOIN @DayClosureDetail UDCD ON UDCD.DAYCLOSUREDETAILID = DCD.DAYCLOSUREDETAILID       
  AND DCD.COUNTERID = @BranchCounterID       
          
 INSERT INTO POS_DAYCLOSUREDETAIL(DAYCLOSUREDETAILID,DAYCLOSUREID,DENOMINATIONID,CLOSUREVALUE,      
  MOPID,CREATEDDATE,UPDATEDDATE,COUNTERID, SYNCDATE)          
 SELECT DAYCLOSUREDETAILID,DAYCLOSUREID,DENOMINATIONID,CLOSUREVALUE,      
  MOPID,CREATEDDATE,UPDATEDDATE,@BranchCounterID, GETDATE()   
 FROM @DayClosureDetail UDCD        
 WHERE NOT EXISTS          
  (          
   SELECT 1 FROM POS_DAYCLOSUREDETAIL DCDINNER WHERE DCDINNER.DAYCLOSUREDETAILID = UDCD.DAYCLOSUREDETAILID        
   AND DCDINNER.COUNTERID = @BranchCounterID      
  )          
END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_POS_DAYSEQUENCE]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_POS_DAYSEQUENCE]        
(        
 @DaySequence POS_DAYSEQUENCETYPE READONLY        
)        
AS        
BEGIN        
 UPDATE DS      
 SET   
	 DS.OPENDATE			=  UDS.OPENDATE
	, DS.LASTUSEDBILLNUM	=  UDS.LASTUSEDBILLNUM
	, DS.ISCLOSED			=  UDS.ISCLOSED		
	, DS.BRANCHCOUNTERID	=  UDS.BRANCHCOUNTERID
	, DS.LASTBILLID			=  UDS.LASTBILLID		
	, DS.DAYSEQUENCEID		=  UDS.DAYSEQUENCEID	
	, DS.OPENBILLID			=  UDS.OPENBILLID		
	, DS.CREATEDATE			=  UDS.CREATEDATE		
	, DS.UPDATEDATE			=  UDS.UPDATEDATE	
	, DS.SYNCDATE			= GETDATE()
 FROM         
  POS_DAYSEQUENCE DS      
  INNER JOIN @DaySequence UDS ON UDS.DAYSEQUENCEID = DS.DAYSEQUENCEID     
  AND UDS.BRANCHCOUNTERID = DS.BRANCHCOUNTERID      
        

	INSERT INTO POS_DAYSEQUENCE(OPENDATE, LASTUSEDBILLNUM, ISCLOSED, BRANCHCOUNTERID, LASTBILLID, DAYSEQUENCEID
		, OPENBILLID, CREATEDATE, UPDATEDATE, SYNCDATE)
	SELECT OPENDATE, LASTUSEDBILLNUM, ISCLOSED, BRANCHCOUNTERID, LASTBILLID, DAYSEQUENCEID
		, OPENBILLID, CREATEDATE, UPDATEDATE, GETDATE()
	FROM @DaySequence UDS
	WHERE NOT EXISTS 
		(
			SELECT 1 FROM POS_DAYSEQUENCE DSINNER WHERE DSINNER.DAYSEQUENCEID = UDS.DAYSEQUENCEID      
				AND DSINNER.BRANCHCOUNTERID = UDS.BRANCHCOUNTERID     
		)

END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_ROLE]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_ROLE]
(
	@Role TBLROLETYPE READONLY
)
AS
BEGIN
	UPDATE R
	SET R.ROLENAME = UR.ROLENAME		
	FROM
		TBLROLE R
		INNER JOIN @Role UR ON UR.ROLEID = R.ROLEID

	INSERT INTO TBLROLE
	SELECT * FROM @Role UR
	WHERE NOT EXISTS (SELECT 1 FROM TBLROLE IR WHERE IR.ROLEID = UR.ROLEID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_STOCKDISPATCH]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_STOCKDISPATCH]
(
	@StockDispatch STOCKDISPATCHTYPE READONLY
)
AS
BEGIN
	UPDATE SD
	SET								 
		SD.FROMBRANCHID				= USD.FROMBRANCHID
		, SD.TOBRANCHID				= USD.TOBRANCHID
		, SD.STATUS					= USD.STATUS
		, SD.STATUSAPPROVEDBY		= USD.STATUSAPPROVEDBY
		, SD.STATUSAPPROVEDDATE		= USD.STATUSAPPROVEDDATE
		, SD.CREATEDDATE			= USD.CREATEDDATE
		, SD.UPDATEDATE				= USD.UPDATEDATE
		, SD.DELETEDDATE			= USD.DELETEDDATE
		, SD.DISPATCHNUMBER			= USD.DISPATCHNUMBER
		, SD.CREATEDBY              = USD.CREATEDBY
		, SD.UPDATEDBY              = USD.UPDATEDBY
		, SD.DELETEDBY              = USD.DELETEDBY
		, SD.SYNCDATE				= GETDATE()
	FROM
		STOCKDISPATCH SD
		INNER JOIN @StockDispatch USD ON USD.STOCKDISPATCHID = SD.STOCKDISPATCHID

	INSERT INTO STOCKDISPATCH(STOCKDISPATCHID, FROMBRANCHID, TOBRANCHID, STATUS, STATUSAPPROVEDBY, STATUSAPPROVEDDATE, CREATEDDATE, UPDATEDATE, DELETEDDATE, DISPATCHNUMBER
		, CREATEDBY, UPDATEDBY, DELETEDBY, SYNCDATE)
	SELECT STOCKDISPATCHID, FROMBRANCHID, TOBRANCHID, STATUS, STATUSAPPROVEDBY, STATUSAPPROVEDDATE, CREATEDDATE, UPDATEDATE, DELETEDDATE, DISPATCHNUMBER
		, CREATEDBY, UPDATEDBY, DELETEDBY, GETDATE()
	FROM @StockDispatch USD
	WHERE NOT EXISTS (SELECT 1 FROM STOCKDISPATCH SDI WHERE SDI.STOCKDISPATCHID = USD.STOCKDISPATCHID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_STOCKDISPATCHDETAIL]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_STOCKDISPATCHDETAIL]    
(    
 @StockDispatchDetail STOCKDISPATCHDETAILTYPE READONLY    
)    
AS    
BEGIN    
 UPDATE SDD    
 SET    
  SDD.STOCKDISPATCHID = USDD.STOCKDISPATCHID    
  , SDD.ITEMPRICEID = USDD.ITEMPRICEID    
  , SDD.TRAYNUMBER = USDD.TRAYNUMBER    
  , SDD.DISPATCHQUANTITY = USDD.DISPATCHQUANTITY    
  , SDD.RECEIVEDQUANTITY = USDD.RECEIVEDQUANTITY    
  , SDD.CREATEDDATE = USDD.CREATEDDATE    
  , SDD.UPDATEDATE = USDD.UPDATEDATE    
  , SDD.DELETEDDATE = USDD.DELETEDDATE    
  , SDD.WEIGHTINKGS = USDD.WEIGHTINKGS    
  , SDD.ISACCEPTED = USDD.ISACCEPTED
  , SDD.SYNCDATE = GETDATE()
 FROM    
  STOCKDISPATCHDETAIL SDD    
  INNER JOIN @StockDispatchDetail USDD ON USDD.STOCKDISPATCHDETAILID = SDD.STOCKDISPATCHDETAILID    
    
 INSERT INTO STOCKDISPATCHDETAIL(STOCKDISPATCHDETAILID, STOCKDISPATCHID, ITEMPRICEID, TRAYNUMBER, DISPATCHQUANTITY,   
 RECEIVEDQUANTITY, WEIGHTINKGS, CREATEDDATE , UPDATEDATE, DELETEDDATE,ISACCEPTED, SYNCDATE)    
 SELECT STOCKDISPATCHDETAILID, STOCKDISPATCHID, ITEMPRICEID, TRAYNUMBER,   
 DISPATCHQUANTITY, RECEIVEDQUANTITY, WEIGHTINKGS, CREATEDDATE    
   , UPDATEDATE, DELETEDDATE  ,ISACCEPTED, GETDATE()
 FROM @StockDispatchDetail USDD    
 WHERE NOT EXISTS (SELECT 1 FROM STOCKDISPATCHDETAIL SDDI WHERE SDDI.STOCKDISPATCHDETAILID = USDD.STOCKDISPATCHDETAILID)    

END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_TBLCATEGORY]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_CU_TBLCATEGORY]  
(    
 @Category TBLCATEGORYTYPE READONLY    
)    
AS    
BEGIN    
 UPDATE CAT  
 SET    
CAT.CATEGORYNAME   = UCAT.CATEGORYNAME   ,
CAT.CREATEDBY  = UCAT.CATEGORYNAME   ,
CAT.CREATEDDATE = UCAT.CATEGORYNAME   ,
CAT.UPDATEDBY = UCAT.CATEGORYNAME   ,
CAT.UPDATEDDATE = UCAT.CATEGORYNAME  , 
CAT.DELETEDBY = UCAT.CATEGORYNAME   ,
CAT.DELETEDDATE = UCAT.CATEGORYNAME  , 
CAT.ALLOWOPENITEMS = UCAT.CATEGORYNAME   
, CAT.SYNCDATE = GETDATE()
 FROM    
  TBLCATEGORY CAT  
  INNER JOIN @Category UCAT   
 ON CAT.CATEGORYID = UCAT.CATEGORYID    
    
    
 INSERT INTO TBLCATEGORY(
 CATEGORYID,CATEGORYNAME,CREATEDBY
,CREATEDDATE,UPDATEDBY,UPDATEDDATE
,DELETEDBY,DELETEDDATE,ALLOWOPENITEMS, SYNCDATE)    
 SELECT CATEGORYID,CATEGORYNAME,CREATEDBY
,CREATEDDATE,UPDATEDBY,UPDATEDDATE
,DELETEDBY,DELETEDDATE,ALLOWOPENITEMS, GETDATE() 
FROM @Category  Cat  
 WHERE NOT EXISTS (SELECT 1 FROM TBLCATEGORY UCAT WHERE Cat.CATEGORYID = UCAT.CATEGORYID)    

END 
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_UOM]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_UOM]
(
	@UOM UOMTYPE READONLY
)
AS
BEGIN
	UPDATE U
	SET
		U.DISPLAYVALUE = UU.DISPLAYVALUE
		, U.BASEUOMID = UU.BASEUOMID
		, U.MULTIPLIER = UU.MULTIPLIER
		, U.CREATEDDATE = UU.CREATEDDATE
		, U.UPDATEDDATE = UU.UPDATEDDATE
		, U.DELETEDDATE = UU.DELETEDDATE
		, U.SYNCDATE = GETDATE()
	FROM 
		UOM U
		INNER JOIN @UOM UU ON UU.UOMID = U.UOMID

	INSERT INTO UOM(UOMID, DISPLAYVALUE, BASEUOMID, MULTIPLIER, CREATEDDATE, UPDATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT UOMID, DISPLAYVALUE, BASEUOMID, MULTIPLIER, CREATEDDATE, UPDATEDDATE, DELETEDDATE, GETDATE()  FROM @UOM UU
	WHERE NOT EXISTS (SELECT 1 FROM UOM IU WHERE IU.UOMID = UU.UOMID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_CU_USER]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[USP_CU_USER]
(
	@User TBLUSERTYPE READONLY
)
AS
BEGIN
	UPDATE U
	SET
		U.ROLEID = UU.ROLEID
		, U.REPORTINGLEADID = UU.REPORTINGLEADID
		, U.CATEGORYID = UU.CATEGORYID
		, U.BRANCHID = UU.BRANCHID
		, U.USERNAME = UU.USERNAME
		, U.PASSWORDSTRING = UU.PASSWORDSTRING
		, U.FULLNAME = UU.FULLNAME
		, U.CNUMBER = UU.CNUMBER
		, U.EMAIL = UU.EMAIL
		, U.ISOTP = UU.ISOTP
		, U.GENDER = UU.GENDER
		, U.DOB = UU.DOB
		, U.CREATEDDATE = UU.CREATEDDATE
		, U.UPDATEDDATE = UU.UPDATEDDATE
		, U.DELETEDDATE = UU.DELETEDDATE
		, U.SYNCDATE = GETDATE()
	FROM
		TBLUSER U
		INNER JOIN @User UU ON UU.USERID = U.USERID


	INSERT INTO TBLUSER(USERID, ROLEID, REPORTINGLEADID, CATEGORYID, BRANCHID, USERNAME, PASSWORDSTRING, FULLNAME, CNUMBER, EMAIL, ISOTP, GENDER, DOB, CREATEDDATE, UPDATEDDATE, DELETEDDATE, SYNCDATE)
	SELECT USERID, ROLEID, REPORTINGLEADID, CATEGORYID, BRANCHID, USERNAME, PASSWORDSTRING, FULLNAME, CNUMBER, EMAIL, ISOTP, GENDER, DOB, CREATEDDATE, UPDATEDDATE, DELETEDDATE, GETDATE() FROM @User UR
	WHERE NOT EXISTS (SELECT 1 FROM TBLUSER IU WHERE IU.USERID = UR.USERID)
END
GO
/****** Object:  StoredProcedure [dbo].[USP_R_GETSYNCDATA]    Script Date: 11-03-2022 15:45:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_R_GETSYNCDATA]                        
(                        
 @EntityName VARCHAR(50)                        
 ,  @SyncDate DATETIME                         
 , @BranchID INT = 0                        
)                        
AS                        
BEGIN                        
                         
 IF @EntityName = 'ITEM'                        
 BEGIN                        
  SELECT ITEMID, SKUCODE, ITEMNAME, CREATEDDATE, UPDATEDATE, DELETEDDATE, ISOPENITEM, PARENTITEMID, UOMID, CATEGORYID                         
  FROM ITEM I                        
  WHERE I.SYNCDATE > @SyncDate                       
   --I.CREATEDDATE > @SyncDate                        
   --OR I.UPDATEDATE > @SyncDate                        
   --OR I.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'ITEMCODE'                        
 BEGIN                        
  SELECT ITEMCODEID, ITEMID, ITEMCODE, CREATEDDATE, UPDATEDATE, DELETEDDATE, FREEITEMCODEID, HSNCODE                         
  FROM ITEMCODE IC                        
  WHERE  IC.SYNCDATE > @SyncDate                      
   --IC.CREATEDDATE > @SyncDate                        
   --OR IC.UPDATEDATE > @SyncDate                        
   --OR IC.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'ITEMPRICE'                        
 BEGIN                        
  SELECT ITEMPRICEID, ITEMCODEID, SALEPRICE, MRP, GSTID, CREATEDDATE, UPDATEDATE, DELETEDDATE                         
  FROM ITEMPRICE IP                        
  WHERE IP.SYNCDATE > @SyncDate                  
   --IP.CREATEDDATE > @SyncDate                        
   --OR IP.UPDATEDATE > @SyncDate                        
   --OR IP.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'BRANCH'                        
 BEGIN                        
  SELECT BRANCHID, BRANCHNAME, BRANCHCODE, ADDRESS, PHONENO, LANDLINE, EMAILID, SUPERVISORID, ISWAREHOUSE, CREATEDDATE, UPDATEDATE, DELETEDDATE, STATEID                         
  FROM BRANCH B                        
  WHERE                        
   (B.BRANCHID = @BranchID OR @BranchID = 0)                        
   AND B.SYNCDATE > @SyncDate
   --(B.CREATEDDATE > @SyncDate                        
   --OR B.UPDATEDATE > @SyncDate                        
   --OR B.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'GST'                        
 BEGIN                        
  SELECT GSTID, GSTCODE, CGST, SGST, IGST, CESS, CREATEDDATE, UPDATEDATE, DELETEDDATE                         
  FROM GSTDETAIL GST                        
  WHERE GST.SYNCDATE > @SyncDate                      
   --GST.CREATEDDATE > @SyncDate                        
   --OR GST.UPDATEDATE > @SyncDate                        
   --OR GST.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'STOCKDISPATCH'                        
 BEGIN                        
  SELECT STOCKDISPATCHID, FROMBRANCHID, TOBRANCHID, STATUS, STATUSAPPROVEDBY, STATUSAPPROVEDDATE, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDATE, DELETEDBY, DELETEDDATE, DISPATCHNUMBER                        
  FROM STOCKDISPATCH SD                        
  WHERE                        
   (SD.TOBRANCHID = @BranchID OR @BranchID = 0)                        
   AND SD.SYNCDATE > @SyncDate
   --(SD.CREATEDDATE > @SyncDate                        
   --OR SD.UPDATEDATE > @SyncDate                        
   --OR SD.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'STOCKDISPATCHDETAIL'                        
 BEGIN                        
  SELECT SDD.STOCKDISPATCHDETAILID, SDD.STOCKDISPATCHID, SDD.ITEMPRICEID, SDD.TRAYNUMBER, SDD.DISPATCHQUANTITY, SDD.RECEIVEDQUANTITY                    
   , SDD.CREATEDDATE, SDD.UPDATEDATE, SDD.DELETEDDATE, SDD.WEIGHTINKGS,SDD.ISACCEPTED  
  FROM                         
   STOCKDISPATCHDETAIL SDD                        
   INNER JOIN STOCKDISPATCH SD ON SD.STOCKDISPATCHID = SDD.STOCKDISPATCHID                        
  WHERE                        
   (SD.TOBRANCHID = @BranchID OR @BranchID = 0)                        
   AND SD.SYNCDATE > @SyncDate
   --(SDD.CREATEDDATE > @SyncDate                        
   --OR SDD.UPDATEDATE > @SyncDate                        
   --OR SDD.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 --IF @EntityName = 'SUBCATEGORY'                        
 --BEGIN                        
 -- SELECT * FROM SUBCATEGORY SC                        
 -- WHERE                        
 --  SC.CREATEDDATE > @SyncDate                        
 --  OR SC.UPDATEDDATE > @SyncDate                        
 --  OR SC.DELETEDDATE > @SyncDate                     
 -- RETURN                        
 --END                        
                          
                        
 IF @EntityName = 'BRANCHCOUNTER'           BEGIN                        
  SELECT COUNTERID, COUNTERNAME, BRANCHID, CREATEDDATE, UPDATEDDATE, DELETEDDATE                         
  FROM BRANCHCOUNTER CNTR                        
  WHERE                        
   (CNTR.BRANCHID = @BranchID OR @BranchID = 0)                        
   AND CNTR.SYNCDATE > @SyncDate
   --(CNTR.CREATEDDATE > @SyncDate                        
   --OR CNTR.UPDATEDDATE > @SyncDate                        
   --OR CNTR.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 --IF @EntityName = 'DEALER'                        
 --BEGIN                        
 -- SELECT * FROM TBLDEALER DLR                        
 -- WHERE                        
 --  DLR.CREATEDDATE > @SyncDate                        
 --  OR DLR.UPDATEDDATE > @SyncDate                        
 --  OR DLR.DELETEDDATE > @SyncDate                        
 -- RETURN                        
 --END                        
                        
 IF @EntityName = 'MOP'                        
 BEGIN                        
  SELECT MOPID, MOPNAME, CREATEDDATE, UPDATEDDATE, DELETEDDATE                        
  FROM TBLMOP MOP                        
  WHERE MOP.SYNCDATE > @SyncDate                       
   --MOP.CREATEDDATE > @SyncDate                        
   --OR MOP.UPDATEDDATE > @SyncDate                        
   --OR MOP.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'ROLE'                        
 BEGIN                        
  SELECT ROLEID, ROLENAME FROM TBLROLE RL                        
  --WHERE                        
  -- RL.CREATEDATE > @SyncDate                        
  -- OR RL.UPDATEDATE > @SyncDate                        
  -- OR RL.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'USER'                        
 BEGIN                        
  SELECT USERID, ROLEID, REPORTINGLEADID, CATEGORYID, BRANCHID, USERNAME,                   
  PASSWORDSTRING, FULLNAME, CNUMBER, EMAIL, ISOTP, GENDER, DOB, CREATEDDATE, UPDATEDDATE, DELETEDDATE                        
  FROM TBLUSER USR                        
  WHERE                        
   (USR.BRANCHID = @BranchID OR @BranchID = 0)                        
   AND USR.SYNCDATE > @SyncDate
   --(USR.CREATEDDATE > @SyncDate                        
   --OR USR.UPDATEDDATE > @SyncDate           
   --OR USR.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'UOM'                        
 BEGIN                        
  SELECT UOMID, DISPLAYVALUE, BASEUOMID, MULTIPLIER, CREATEDDATE, UPDATEDDATE, DELETEDDATE              
  FROM UOM UOM                        
  WHERE UOM.SYNCDATE > @SyncDate                     
   --UOM.CREATEDDATE > @SyncDate                        
   --OR UOM.UPDATEDDATE > @SyncDate                        
   --OR UOM.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'ITEMGROUP'              
 BEGIN                        
  SELECT ITEMGROUPID, GROUPNAME, ISACTIVE, CREATEDDATE, UPDATEDDATE, DELETEDDATE                        
  FROM ITEMGROUP IG                        
  WHERE IG.SYNCDATE > @SyncDate                       
   --IG.CREATEDDATE > @SyncDate                        
   --OR IG.UPDATEDDATE > @SyncDate                        
   --OR IG.DELETEDDATE > @SyncDate                        
  RETURN               
 END                        
                        
 IF @EntityName = 'ITEMGROUPDETAIL'                        
 BEGIN                        
  SELECT ITEMGROUPDETAILID, ITEMGROUPID, ITEMCODEID, CREATEDDATE, DELETEDDATE                         
  FROM ITEMGROUPDETAIL IGD                        
  WHERE IGD.SYNCDATE > @SyncDate                        
   --IGD.CREATEDDATE > @SyncDate                        
   --OR IGD.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'OFFERTYPE'                        
 BEGIN                        
  SELECT OFFERTYPEID, OFFERTYPENAME, OFFERTYPECODE, BUYQUANTITY, FREEQUANTITY                         
  FROM OFFERTYPE OT                        
  RETURN                        
 END                   
                        
 IF @EntityName = 'OFFER'                        
 BEGIN                        
  SELECT OFFERID, OFFERNAME, OFFERCODE, STARTDATE, ENDDATE, OFFERVALUE, OFFERTYPEID, CATEGORYID                        
   , ITEMGROUPID, CREATEDDATE, UPDATEDDATE, DELETEDDATE, ISACTIVE, APPLIESTOID                         
  FROM                         
   OFFER OFR                        
  WHERE                        
   EXISTS ( SELECT 1 FROM OFFERBRANCH OFRB WHERE OFRB.BRANCHID = @BranchID OR @BranchID = 0 )                        
   AND OFR.SYNCDATE > @SyncDate
   --(OFR.CREATEDDATE > @SyncDate                        
   --OR OFR.UPDATEDDATE > @SyncDate                        
   --OR OFR.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'OFFERBRANCH'                        
 BEGIN                        
  SELECT OFFERBRANCHID, OFFERID, BRANCHID, CREATEDDATE, DELETEDDATE                        
  FROM OFFERBRANCH OFRB                        
  WHERE                        
   (OFRB.BRANCHID = @BranchID OR @BranchID = 0)                        
   AND OFRB.SYNCDATE > @SyncDate
   --(OFRB.CREATEDDATE > @SyncDate                        
   --OR OFRB.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'OFFERITEMMAP'                        
 BEGIN                        
  SELECT OFFERITEMMAPID, OFFERID, ITEMCODEID, CREATEDDATE, DELETEDDATE                         
  FROM OFFERITEMMAP OFRIM                        
  WHERE                        
   EXISTS ( SELECT 1 FROM OFFERBRANCH OFRB WHERE OFRB.BRANCHID = @BranchID OR @BranchID = 0 )                        
   AND OFRIM.SYNCDATE > @SyncDate
   --(OFRIM.CREATEDDATE > @SyncDate                        
   --OR OFRIM.DELETEDDATE > @SyncDate)                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'CLOUD_STOCKCOUNTING'                        
 BEGIN                        
  SELECT STOCKCOUNTINGID,BRANCHID,CREATEDBY,CREATEDDATE,UPDATEDBY,                       
    UPDATEDDATE,DELETEDBY,DELETEDDATE,STATUS                        
  FROM CLOUD_STOCKCOUNTING                         
  WHERE CREATEDDATE > @SyncDate                      
	OR UPDATEDDATE > @SyncDate                      
  RETURN                        
 END                        
                        
 IF @EntityName = 'CLOUD_STOCKCOUNTINGDETAIL'                        
 BEGIN                        
  SELECT SCD.STOCKCOUNTINGDETAILID,SCD.STOCKCOUNTINGID,SCD.ITEMPRICEID,                        
    SCD.QUANTITY,SCD.CREATEDDATE,SCD.UPDATEDDATE,SCD.DELETEDDATE                        
     FROM CLOUD_STOCKCOUNTINGDETAIL SCD                        
   WHERE SCD.CREATEDDATE > @SyncDate                       
   OR SCD.UPDATEDDATE > @SyncDate                       
   OR DELETEDDATE > @SyncDate                      
  RETURN                        
 END                        
          
 IF @EntityName = 'POS_BILL'                        
 BEGIN                        
  SELECT BILLID, BRANCHCOUNTERID, BILLNUMBER, CREATEDBY, CREATEDDATE,           UPDATEDBY, UPDATEDDATE, DELETEDBY, DELETEDDATE, BILLSTATUS,           
  CUSTOMERNUMBER, CUSTOMERNAME,DAYCLOSUREID            
  FROM POS_BILL B                        
  WHERE B.SYNCDATE > @SyncDate                       
   --B.CREATEDDATE > @SyncDate                        
   --OR B.UPDATEDDATE > @SyncDate                        
   --OR B.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
                        
 IF @EntityName = 'POS_BILLDETAIL'                        
 BEGIN                        
  SELECT BILLDETAILID, BILLID, BRANCHCOUNTERID, ITEMPRICEID, QUANTITY, WEIGHTINKGS, BILLEDAMOUNT,                 
  CREATEDDATE, UPDATEDDATE, DELETEDDATE, CGST                        
   , SGST, IGST, CESS, GSTVALUE, GSTID, SNO, DISCOUNT,OFFERID,DAYCLOSUREID    
  FROM POS_BILLDETAIL BD                        
  WHERE BD.SYNCDATE > @SyncDate                       
   --BD.CREATEDDATE > @SyncDate                        
   --OR BD.UPDATEDDATE > @SyncDate                        
   --OR BD.DELETEDDATE > @SyncDate                        
  RETURN                        
 END                        
          
  IF @EntityName = 'POS_BILLMOPDETAIL'                        
 BEGIN                        
  SELECT BILLMOPDETAILID,BILLID,MOPID,MOPVALUE,CREATEDDATE                  
  UPDATEDBY,UPDATEDDATE,COUNTERID  ,DAYCLOSUREID                
     FROM POS_BILLMOPDETAIL                        
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
  RETURN                        
 END                        
          
IF @EntityName = 'POS_CREFUND'                        
 BEGIN                        
  SELECT REFUNDID,BILLDETAILID,REFUNDQUANTITY,REFUNDWEIGHTINKGS,REFUNDAMOUNT,                  
  CREATEDBY,CREATEDDATE,UPDATEDBY,UPDATEDDATE,DELETEDBY,DELETEDDATE,                  
  DAYCLOSUREID,COUNTERID                  
 FROM POS_CREFUND                  
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
   --OR DELETEDDATE > @SyncDate                      
  RETURN                        
 END                  
                  
 IF @EntityName = 'POS_BREFUND'                        
 BEGIN                        
  SELECT BREFUNDID,BRANCHID,CREATEDBY,CREATEDATE,UPDATEDBY,                  
UPDATEDDATE,DELETEDBY,DELETEDDATE,STATUS,BREFUNDNUMBER,COUNTERID                  
     FROM POS_BREFUND                   
   WHERE SYNCDATE > @SyncDate
   --CREATEDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
   --OR DELETEDDATE > @SyncDate                      
  RETURN                        
 END                  
                   
 IF @EntityName = 'POS_BREFUNDDETAIL'                        
 BEGIN                        
  SELECT BREFUNDDETAILID,BREFUNDID,ITEMPRICEID,QUANTITY,WEIGHTINKGS,                  
  CREATEDDATE,UPDATEDDATE,SNO,TRAYNUMBER,COUNTERID                  
     FROM POS_BREFUNDDETAIL                  
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
  RETURN                        
 END                  
                  
  IF @EntityName = 'POS_DAYCLOSURE'                        
 BEGIN                        
  SELECT DAYCLOSUREID,CLOSUREDATE,BRANCHCOUNTERID,OPENINGBALANCE,                  
  CLOSINGBALANCE,CLOSINGDIFFERENCE,CLOSEDBY,REFUNDAMOUNT,CREATEDBY,                  
  CREATEDDATE,UPDATEDBY,UPDATEDDATE                  
     FROM POS_DAYCLOSURE                   
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
  RETURN                        
 END         
                  
 IF @EntityName = 'POS_DAYCLOSUREDETAIL'                        
 BEGIN                        
  SELECT DAYCLOSUREDETAILID,DAYCLOSUREID,DENOMINATIONID,CLOSUREVALUE,                  
  MOPID,CREATEDDATE,UPDATEDDATE,COUNTERID                  
     FROM POS_DAYCLOSUREDETAIL                        
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
  RETURN                        
 END        
         
 IF @EntityName = 'POS_DENOMINATION'                        
 BEGIN                        
  SELECT DENOMINATIONID,DISPLAYVALUE,MULTIPLIER,CREATEDDATE,UPDATEDDATE        
     FROM POS_DENOMINATION                        
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
  RETURN                        
 END        

IF @EntityName = 'TBLCATEGORY'                        
 BEGIN                        
  SELECT 
CATEGORYID
,CATEGORYNAME
,CREATEDBY
,CREATEDDATE
,UPDATEDBY
,UPDATEDDATE
,DELETEDBY
,DELETEDDATE
,ALLOWOPENITEMS
     FROM TBLCATEGORY                        
   WHERE SYNCDATE > @SyncDate
   --CREATEDDATE > @SyncDate                       
   --OR UPDATEDDATE > @SyncDate                       
   --OR DELETEDDATE > @SyncDate                       
  RETURN                        
 END        
                    
END 
GO
