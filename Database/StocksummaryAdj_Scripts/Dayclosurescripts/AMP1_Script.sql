-- DROP TABLE #Summary
-- DROP TABLE #Ledger

CREATE TABLE #Summary (ITEMID INT,SKUCODE NVARCHAR(50),ITEMNAME NVARCHAR(500), 
DIFF DECIMAL(18,2), LEDGERQUANTITY DECIMAL(18,2), LEDGERWEIGHTINKGS DECIMAL(18,2), ISPROCESSED INT, 
ISOPENITEM BIT, SSQUANTITY DECIMAL(18,2), SSWEIGHTINKGS DECIMAL(18,2))

INSERT INTO #Summary 
select I.ITEMID,I.SKUCODE,I.ITEMNAME, 
CASE WHEN ISNULL(I.ISOPENITEM,0) = 0 THEN SUM(RESULT.QUANTITY) ELSE SUM(RESULT.WEIGHTINKGS) END 
, 0 AS LEDGERQUANTITY, 0 AS LEDGERWEIGHTINKGS, 0 AS ISPROCESSED, I.ISOPENITEM, 0 AS SSQUANTITY, 0 AS SSWEIGHTINKGS
FROM
(
	SELECT PBD.ITEMPRICEID, PBD.QUANTITY, PBD.WEIGHTINKGS FROM POS_BILLDETAIL PBD
	INNER JOIN POS_BILL PB ON PBD.BILLID = PB.BILLID AND PBD.BRANCHCOUNTERID = PB.BRANCHCOUNTERID AND PBD.DAYCLOSUREID = PB.DAYCLOSUREID
	WHERE PBD.BRANCHCOUNTERID = 143 AND PBD.DAYCLOSUREID = 327 AND PB.BILLSTATUS = 1 AND PBD.DELETEDDATE IS NULL

	UNION ALL

	SELECT PBD.ITEMPRICEID, -CR.REFUNDQUANTITY AS QUANTITY, -CR.REFUNDWEIGHTINKGS AS WEIGHTINKGS FROM POS_CREFUND CR
	INNER JOIN POS_BILLDETAIL PBD ON CR.BILLDETAILID = PBD.BILLDETAILID AND CR.COUNTERID = PBD.BRANCHCOUNTERID
	INNER JOIN POS_BILL PB ON PBD.BILLID = PB.BILLID AND PBD.BRANCHCOUNTERID = PB.BRANCHCOUNTERID AND PBD.DAYCLOSUREID = PB.DAYCLOSUREID
	WHERE PBD.BRANCHCOUNTERID = 143 AND PBD.DAYCLOSUREID = 327 AND PB.BILLSTATUS = 1 AND PBD.DELETEDDATE IS NULL
) RESULT
INNER JOIN ITEMPRICE IP ON RESULT.ITEMPRICEID = IP.ITEMPRICEID
INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
INNER JOIN ITEM I ON I.ITEMID = IC.ITEMID
GROUP BY I.ITEMID,I.SKUCODE,I.ITEMNAME, I.ISOPENITEM


CREATE TABLE #Ledger(TRANSACTIONID INT, TRANSACTIONDATE DATE, CREDIT DECIMAL(11,2), DEBIT DECIMAL(11,2), TRANSACTIONTYPE VARCHAR(50), BRANCHNAME VARCHAR(100), RUNNINGBAL DECIMAL(11,2), SKUCODE VARCHAR(10), ITEMNAME VARCHAR(100))

DECLARE @ITEMID INT, @BRANCHID INT = 50, @COUNT INT = 1

DECLARE db_cursor CURSOR FOR 
SELECT ITEMID
FROM #Summary 
WHERE ISPROCESSED = 0
ORDER BY ITEMID


OPEN db_cursor  
FETCH NEXT FROM db_cursor INTO @ITEMID

WHILE @@FETCH_STATUS = 0  
BEGIN  

	--SELECT @COUNT
	SELECT @COUNT = @COUNT + 1

	DELETE FROM #Ledger

	INSERT INTO #Ledger
	EXEC USP_RPT_ITEMLEDGER1 @ItemID = @ITEMID, @FromDate ='2023-01-01', @ToDate = '2023-04-18', @BranchID = @BRANCHID

	UPDATE SS
	SET SS.LEDGERQUANTITY = CASE WHEN SS.ISOPENITEM = 0 THEN CURLED.RUNNINGBAL ELSE 0 END
		, SS.LEDGERWEIGHTINKGS = CASE WHEN SS.ISOPENITEM = 1 THEN CURLED.RUNNINGBAL ELSE 0 END
		, SS.SSQUANTITY = SSINNER.SSQUANTITY
		, SS.SSWEIGHTINKGS = SSINNER.SSWEIGHTINKGS
		, SS.ISPROCESSED = 1
	FROM
		#Summary SS
		INNER JOIN 
		( 
			SELECT TOP(1) * FROM #Ledger ORDER BY TRANSACTIONDATE DESC, TRANSACTIONID DESC
		) CURLED ON SS.ITEMID = @ITEMID
		INNER JOIN
		(
			SELECT IC.ITEMID, SUM(QUANTITY) AS SSQUANTITY, SUM(WEIGHTINKGS) AS SSWEIGHTINKGS FROM STOCKSUMMARY SSINNER 
			INNER JOIN ITEMPRICE IP ON SSINNER.ITEMPRICEID = IP.ITEMPRICEID
			INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
			WHERE SSINNER.BRANCHID = @BRANCHID
			GROUP BY IC.ITEMID
		) SSINNER ON SS.ITEMID = SSINNER.ITEMID

	FETCH NEXT FROM db_cursor INTO @ITEMID
END 

CLOSE db_cursor  
DEALLOCATE db_cursor 



select
ITEMID,SKUCODE,ITEMNAME, DIFF AS SSLDIFF, LEDGERQUANTITY, LEDGERWEIGHTINKGS, ISPROCESSED, ISOPENITEM, SSQUANTITY, SSWEIGHTINKGS,
CASE WHEN ISOPENITEM = 0 THEN LEDGERQUANTITY - SSQUANTITY ELSE LEDGERWEIGHTINKGS - SSWEIGHTINKGS END AS SSDIFF,
CASE WHEN DIFF = CASE WHEN ISOPENITEM = 0 THEN LEDGERQUANTITY - SSQUANTITY ELSE LEDGERWEIGHTINKGS - SSWEIGHTINKGS END THEN 'TRUE' ELSE 'FALSE' END AS MATCHED
from #Summary WHERE ISPROCESSED = 1
