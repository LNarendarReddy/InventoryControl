ALTER PROC [dbo].[USP_SYNC_CU_STOCKDISPATCHDETAIL]            
(            
 @StockDispatchDetail STOCKDISPATCHDETAILTYPE READONLY            
)            
AS            
BEGIN            
 UPDATE SDD            
 SET            
  SDD.STOCKDISPATCHID = USDD.STOCKDISPATCHID            
  , SDD.ITEMPRICEID = USDD.ITEMPRICEID            
  , SDD.TRAYNUMBER = USDD.TRAYNUMBER            
  , SDD.DISPATCHQUANTITY = USDD.DISPATCHQUANTITY            
  , SDD.RECEIVEDQUANTITY = USDD.RECEIVEDQUANTITY            
  , SDD.CREATEDDATE = USDD.CREATEDDATE            
  , SDD.UPDATEDATE = USDD.UPDATEDATE            
  , SDD.DELETEDDATE = USDD.DELETEDDATE            
  , SDD.WEIGHTINKGS = USDD.WEIGHTINKGS      
  ,SDD.ISACCEPTED = USDD.ISACCEPTED  
 FROM            
  STOCKDISPATCHDETAIL SDD            
  INNER JOIN @StockDispatchDetail USDD ON USDD.STOCKDISPATCHDETAILID = SDD.STOCKDISPATCHDETAILID            
  WHERE ISNULL(USDD.ISACCEPTED,0) = 1  

END
GO
ALTER PROC [dbo].[USP_SYNC_CU_DAYCLOSURE]                
(                
 @DayClosure POS_DAYCLOSURETYPE READONLY        
)                
AS                
BEGIN                
                
 MERGE STOCKSUMMARY AS Target      
 USING     
 (    
  SELECT     
   BC.BRANCHID,IC.ITEMCODEID,    
   SUM(BD.QUANTITY) AS QUANTITY,    
   SUM(BD.WEIGHTINKGS) AS WEIGHTINKGS    
  FROM     
   POS_BILLDETAIL BD    
   INNER JOIN ITEMPRICE IP ON BD.ITEMPRICEID = IP.ITEMPRICEID
   INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
   INNER JOIN POS_BILL B ON BD.BILLID = B.BILLID AND BD.BRANCHCOUNTERID = B.BRANCHCOUNTERID  AND B.DAYCLOSUREID = BD.DAYCLOSUREID  
   INNER JOIN @DayClosure UDC ON B.DAYCLOSUREID = UDC.DAYCLOSUREID AND B.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID    
   INNER JOIN BRANCHCOUNTER BC ON B.BRANCHCOUNTERID = BC.COUNTERID    
  WHERE    
 B.DELETEDDATE IS NULL AND BD.DELETEDDATE IS NULL AND B.BILLSTATUS = 1 AND  
   NOT EXISTS     
    (    
     SELECT 1 FROM POS_DAYCLOSURE DCINNER     
     WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID     
      AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID              
     )    
   GROUP BY BC.BRANCHID,IC.ITEMCODEID    
 ) AS Source            
 ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMCODEID = Target.ITEMCODEID
                
 WHEN MATCHED THEN UPDATE SET            
 Target.QUANTITY = ISNULL(Target.QUANTITY,0) - ISNULL(Source.QUANTITY,0),            
 Target.WEIGHTINKGS = ISNULL(Target.WEIGHTINKGS,0) - ISNULL(Source.WEIGHTINKGS,0);    
    
 MERGE STOCKSUMMARY AS Target      
 USING     
 (    
  SELECT     
   BC.BRANCHID,IC.ITEMCODEID,    
   SUM(CR.REFUNDQUANTITY) AS QUANTITY,    
   SUM(CR.REFUNDWEIGHTINKGS) AS WEIGHTINKGS    
  FROM     
   POS_CREFUND CR    
   INNER JOIN POS_BILLDETAIL BD ON CR.BILLDETAILID = BD.BILLDETAILID AND CR.COUNTERID = BD.BRANCHCOUNTERID  AND CR.DAYCLOSUREID = BD.DAYCLOSUREID  
   INNER JOIN ITEMPRICE IP ON BD.ITEMPRICEID = IP.ITEMPRICEID
   INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID
   INNER JOIN @DayClosure UDC ON CR.DAYCLOSUREID = UDC.DAYCLOSUREID  AND CR.COUNTERID = UDC.BRANCHCOUNTERID    
   INNER JOIN BRANCHCOUNTER BC ON CR.COUNTERID = BC.COUNTERID    
  WHERE NOT EXISTS     
   (    
    SELECT 1 FROM POS_DAYCLOSURE DCINNER     
    WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID              
       AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID              
   )    
   AND CR.DELETEDDATE IS NULL  
  GROUP BY BC.BRANCHID,IC.ITEMCODEID    
 ) AS Source            
 ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMCODEID = Target.ITEMCODEID      
                
 WHEN MATCHED THEN UPDATE SET            
 Target.QUANTITY = ISNULL(Target.QUANTITY,0) + ISNULL(Source.QUANTITY,0),            
 Target.WEIGHTINKGS = ISNULL(Target.WEIGHTINKGS,0) + ISNULL(Source.WEIGHTINKGS,0);    
  
 INSERT INTO POS_DAYCLOSURE(DAYCLOSUREID,CLOSUREDATE,BRANCHCOUNTERID,OPENINGBALANCE,            
  CLOSINGBALANCE,CLOSINGDIFFERENCE,CLOSEDBY,REFUNDAMOUNT,CREATEDBY,CREATEDDATE,            
  UPDATEDBY,UPDATEDDATE)                
 SELECT DAYCLOSUREID,CLOSUREDATE,BRANCHCOUNTERID,OPENINGBALANCE,            
  CLOSINGBALANCE,CLOSINGDIFFERENCE,CLOSEDBY,REFUNDAMOUNT,CREATEDBY,CREATEDDATE,            
  UPDATEDBY,UPDATEDDATE            
 FROM @DayClosure UDC              
 WHERE NOT EXISTS                
  (                
   SELECT 1 FROM POS_DAYCLOSURE DCINNER WHERE DCINNER.DAYCLOSUREID = UDC.DAYCLOSUREID              
   AND DCINNER.BRANCHCOUNTERID = UDC.BRANCHCOUNTERID              
  )    
    
  UPDATE BC  
  SET   
 BC.DAYCLOSUREID = MAXDC.MAXDAYCLOSUREID  
 , UPDATEDDATE = GETDATE()  
  FROM   
 BRANCHCOUNTER BC  
 INNER JOIN   
  (  
   SELECT DC.BRANCHCOUNTERID, MAX(DC.DAYCLOSUREID) AS MAXDAYCLOSUREID   
   FROM @DayClosure DC   
   GROUP BY DC.BRANCHCOUNTERID  
  ) MAXDC ON MAXDC.BRANCHCOUNTERID = BC.COUNTERID  
 WHERE ISNULL(BC.DAYCLOSUREID, 0) < MAXDC.MAXDAYCLOSUREID  
END 
GO
ALTER PROC [dbo].[USP_SYNC_CU_STOCKDISPATCH]  
(  
 @StockDispatch STOCKDISPATCHTYPE READONLY  
)  
AS  
BEGIN  

MERGE STOCKSUMMARY AS Target        
 USING       
 (      
  SELECT       
   USD.TOBRANCHID AS BRANCHID,IC.ITEMCODEID,      
   SUM(SDD.RECEIVEDQUANTITY) AS QUANTITY,      
   SUM(SDD.WEIGHTINKGS) AS WEIGHTINKGS      
  FROM       
   STOCKDISPATCHDETAIL SDD
   INNER JOIN ITEMPRICE IP ON SDD.ITEMPRICEID = IP.ITEMPRICEID  
   INNER JOIN ITEMCODE IC ON IP.ITEMCODEID = IC.ITEMCODEID  
   INNER JOIN @StockDispatch USD ON SDD.STOCKDISPATCHID = USD.STOCKDISPATCHID
  WHERE USD.STATUS = 2 AND
   NOT EXISTS       
    (      
     SELECT 1 FROM STOCKDISPATCH SDINNER
     WHERE SDINNER.STOCKDISPATCHID = USD.STOCKDISPATCHID
      AND USD.STATUS = 2
     )      
   GROUP BY USD.TOBRANCHID,IC.ITEMCODEID      
 ) AS Source              
 ON Source.BRANCHID = Target.BRANCHID AND Source.ITEMCODEID = Target.ITEMCODEID  
                  
 WHEN MATCHED THEN UPDATE SET
 Target.QUANTITY = Target.QUANTITY + Source.QUANTITY,
 Target.WEIGHTINKGS = Target.WEIGHTINKGS + Source.WEIGHTINKGS,
 Target.INTRANSITQUANTITY = Target.INTRANSITQUANTITY - Source.QUANTITY,
 Target.INTRANSITWEIGHTINKGS = Target.INTRANSITWEIGHTINKGS - Source.WEIGHTINKGS;


 UPDATE SD  
 SET           
  SD.FROMBRANCHID = USD.FROMBRANCHID  
  , SD.TOBRANCHID = USD.TOBRANCHID  
  , SD.STATUS = USD.STATUS  
  , SD.STATUSAPPROVEDBY = USD.STATUSAPPROVEDBY  
  , SD.STATUSAPPROVEDDATE = USD.STATUSAPPROVEDDATE  
  , SD.CREATEDDATE = USD.CREATEDDATE  
  , SD.UPDATEDATE = USD.UPDATEDATE  
  , SD.DELETEDDATE = USD.DELETEDDATE  
  , SD.DISPATCHNUMBER = USD.DISPATCHNUMBER  
  , SD.CREATEDBY = USD.CREATEDBY  
  , SD.UPDATEDBY = USD.UPDATEDBY  
  , SD.DELETEDBY = USD.DELETEDBY  
 FROM  
  STOCKDISPATCH SD  
  INNER JOIN @StockDispatch USD ON USD.STOCKDISPATCHID = SD.STOCKDISPATCHID  
  WHERE USD.STATUS = 2
 
END  
GO